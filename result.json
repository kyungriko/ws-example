{"dataType":"Map","value":[[["title","dataset 기능 - userData"],["tmp",""]],[["title","스크립트로 class 제어하기"],["tmp","컴포넌트 공통\n[컴포넌트 공통] 스크립트로 class 제어하기\n〈\n/page/P00029.xmladdClasschangeClassclasshasClassremoveClasstoggleClass\n〉\n예제와 가이드 함께 보기\n컴포넌트의 class를 제어하는 API 사용 예제입니다.\n아래의 API로 class를 제어 할 수 있습니다.\n- class 추가 : addClass\n- class 변경 : changeClass\n- class 제거 : removeClass\n- class 토글 : toggleClass\n- class 유무 확인 : hasClass\nclass 추가하기\nInput 컴포넌트에 class \"P00029_exam1\"를 추가합니다.\nclass 변경하기\nInput 컴포넌트에 정의된 class \"P00029_exam1\"를 \"P00029_exam2\"로 변경합니다.\nclass 제거하기\nInput 컴포넌트에 정의된 class \"P00029_exam1\"를 제거합니다.\nclass 토글하기\nInput 컴포넌트에 정의된 class \"P00029_exam2\"를 토글합니다.\nclass 유무 반환받기\nInput 컴포넌트에 class \"P00029_exam1\"의 유무를 반환합니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [InputBox에 class 추가하기] 클릭 시\n * [컴포넌트 ID].addClass(className);\n * ex) ibx_exam1.addClass(\"P00029_exam1\");\n */\nscwin.btn_ex1_onclick = function (e) {\n //컴포넌트의 class 속성에 \"P00029_exam1\" 추가하기\n ibx_exam1.addClass(\"P00029_exam1\");\n};\n\n/**\n * [InputBox의 class 변경하기] 클릭 시\n * [컴포넌트 ID].changeClass(oldClassName, newClassName);\n * ex) ibx_exam2.changeClass(\"P00029_exam1\", \"P00029_exam2\");\n */\nscwin.btn_ex2_onclick = function (e) {\n //컴포넌트의 class 속성에 정의된 \"P00029_exam1\" class 제거하고 \"P00029_exam2\"를 추가한다.\n //oldClassName이 정의되어 있지 않은 경우에도 newClassName가 추가된다.\n ibx_exam2.changeClass(\"P00029_exam1\", \"P00029_exam2\");\n};\n\n/**\n * [InputBox의 class 제거하기] 클릭 시 - P00029_exam1 class를 삭제합니다.\n * [컴포넌트 ID].removeClass(className);\n * ex) ibx_exam3.removeClass(\"P00029_exam1\");\n */\nscwin.btn_ex3_onclick = function (e) {\n //컴포넌트의 class 속성에 정의된 \"P00029_exam1\" class를 제거한다.\n ibx_exam3.removeClass(\"P00029_exam1\");\n};\n\n/**\n * [InputBox의 class 토글하기] 클릭 시\n * [컴포넌트 ID].toggleClass(className);\n * ex) ibx_exam4.toggleClass(\"P00029_exam2\");\n */\nscwin.btn_ex4_onclick = function (e) {\n //컴포넌트의 class 속성에 정의된 \"P00029_exam2\" class를 토글한다.\n ibx_exam4.toggleClass(\"P00029_exam2\");\n};\n\n/**\n * [InputBox의 class 유무 판단하기] 클릭 시\n * [컴포넌트 ID].hasClass(className);\n * ex) ibx_exam5.hasClass(\"P00029_exam1\");\n */\nscwin.btn_ex5_onclick = function (e) {\n var tmpRet;\n var strLog;\n\n //컴포넌트의 class 속성에 정의된 \"P00029_exam1\" 존재 유무를 boolean으로 반환한다.\n tmpRet = ibx_exam5.hasClass(\"P00029_exam1\");\n\n strLog = \"반환값 : \" + tmpRet + \" (data type : \" + typeof tmpRet + \")\";\n\n //반환값 alert\n alert(strLog);\n};"]],[["title","스크립트로 style 제어하기"],["tmp",""]],[["title","스크립트로 이벤트 발생시키기"],["tmp",""]],[["title","스크립트로 이벤트 연결(추가)하기"],["tmp",""]],[["title","스크립트로 이벤트 해제(제거)하기"],["tmp",""]],[["title","컴포넌트의 이름(pluginName) 반환받기"],["tmp",""]],[["title","클라이언트 다국어 KEY가 등록되지 않는 경우 label, value 출력하기 - useDefaultLabel"],["tmp",""]],[["title","클라이언트 다국어 적용하기 - localeRef"],["tmp",""]],[["title","클라이언트 다국어 적용하기(목록) - useItemLocale"],["tmp",""]],[["title","클라이언트 다국어 적용하기(툴팁) - tooltipLocaleRef"],["tmp",""]],[["title","패널의 확장/축소 초기 상태 설정하기"],["tmp",""]],[["title","한 패널을 연 후에 다른 패널을 열 경우, 처음 연 패널(들)을 열린 채로 유지하기"],["tmp",""]],[["title","DataList와 바인딩하여 선택 항목을 설정하기"],["tmp",""]],[["title","label, value, delimiter를 이용하여 선택 항목을 표시하기"],["tmp","AutoComplete\n[AutoComplete] label, value, delimiter를 이용하여 선택 항목을 표시하기\n〈\n/page/P00250.xmlAutoCompletedelimiterdisplayModedisplayModeSyncsearchTarget\n〉\n예제와 가이드 함께 보기\nAutoComplete의 선택 목록을 \"label delimiter value\" 형식으로 표시하는 예제입니다.\ndisplayModeSync는 편집 모드에서 displayMode에서 설정한 형식으로 표현하기 위한 설정 값 입니다.\n단, searchTarget이 \"both\" 일 때만 적용됩니다.\ndelimiter=\"label delimiter value\"\nAutoComplete의 선택 목록을 확인하면 \"Label - Value\" 형태로 표시됨을 확인할 수 있습니다.\n- 선택 -\ndisplayModeSync=\"true\"\nAutoComplete에서 선택 목록을 중 하나를 선택합니다.\n이 후 다시 선택해 편집 모드에 들어 갔을 때 \"label delimiter value\"로 표시됨을 확인할 수 있습니다.\n- 선택 -\nDataList\nAutoComplete에 연동되어 있는 DataCollection을 보여주는 GridView입니다.\nCell을 더블클릭해서 수정하면 AutoComplete의 표시 되는 값이 변경됩니다.\nLabel Value\n1 Seoul SE\n2 Paris PA\n3 London LN\nSee Also\n[AutoComplete] DataList와 바인딩하여 선택 항목을 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function() {\n};"]],[["title","onchange와 onviewchange 비교하기"],["tmp",""]],[["title","검색어 강조하기"],["tmp","AutoComplete\n[AutoComplete] 검색어 강조하기\n〈\n/page/P00064.xmlAutoCompleteuseKeywordHighlight\n〉\n예제와 가이드 함께 보기\n검색어를 \"b\" 또는 \"B\" 로 입력하여 테스트하면 설정별 동작 비교가 가능합니다.\nAutoComplete - 기본(검색어 강조 안함)\nblueberry\nAutoComplete - 검색어 강조\nuseKeywordHighlight=\"true\"\nblueberry\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","검색어의 일치 조건 지정하기"],["tmp",""]],[["title","대소문자를 구분하지 않고 검색하기"],["tmp",""]],[["title","목록에서 항목이 선택되었을 때의 이벤트 핸들러 등록하기"],["tmp","AutoComplete\n[AutoComplete] 목록에서 항목이 선택되었을 때의 이벤트 핸들러 등록하기\n〈\n/page/P00069.xmlAutoCompleteonitemclickonselected\n〉\n예제와 가이드 함께 보기\n검색어 \"b\"를 입력 후 목록에서 항목을 클릭하거나 방향키를 이용하여 항목을 선택합니다.\n로그 확인 영역에 로그가 출력됩니다.\nAutoComplete\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * acb_exam 컴포넌트의 이벤트 onselected 핸들러\n */\nscwin.acb_exam_onselected = function (info) {\n var strLog;\n\n var _newSelectedIndex = info.newSelectedIndex; //선택된 항목의 index\n var _newValue = info.newValue; //선택된 값\n var _oldSelectedIndex = info.oldSelectedIndex; //이전에 선택된 항목의 index\n var _oldValue = info.oldValue; //이전 값\n\n //이벤트 확인용 로그 출력\n console.log(\"scwin.acb_exam_onselected >> \", info);\n\n $c.frame.printExampleLog(\"scwin.acb_exam_onselected\", txa_log);\n $c.frame.printExampleLog(\"info : \\n\" + JSON.stringify(info, null, \"\\t\"), txa_log, false);\n strLog = \"info.newSelectedIndex : \" + _newSelectedIndex + \"\\n\";\n strLog += \"info.newValue : \" + _newValue + \"\\n\";\n strLog += \"info.oldSelectedIndex : \" + _oldSelectedIndex + \"\\n\";\n strLog += \"info.oldValue : \" + _oldValue;\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //로직 구성\n};\n\n/**\n * acb_exam 컴포넌트의 이벤트 onitemclick 핸들러\n */\nscwin.acb_exam_onitemclick = function (index) {\n //이벤트 확인용 로그 출력\n console.log(\"scwin.acb_exam_onitemclick >> \", index);\n\n $c.frame.printExampleLog(\"scwin.acb_exam_onitemclick\", txa_log);\n $c.frame.printExampleLog(\"index : \" + index, txa_log, false);\n\n //로직 구성\n};\n\n/**\n * 로그 출력용 함수\n */\nscwin.printLog = function (argStr) {\n var strLog;\n strLog = txa_log.getValue();\n txa_log.setValue(strLog + \"\\n\" + argStr);\n\n};\n\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n //textarea value를 빈문자열로 할당.\n txa_log.setValue(\"\");\n};"]],[["title","선택 목록의 값과 일치하는 값이 입력될 경우, nextTabID 컴포넌트로 포커스를 이동하기"],["tmp","AutoComplete\n[AutoComplete] 선택 목록의 값과 일치하는 값이 입력될 경우, nextTabID 컴포넌트로 포커스를 이동하기\n〈\n/page/P00197.xmlAutoCompletefocus\n〉\n예제와 가이드 함께 보기\nAutoComplete의 선택 목록의 값과 일치하는 값이 입력될 경우, nextTabID에 입력된 컴포넌트로 포커스를 자동으로 이동하도록 설정할 수 있습니다.\nAutoComplete\nAutoComplete에 선택 목록의 값과 일치하는 값을 입력하면 AutoComplete의 nextTabId에 설정된 컴포넌트로 컴포넌트가 이동합니다.\n입력 값 예시 : red, green, blue ...\n설정된 nextTabId=\"ibx_1\"\n- 선택 -\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function() {\n};"]],[["title","입력창에서 Enter 또는 Tab 키가 입력되었을 때 이벤트 핸들러 등록하기"],["tmp",""]],[["title","입력창에서 키를 눌렀다 떼었을 때(Key Up)의 이벤트 핸들러 등록하기"],["tmp",""]],[["title","특정 키들의 동작(기능)을 방지하기"],["tmp",""]],[["title","특정 항목 비활성화 하기"],["tmp",""]],[["title","특정 항목 표시하지 않기"],["tmp",""]],[["title","달력의 요일을 이미지 또는 텍스트로 표시하기"],["tmp",""]],[["title","지정된 휴일 제거하기"],["tmp",""]],[["title","특정 날짜를 휴일로 지정하기"],["tmp","Calendar\n[Calendar] 특정 날짜를 휴일로 지정하기\n〈\n/page/P00073.xmlCalendarsetHoliday\n〉\n예제와 가이드 함께 보기\nCalendar - 기본\n2023년\n4월\n26 27 28 29 30 31 1\n2 3 4 5 6 7 8\n9 10 11 12 13 14 15\n16 17 18 19 20 21 22\n23 24 25 26 27 28 29\n30 1 2 3 4 5 6\n2023/04/24\nCalendar - 휴일 지정\n(매년 1월 1일, 3월 1일, 5월 5일, 6월 6일, 8월 15일, 10월 3일, 10월 9일, 12월 25일)\n2023년\n4월\n26 27 28 29 30 31 1\n2 3 4 5 6 7 8\n9 10 11 12 13 14 15\n16 17 18 19 20 21 22\n23 24 25 26 27 28 29\n30 1 2 3 4 5 6\n2023/04/24\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //매년 1월 1일, 3월 1일, 5월 5일, 6월 6일, 8월 15일, 10월 3일, 10월 9일, 12월 25일을 휴일로 지정\n cal_exam2.setHoliday(\"*0101,*0301,*0505,*0606,*0815,*1003,*1009,*1225\");\n};\n\n\n/**\n * 버튼 [지정된 휴일을 제거하고 매년 5월 5일을 휴일로 지정하기]의 onclick 핸들러\n */\nscwin.btn_exam1_onclick = function (e) {\n //기존 설정을 제거하고, 매년 5월 5일을 휴일로 지정하기\n cal_exam2.setHoliday(\"*0505\", true);\n};"]],[["title","특정 날짜를 휴일로 지정하기 - DataList 연결"],["tmp",""]],[["title","표시할 주(Week)의 수 정의하기"],["tmp",""]],[["title","DataList와 연결하여 선택 항목을 설정하기"],["tmp",""]],[["title","특정 항목 비활성화 하기"],["tmp",""]],[["title","특정 항목 표시하지 않기"],["tmp","Checkbox\n[CheckBox] 특정 항목 표시하지 않기\n〈\n/page/P00078.xmlCheckboxvisibleColumnvisibleColumnFalseValue\n〉\n예제와 가이드 함께 보기\nCheckBox - 기본\nApple\nPear\nGrapes\nWatermelon\nPeach\nCheckBox - 항목 숨김 지정\nApple\nGrapes\nPeach\nCheckBox - 항목 숨김 지정 - 스크립트\nApple\nPear\nGrapes\nWatermelon\nPeach\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * CheckBox - 항목 숨김 지정 - 스크립트\n * 버튼 [항목 숨기기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //컴포넌트 cbx_exam3의 숨길 항목의 컬럼과 조건값 설정\n //항목 숨기기 컬럼 및 숨기기 값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 항목을 숨깁니다.\n cbx_exam3.setVisibleColumn(\"useYN\", \"N\");\n};"]],[["title","목록 표시 - 열 개수 지정"],["tmp",""]],[["title","선택된 항목 출력하기 - 구분자 설정"],["tmp",""]],[["title","선택된 항목 출력하기 - 연속된 항목"],["tmp","Checkcombobox\n[CheckCombobox] 선택된 항목 출력하기 - 연속된 항목\n〈\n/page/P00085.xmlCheckcomboboxrangeSeparator\n〉\n예제와 가이드 함께 보기\n목록에서 연속된 순서의 항목을 선택하여 선택된 값의 출력 상태를 비교합니다.\nCheckCombobox - 기본\nCheckCombobox\n연속된 선택 항목 표시 설정\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\" },\n { \"label\": \"Pear\", \"code\": \"02\" },\n { \"label\": \"Lime\", \"code\": \"03\" },\n { \"label\": \"Grapes\", \"code\": \"04\" },\n { \"label\": \"Kiwi\", \"code\": \"05\" },\n { \"label\": \"Watermelon\", \"code\": \"06\" },\n { \"label\": \"Peach\", \"code\": \"07\" }\n ]);\n};"]],[["title","특정 항목 비활성화 하기"],["tmp",""]],[["title","특정 항목 표시하지 않기"],["tmp","Checkcombobox\n[CheckCombobox] 특정 항목 표시하지 않기\n〈\n/page/P00080.xmlCheckcomboboxvisibleColumnvisibleColumnFalseValue\n〉\n예제와 가이드 함께 보기\nCheckCombobox - 기본\nCheckCombobox - 항목 숨김 지정\nCheckCombobox - 항목 숨김 지정 - 스크립트\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * CheckCombobox - 항목 숨김 지정 - 스크립트\n * 버튼 [항목 숨기기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //컴포넌트 ccb_exam3의 숨길 항목의 컬럼과 조건값 설정\n //항목 숨기기 컬럼 및 숨기기 값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 항목을 숨깁니다.\n ccb_exam3.setVisibleColumn(\"useYN\", \"N\");\n};"]],[["title","특정 항목 표시하지 않기"],["tmp",""]],[["title","항목 선택하기 - 마우스 드래깅"],["tmp","Checkcombobox\n[CheckCombobox] 항목 선택하기 - 마우스 드래깅\n〈\n/page/P00081.xmlCheckcomboboxuseDrag드래그\n〉\n예제와 가이드 함께 보기\n컴포넌트의 항목을 마우스를 이용하여 드래깅하여 선택하는 예제입니다.\n목록에서 마우스를 드래깅하여 항목의 선택 여부를 비교합니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\nCheckCombobox - 기본\nCheckCombobox\n항목 선택 시 마우스 드래깅 허용\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\" },\n { \"label\": \"Pear\", \"code\": \"02\" },\n { \"label\": \"Grapes\", \"code\": \"03\" },\n { \"label\": \"Watermelon\", \"code\": \"04\" },\n { \"label\": \"Peach\", \"code\": \"05\" }\n ]);\n};"]],[["title","항목 선택하기 - 키보드 입력"],["tmp",""]],[["title","기본 기능"],["tmp","Generator\n[Generator] 기본 기능\n〈\n/page/P00035.xmlGeneratorbasic\n〉\n예제와 가이드 함께 보기\nLable\nLable\nLable\nLable\nLable\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //5회 자식 컴포넌트 추가.\n scwin.generator_addItem(5);\n};\n\n/**\n * [addItem] 버튼 click 시 발생.\n * 자식 컴포넌트를 추가한다.\n*/\nscwin.btn_addItem_onclick = function (e) {\n //자식 컴포넌트 추가\n scwin.generator_addItem(1);\n};\n\n/**\n * Generator 컴포넌트에 자식 추가.\n * argNumLoop 만큼 자식 컴포넌트를 추가한다.\n * \n * @date 2022. 04. 27\n * @param {number} 반복수\n * @returns \n*/\nscwin.generator_addItem = function (argNumLoop) {\n var numLastIndex;\n var i;\n var cmpTmp;\n\n argNumLoop = argNumLoop || 1;\n\n numLastIndex = gen_box.getLength();\n\n for (i = 0; i < argNumLoop; i++) {\n gen_box.insertChild();\n\n cmpTmp = gen_box.getChild(numLastIndex, \"tbx_gen_label\");\n cmpTmp.addClass(\"ws5_example_bg\" + (numLastIndex % 2));\n\n cmpTmp = gen_box.getChild(numLastIndex, \"ibx_gen_input\");\n cmpTmp.setValue(\"index : \" + numLastIndex);\n cmpTmp.setUserData(\"eduKey\", \"edu\" + numLastIndex);\n\n numLastIndex++;\n }\n};\n\n/**\n * [getValue] 버튼 click 시 발생.\n * inputbox의 value를 alert한다.\n * \n*/\nscwin.btn_gen_trigger_onclick = function (e) {\n var numIndex;\n var cmpInput;\n\n numIndex = this.getGeneratedIndex();\n\n cmpInput = gen_box.getChild(numIndex, \"ibx_gen_input\");\n\n alert(cmpInput.getValue());\n};\n\n/**\n * [removeAll] 버튼 click 시 발생.\n * 반복된 자식 컴포넌트 전체를 삭제.\n */\nscwin.btn_removeAll_onclick = function (e) {\n //반복된 자식 컴포넌트 전체를 삭제한다.\n gen_box.removeAll();\n};\n\n/**\n * [remove] 버튼 click 시 발생\n*/\nscwin.btn_gen_remove_onclick = function (e) {\n var cmpGenerator;\n var numIndex;\n\n //Generator 컴포넌트를 반환한다. Generator의 ID를 알고 있는 경우 직접 접근이 가능.\n cmpGenerator = this.getGenerator();\n\n //현재 index를 반환한다.\n numIndex = this.getGeneratedIndex();\n\n //index에 해당하는 반복부(자식 컴포넌트 집합)를 삭제한다.\n cmpGenerator.removeChild(numIndex);\n};\n\n/**\n * [getIndex] 버튼 click 시 발생.\n * 현재 index를 반환한다.\n */\nscwin.btn_gen_getIndex_onclick = function (e) {\n var numIndex;\n\n //현재 index를 반환한다.\n numIndex = this.getGeneratedIndex();\n\n alert(numIndex);\n};"]],[["title","A컬럼의 선택값에 따라 B컬럼 목록 구성하기"],["tmp",""]],[["title","CSV 다운로드 시 다운로드할 데이터 출처 설정하기"],["tmp","GridView\n[GridView] CSV 다운로드 시 다운로드할 데이터 출처 설정하기\n〈\n/page/P00244.xmldelimgridgridViewremoveQuotationsaveCSVtype그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 데이터를 CSV로 다운로드 시 다운로드할 데이터를 지정하는 예제입니다.\nGridView의 함수 'saveCSV'의 옵션 'type'으로 다운로드할 데이터를 지정합니다.\n옵션의 설명은 아래와 같습니다.\n- type : [default: 1, 0] 사용할 데이터. 0: value 값 사용. 1: 화면의 출력 값 사용.\n더보기\n\n\n\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [CSV 다운로드 - (기본 값) 화면의 출력 값으로 다운로드] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00244_TYPE1.csv\", //파일명\n type: \"1\" //다운로드할 데이터 - 화면의 출력 값\n };\n\n //GridView 'grd_exam1'의 데이터를 CSV 형식으로 다운로드합니다.\n grd_exam1.saveCSV(jsnOptions);\n};\n\n/**\n * 버튼 [CSV 다운로드 - value로 다운로드] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00244_TYPE2.csv\", //파일명\n type: \"0\" //다운로드할 데이터 - value\n\n };\n\n //GridView 'grd_exam1'의 데이터를 CSV 형식으로 다운로드합니다.\n grd_exam1.saveCSV(jsnOptions);\n};"]],[["title","CSV 다운로드하기"],["tmp",""]],[["title","Enter 키를 입력할 때의 동작 방식 설정하기"],["tmp",""]],[["title","Event - oncellclick (셀을 클릭할 때 발생)"],["tmp",""]],[["title","Event - oncelldblclick (셀을 더블 클릭할 때 발생)"],["tmp","GridView\n[GridView] Event - oncelldblclick (셀을 더블 클릭할 때 발생)\n〈\n/page/P00218.xmlgridgridView그리드뷰이벤트\n〉\n예제와 가이드 함께 보기\nGridView의 이벤트 onCellDblClick 예제입니다.\nonCellDblClick 이벤트는 Body영역의 셀이 더블 클릭된 경우 발생합니다.\n지정된 이벤트 핸들러에서 클릭된 셀의 row index, column index, column id 값을 확인할 수 있습니다.\noncellclick과 함께 사용하는 경우 oncellclick이 2회 발생한 이후에 oncelldblclick이 발생합니다.\ndblclick이 발생하려면 반드시 click이 2회 발생해야 하므로 dblclick과 click을 별개의 동작으로 구분하여 이벤트를 처리할 수 없습니다.\n컴포넌트의 이벤트 발생 시 영역 [로그 확인]의 textarea 또는 브라우저 개발자도구 콘솔에 로그가 출력됩니다.\nGridView의 oncelldblclick 이벤트 핸들러 등록\nBody영역의 셀을 더블 클릭하여 [로그 확인]영역의 로그를 확인합니다.\n컬럼 '도서명'의 셀을 더블 클릭하면 행의 JSON 데이터가 출력됩니다.\n도서명 정가 출간일\n1 불편한 편의점 14,000 2021-04-20\n2 사람일까 상황일까 28,000 2019-08-26\n3 내가 틀릴 수도 있습니다 16,000 2022-04-18\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"불편한 편의점\", \"price\": \"14000\", \"published_date\": \"20210420\" },\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"인간 실격\", \"price\": \"9000\", \"published_date\": \"20040515\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"JavaScript Patterns\", \"price\": \"22000\", \"published_date\": \"20111103\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * GridView grd_exam1의 oncelldblclick 이벤트 핸들러\n */\nscwin.grd_exam1_oncelldblclick = function (row, col, colId) {\n let strLog = \"\";\n\n strLog += \"** scwin.grd_exam1_oncelldblclick ** \\n\";\n strLog += \"row index : \" + row + \"\\n\";\n strLog += \"column index : \" + col + \"\\n\";\n strLog += \"column id : \" + colId;\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //console에 log 출력\n console.log(strLog);\n\n //컬럼별 로직 구현 예시 - 도서명을 double click한 경우 현재 행의 데이터를 JSON으로 출력\n switch (colId) {\n case \"book_name\":\n //연결된 DataList를 모르는 경우\n //let jsnRowData = $p.getComponentById(this.getDataList()).getRowJSON(row);\n\n //연결된 DataList를 아는 경우\n let jsnRowData = dlt_books_1.getRowJSON(row);\n\n //textarea에 log 출력\n $c.frame.printExampleLog(\"JSON Data : \" + JSON.stringify(jsnRowData), txa_log, false);\n\n //console에 log 출력\n console.log(jsnRowData);\n break;\n case \"price\":\n break;\n case \"published_date\":\n break;\n default:\n break;\n }\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","Event - oncontextopen (컨텍스트 메뉴가 표시될 때 발생)"],["tmp","GridView\n[GridView] Event - oncontextopen (컨텍스트 메뉴가 표시될 때 발생)\n〈\n/page/P00219.xmlcontextMenugridgridViewuseHeaderContextMenu그리드뷰이벤트\n〉\n예제와 가이드 함께 보기\nGridView의 이벤트 onContextOpen 예제입니다.\nonContextOpen 이벤트는 컨텍스트 메뉴가 열릴 때 발생합니다.\n지정된 이벤트 핸들러에서 클릭된 셀의 row index, column index, focuced cell info, header info를 확인할 수 있습니다.\n이 이벤트는 GridView의 속성 contextMenu=\"true\" 또는 useHeaderContextMenu=\"true\"가 설정되어야 합니다.\n컴포넌트의 이벤트 발생 시 영역 [로그 확인]의 textarea 또는 브라우저 개발자도구 콘솔에 로그가 출력됩니다.\n이벤트 oncontextopen 발생 시 로그 출력하기\n셀에서 마우스 오른쪽 버튼을 클릭하여 [로그 확인]영역의 로그를 확인합니다.\nNO 상태 도서명 정가\n1 불편한 편의점 14,000\n2 사람일까 상황일까 28,000\n3 내가 틀릴 수도 있습니다 16,000\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"불편한 편의점\", \"price\": \"14000\" },\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\" },\n { \"book_name\": \"인간 실격\", \"price\": \"9000\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\" },\n { \"book_name\": \"JavaScript Patterns\", \"price\": \"22000\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * GridView grd_exam1의 oncontextopen 이벤트 핸들러\n */\nscwin.grd_exam1_oncontextopen = function (rowIndex, colIndex, arrJsnFocusedCell, jsnHeaderInfo) {\n let strLog = \"\";\n\n strLog += \"** scwin.grd_exam1_oncontextopen ** \\n\";\n strLog += \"row index : \" + rowIndex + \"\\n\";\n strLog += \"column index : \" + colIndex + \"\\n\";\n strLog += \"body focused cell info : \" + JSON.stringify(arrJsnFocusedCell) + \"\\n\";\n strLog += \"header info : \" + JSON.stringify(jsnHeaderInfo);\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //console에 log 출력\n console.log(strLog);\n console.log(rowIndex, colIndex, arrJsnFocusedCell, jsnHeaderInfo);\n\n //header cell에서 열린 경우 rowIndex 값은 -1 입니다.\n if (rowIndex == -1) {\n //header cell에서 열린 경우\n switch (jsnHeaderInfo.headerId) {\n case \"_headerRowStatus\": //컬럼 rowNum\n console.log(\"header rowNum\");\n break;\n case \"_headerRowNumber\": //컬럼 rowStatus\n console.log(\"header rowStatus\");\n break;\n default:\n break;\n }\n } else {\n //body cell에서 열린 경우\n switch (colIndex) {\n case \"rowNum\": //컬럼 rowNum\n console.log(\"body rowNum\");\n break;\n case \"rowStatus\": //컬럼 rowStatus\n console.log(\"body rowStatus\");\n break;\n default:\n break;\n }\n }\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","Event - ondateselect (inputType이 calendar이고, 사용자가 달력 UI에서 일(day)을 선택했을 때 발생)"],["tmp",""]],[["title","Event - onmonthselect (inputType이 calendar이고, 사용자가 달력 UI에서 월(month)을 선택했을 때 발생)"],["tmp","GridView\n[GridView] Event - onmonthselect (inputType이 calendar이고, 사용자가 달력 UI에서 월(month)을 선택했을 때 발생)\n〈\n/page/P00227.xmlgridgridView그리드뷰이벤트\n〉\n예제와 가이드 함께 보기\nGridView의 이벤트 onMonthSelect 예제입니다.\n이 이벤트는 컬럼의 inputType이 'calendar'로 지정되고, 사용자가 셀의 편집 모드에서 달력 UI의 '월'(month)을 선택했을 때 발생합니다.\n월이 출력된 SelectBox에서 값을 선택해야 합니다. (상단 좌우 아이콘을 클릭하여 월이 변경된 경우는 발생하지 않습니다.)\n이벤트 핸들러를 지정하면 핸들러에서 아래의 값을 확인할 수 있습니다.\n- 수정되고 있는 셀의 행 번호\n- 수정되고 있는 셀의 열 번호\n- 선택 전, 선택 후 월 값이 담긴 JSON\n컴포넌트의 이벤트 발생 시 영역 [로그 확인]의 textarea 또는 브라우저 개발자도구 콘솔에 로그가 출력됩니다.\n이벤트 onmonthselect 발생 시 로그 출력하기\n컬럼 '출간일'의 셀을 더블 클릭하면 편집 모드로 전환되고 아이콘 달력이 표시됩니다.\n아이콘을 클릭하고 달력 UI에서 '월'(month)이 출력된 SelectBox의 값을 선택하면 로그가 출력됩니다.\n출간일 정가 도서명\n2019-08-26 28,000 사람일까 상황일까\n2022-04-18 16,000 내가 틀릴 수도 있습니다\n2004-05-15 9,000 인간 실격\n2020-12-01 18,000 공정하다는 착각\n로그 확인\nSee Also\n[GridView] Event - ondateselect (inputType이 calendar이고, 사용자가 달력 UI에서 일(day)을 선택했을 때 발생)\n[GridView] Event - onyearselect (inputType이 calendar이고, 사용자가 달력 UI에서 연도(year)를 선택했을 때 발생)\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"인간 실격\", \"price\": \"9000\", \"published_date\": \"20040515\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\", \"published_date\": \"20201201\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};\n\n/**\n * GridView grd_exam1의 onmonthselect 이벤트 핸들러\n */\nscwin.grd_exam1_onmonthselect = function (row, col, jsnInfo) {\n //row : 수정되고 있는 셀의 행 번호\n //col : 수정되고 있는 셀의 열 번호\n //jsnInfo : 선택 전, 선택 후 월 값이 담긴 JSON\n\n let strLog = \"\";\n\n strLog += \"** scwin.grd_exam1_ondateselect ** \\n\";\n strLog += \"row index : \" + row + \"\\n\";\n strLog += \"column index : \" + col + \"\\n\";\n strLog += \"json info : \" + JSON.stringify(jsnInfo);\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //console에 log 출력\n console.log(strLog);\n console.log(row, col, jsnInfo);\n};"]],[["title","Event - onscrollstart (세로 스크롤이 이동하여 최상단에 닿을 때 발생)"],["tmp",""]],[["title","Event - onsort (헤더를 클릭 또는 더블클릭하여 데이터 정렬된 경우 발생)"],["tmp","GridView\n[GridView] Event - onsort (헤더를 클릭 또는 더블클릭하여 데이터 정렬된 경우 발생)\n〈\n/page/P00216.xmlgridgridViewheaderonclickondblclicksortEventsortable그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 이벤트 onSort 예제입니다.\nonSort 이벤트는 GridView의 헤더에 클릭이나 더블 클릭으로 정렬이 변경된 경우 발생합니다.\n이벤트 핸들러를 지정하면 핸들러에서 정렬이 발생한 헤더의 ID, 바디의 ID, 정렬 구분(오름차순, 내림차순, 정렬안함)값을 확인할 수 있습니다.\nDataList의 API를 이용하여 정렬된 경우는 발생하지 않습니다.\nex) DataList의 함수 sort, multisort 등\n컴포넌트의 이벤트 발생 시 영역 [로그 확인]의 textarea 또는 브라우저 개발자도구 콘솔에 로그가 출력됩니다.\nGridView의 onsort 이벤트 핸들러 등록\nGridView의 헤더를 클릭하면 정렬이 되며 onsort 이벤트가 발생합니다.\n도서명\n정가\n출간일\n불편한 편의점 14,000 2021-04-20\n어린왕자 2,000 1981-08-01\n사람일까 상황일까 28,000 2019-08-26\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n로그 확인\nSee Also\n[GridView] 병합된 헤더 컬럼에 정렬 기능을 사용할 바디 컬럼 지정하기\n[GridView] 목록형 inputType의 정렬할 데이터의 출처 설정하기\n[GridView] 정렬 아이콘과 필터 아이콘을 모두 표시하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"불편한 편의점\", \"price\": \"14000\", \"published_date\": \"20210420\" },\n { \"book_name\": \"어린왕자\", \"price\": \"2000\", \"published_date\": \"19810801\" },\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"인간 실격\", \"price\": \"9000\", \"published_date\": \"20040515\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"JavaScript Patterns\", \"price\": \"22000\", \"published_date\": \"20111103\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * GridView grd_exam1의 onsort 이벤트 핸들러\n */\nscwin.grd_exam1_onsort = function (artSortInfo) {\n let strLog = \"\";\n\n strLog += \"** scwin.grd_exam1_onsort ** \\n\";\n strLog += \"headerId : \" + artSortInfo.headerId + \"\\n\";\n strLog += \"bodyColId : \" + artSortInfo.bodyColId + \"\\n\";\n strLog += \"sortOrder : \" + artSortInfo.sortOrder + \"\\n\";\n strLog += \"json : \" + JSON.stringify(artSortInfo);\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //console에 log 출력\n console.log(strLog);\n console.log(artSortInfo);\n\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","Event - onyearselect (inputType이 calendar이고, 사용자가 달력 UI에서 연도(year)를 선택했을 때 발생)"],["tmp",""]],[["title","Event onscrollstart를 항상 발생 시킬지의 여부 지정하기"],["tmp","GridView\n[GridView] Event onscrollstart를 항상 발생 시킬지의 여부 지정하기\n〈\n/page/P00229.xmlalwaysTriggerScrollStartgridgridView그리드뷰이벤트\n〉\n예제와 가이드 함께 보기\nGridView의 이벤트 onscrollstart를 항상 발생 시킬지의 여부를 지정하는 예제입니다.\n이 기능은 속성 'alwaysTriggerScrollStart'으로 설정합니다.\n설정 값에 따른 기능은 아래와 같습니다.\n- true : GridView의 세로 스크롤이 최상단에 닿을 때 마다 이벤트 'onscrollstart' 발생.\n- false : (기본 값) GridView의 세로 스크롤이 최상단에 닿을 때 최초 1회 이벤트 'onscrollstart' 발생.\n컴포넌트의 이벤트 발생 시 영역 [로그 확인]의 textarea 또는 브라우저 개발자도구 콘솔에 로그가 출력됩니다.\n(기본 값) 이벤트 'onscrollstart' 최초 1회 발생 시키기\n세로 스크롤을 아래로 내렸다가 최상단으로 이동시킵니다.\n스크롤이 최상단에 닿으면 최초 1회 로그가 출력됩니다.\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n이벤트 'onscrollstart' 매회 발생 시키기\n세로 스크롤을 아래로 내렸다가 최상단으로 이동시킵니다.\n스크롤이 최상단에 닿을 때 마다 로그가 출력됩니다.\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n로그 확인\nSee Also\n[GridView] Event - onscrollstart (세로 스크롤이 이동하여 최상단에 닿을 때 발생)\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n let arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};\n\n/**\n * GridView grd_exam1의 onscrollstart 이벤트 핸들러\n */\nscwin.grd_exam1_onscrollstart = function () {\n let strLog = \"\";\n\n strLog += \"scwin.grd_exam1_onscrollstart\\n\";\n strLog += \"alwaysTriggerScrollStart:false - 최초 1회 발생\";\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n console.log(\"scwin.grd_exam1_onscrollstart : 최초 1회 발생\");\n};\n\n/**\n * GridView grd_exam2의 onscrollstart 이벤트 핸들러\n */\nscwin.grd_exam2_onscrollstart = function () {\n let strLog = \"\";\n\n strLog += \"scwin.grd_exam2_onscrollstart\\n\";\n strLog += \"alwaysTriggerScrollStart:true - 매회 발생\";\n\n //textarea에 log 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n console.log(\"scwin.grd_exam2_onscrollstart : 매번 발생\");\n};"]],[["title","footer의 expression(올림,반올림,내림)"],["tmp","GridView\n[GridView] footer의 expression(올림,반올림,내림)\n〈\n/page/P00044.xmlceilexpressionfloorfootergridgridViewroundtoFixed그리드뷰\n〉\n예제와 가이드 함께 보기\n번호 sum값 sum값(올림) sum값(버림) sum값(반올림) sum값(소수점 2자리 반올림)\nid : sumVal0 id : sumVal1 id : sumVal2 id : sumVal3 id : sumVal4\n1 2.357 2.357 2.357 2.357 2.357\n2 1.53 1.53 1.53 1.53 1.53\n3 3.0271 3.0271 3.0271 3.0271 3.0271\n4 2.0254 2.0254 2.0254 2.0254 2.0254\n5 7.237 7.237 7.237 7.237 7.237\n실행값 16.1765 17 16 16 16.18\n표현식 sum('sumVal0') Math.ceil(sum('sumVal1')) Math.floor(sum('sumVal2')) Math.round(sum('sumVal3')) sum('sumVal4').toFixed(2)\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n var jsonData = [\n { \"no\": \"1\", \"sumVal0\": \"2.357\", \"sumVal1\": \"2.357\", \"sumVal2\": \"2.357\", \"sumVal3\": \"2.357\", \"sumVal4\": \"2.357\" },\n { \"no\": \"2\", \"sumVal0\": \"1.53\", \"sumVal1\": \"1.53\", \"sumVal2\": \"1.53\", \"sumVal3\": \"1.53\", \"sumVal4\": \"1.53\" },\n { \"no\": \"3\", \"sumVal0\": \"3.0271\", \"sumVal1\": \"3.0271\", \"sumVal2\": \"3.0271\", \"sumVal3\": \"3.0271\", \"sumVal4\": \"3.0271\" },\n { \"no\": \"4\", \"sumVal0\": \"2.0254\", \"sumVal1\": \"2.0254\", \"sumVal2\": \"2.0254\", \"sumVal3\": \"2.0254\", \"sumVal4\": \"2.0254\" },\n { \"no\": \"5\", \"sumVal0\": \"7.237\", \"sumVal1\": \"7.237\", \"sumVal2\": \"7.237\", \"sumVal3\": \"7.237\", \"sumVal4\": \"7.237\" }\n ];\n\n //데이터 할당\n dataList1.setJSON(jsonData);\n};"]],[["title","GridView 컬럼의 속성 dataType, 속성 displayFormat을 스크립트로 지정하기"],["tmp","GridView\n[GridView] GridView 컬럼의 속성 dataType, 속성 displayFormat을 스크립트로 지정하기\n〈\n/page/P00191.xmlgetDataTypegridgridViewsetColumnDisplayFormatsetDataType그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView 컬럼의 속성 dataType과 속성 displayFormat의 값을 지정하고 속성 dataType의 값을 반환받는 예제입니다.\n지정 가능한 dataType 값은 아래와 같습니다.\n- text, number, float\n이 예제에서 사용한 함수는 다음과 같습니다.\n- getDataType : 컬럼의 속성 dataType의 값을 반환.\n- setDataType : 컬럼의 속성 dataType의 값을 지정.\n- setColumnDisplayFormat : 컬럼의 속성 displayFormat의 값을 지정.\n컬럼의 속성 dataType과 속성 dispalyFormat 지정하기\n반환 된 설정 값은 [로그 확인]의 textarea에 로그가 출력됩니다.\n정가\n1 2547869000\n2 8740500\n3 543900\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * 버튼 [컬럼 '정가'의 속성 dataType의 설정 값 반환받기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n var returnValue;\n\n //GridView 'grd_exam1'의 컬럼 '정가'의 속성 dataType의 값을 반환 받습니다.\n returnValue = grd_exam1.getDataType(\"price\");\n\n //로그 출력\n $c.frame.printExampleLog(\"** 함수 scwin.btn_ex1_1_onclick **\", txa_log, false);\n $c.frame.printExampleLog('grd_exam1.getDataType(\"price\"); 반환 값 : ' + returnValue, txa_log, false);\n\n console.log(\"** 함수 scwin.btn_ex1_1_onclick **\");\n console.log('grd_exam1.getDataType(\"price\"); 반환 값 : ' + returnValue);\n\n txa_log.focus();\n\n};\n\n/**\n * 버튼 [컬럼 '정가'의 속성 dataType을 'number'로 지정하고 속성 dispalyFormat을 '#,###'으로 지정하기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '정가'의 속성 dataType의 값을 'number'로 지정합니다.\n grd_exam1.setDataType(\"price\", \"number\");\n //GridView 'grd_exam1'의 컬럼 '정가'의 속성 displayFormat의 값을 '#,###'으로 지정합니다.\n grd_exam1.setColumnDisplayFormat(\"price\", \"#,###\");\n};\n\n/**\n * 버튼 [컬럼 '정가'의 속성 dataType을 'float'로 지정하고 속성 dispalyFormat을 '#,###.00'으로 지정하기] 클릭 시\n */\nscwin.btn_ex1_3_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '정가'의 속성 dataType을 'float'로 지정합니다.\n grd_exam1.setDataType(\"price\", \"float\");\n //GridView 'grd_exam1'의 컬럼 '정가'의 속성 dispalyFormat을 '#,###.00'으로 지정합니다.\n grd_exam1.setColumnDisplayFormat(\"price\", \"#,###.00\");\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","GridView의 너비가 설정한 너비 이하일 때 autoFit(컬럼 너비 자동 조절) 기능 사용하지 않기"],["tmp",""]],[["title","Groupby 기능 적용하기"],["tmp",""]],[["title","inputType checkbox의 label 추가하기"],["tmp","GridView\n[GridView] inputType checkbox의 label 추가하기\n〈\n/page/P00100.xmlcheckboxLabelcheckboxLabelColumncheckboxLabelFormattergridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼의 InputType이 checkbox인 경우 label을 출력하는 예제입니다.\n설정에 통해 고정 문자 또는 GridView의 컬럼 데이터를 조합하여 출력할 수 있습니다.\n[기본설정] label 설정 없음\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\ncheckbox의 label - 고정 문자\n선택 분류 도서명\n1 선택 역사/문화 거의 모든 전쟁의 역사\n2 선택 인문 공정하다는 착각\n3 선택 시/에세이 기분을 관리하면 인생이 관리된다\n4 선택 인문 나는 둔감하게 살기로 했다\ncheckbox의 label 적용 - 컬럼 조합\n분류 - 도서명 분류 도서명\n1 역사/문화 - 거의 모든 전쟁의 역사 역사/문화 거의 모든 전쟁의 역사\n2 인문 - 공정하다는 착각 인문 공정하다는 착각\n3 시/에세이 - 기분을 관리하면 인생이 관리된다 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 - 나는 둔감하게 살기로 했다 인문 나는 둔감하게 살기로 했다\ncheckbox의 label 적용 - 사용자 함수 적용\n[분류] 도서명\n1 [역사/문화] 거의 모든 전쟁의 역사\n2 [인문] 공정하다는 착각\n3 [시/에세이] 기분을 관리하면 인생이 관리된다\n4 [인문] 나는 둔감하게 살기로 했다\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"당신은 결국 무엇이든 해내는 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마지막 몰입: 나를 넘어서는 힘\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"멘탈을 바꿔야 인생이 바뀐다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"원씽(The One Thing)\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" },\n { \"label\": \"총 균 쇠\", \"categoryLabel\": \"역사/문화\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n dlt_books_3.setJSON(arrData);\n dlt_books_4.setJSON(arrData);\n};\n\n\n/**\n * 영역 [checkbox의 label 적용 - 사용자 함수 적용]의 checkboxLabelFormatter\n */\nscwin.grd_exam4_checkboxLabelFormatter = function (row, col, label) {\n var jsnRow;\n var returnValue;\n\n jsnRow = dlt_books_4.getRowJSON(row); //현재 행의 json 데이터 추출\n returnValue = \"[\" + jsnRow.categoryLabel + \"] \" + jsnRow.label;\n\n return returnValue;\n};"]],[["title","inputType radio의 label 추가하기"],["tmp",""]],[["title","inputType이 autoComplate인 경우 목록 확장 아이콘 클릭 시 목록 확장하기"],["tmp","GridView\n[GridView] inputType이 autoComplate인 경우 목록 확장 아이콘 클릭 시 목록 확장하기\n〈\n/page/P00118.xmlautoCompletedirectOpengridgridViewinputTypeviewTypeviewTypeIconImage그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 inputType이 \"autoComplete\"인 경우 목록 확장 아이콘을 클릭했을 때 목록이 바로 확장되는 설정 예제입니다.\n기본 설정\n컬럼 [autoComplete]의 목록 확장 아이콘을 클릭하면 편집 모드로 변경됩니다.\nautoComplete select\nGrapes\nGrapes\nPeach\nPeach\n목록 확장 아이콘을 클릭했을 때 목록 확장하기\n컬럼 [autoComplete]의 목록 확장 아이콘을 클릭하면 목록이 확장됩니다.\nautoComplete select\nGrapes\nGrapes\nPeach\nPeach\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //GridView의 선택형 inputType의 목록과 연결된 DataList \"dlt_exam_code\"에 데이터 할당.\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Melon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n\n //GridView와 연결된 DataList에 데이터 할당.\n dlt_exam.setJSON([\n { \"select\": \"03\", \"checkcombobox\": \"03\", \"autoComplete\": \"03\" },\n { \"select\": \"05\", \"checkcombobox\": \"05\", \"autoComplete\": \"05\" }\n ]);\n\n};"]],[["title","inputType이 checkbox로 지정된 열의 기본 값 지정하기"],["tmp","GridView\n[GridView] inputType이 checkbox로 지정된 열의 기본 값 지정하기\n〈\n/page/P00173.xmlDataListcolumndefaultValuegridgridView그리드뷰체크박스컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 속성 InputType을 checkbox로 구성하고 기본 값을 설정하는 예제입니다.\n이 기능은 GridView와 연결된 DataList의 컬럼 속성 defaultValue를 지정하여 구현합니다.\ndefaultValue는 checkbox와 연결된 컬럼의 데이터가 없는 경우 사용합니다.\ndefaultValue를 지정하지 않는 경우 기본 값은 빈 문자열로 할당됩니다.\ncheckbox의 defaultValue 설정 비교하기\n버튼 [Data 출력하기]를 클릭하여 영역 [로그확인]에 출력된 데이터를 비교합니다.\n기본 값 : 빈 문자열, 선택된 값 : 1, 선택 후 해제된 값 : 0\ndefaultValue 미설정\nID : chk_1 defaultValue 설정\nID : chk_2 도서명\n공정하다는 착각\n사람일까 상황일까\n무엇이 옳은가\n로그 확인\nSee Also\n[GridView] inputType이 checkbox로 지정된 열의 선택, 선택 해제 값 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * 버튼 [Data 출력하기] 클릭 시\n * GridView 데이터 출력\n */\nscwin.btn_ex1_onclick = function (e) {\n var strLog;\n var jsnData;\n\n jsnData = dlt_books_1.getAllJSON();\n\n //로그 출력\n strLog = \"[checkbox의 defaultValue 설정 비교하기] dlt_books_1 출력\\n\";\n strLog += JSON.stringify(jsnData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","inputType이 checkbox로 지정된 열의 선택, 선택 해제 값 지정하기"],["tmp","GridView\n[GridView] inputType이 checkbox로 지정된 열의 선택, 선택 해제 값 지정하기\n〈\n/page/P00174.xmlDataListcolumndefaultValuefalseValuegridgridViewtrueValuevalueType그리드뷰체크박스컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼 속성 inputType이 checkbox일 때,\n컬럼 속성 valueType(값의 유형)의 설정 값에 따라 엔진에서 할당되는 체크된 값과 체크가 해제된 값을 비교하는 예제입니다.\n속성 valueType의 설정 값에 따라 엔진에서 checkbox가 체크되었을 때 value로 할당하는 값과 체크가 해제되었을 때 value로 할당하는 값이 달라집니다.\n사용자(개발자)가 직접 값을 할당하고자 하는 경우는 valueType을 other로 지정하고 속성 trueValue(체크된 값)와 falseValue(체크 해제된 값)를 지정합니다.\n주요 속성은 아래와 같습니다.\n- GridView의 Column : valueType, trueValue, falseValue\n- DataList의 Column : defaultValue\nvalueType : binary (기본 값)\n컬럼 [선택]의 checkbox를 체크, 체크 후 해제합니다.\n버튼 [Data 출력하기]를 클릭하고 로그 확인 영역의 JSON 데이터를 확인합니다.\n체크된 값 : 1, 체크 해제된 값 : 0, 기본 값(사용자 지정) : 0\n상태 선택 분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\nvalueType : boolean\n컬럼 [선택]의 checkbox를 체크, 체크 후 해제합니다.\n버튼 [Data 출력하기]를 클릭하고 로그 확인 영역의 JSON 데이터를 확인합니다.\n체크된 값 : true, 체크 해제된 값 : false, 기본 값(사용자 지정) : false\n상태 선택 분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\nvalueType : other\n컬럼 [선택]의 checkbox를 체크, 체크 후 해제합니다.\n버튼 [Data 출력하기]를 클릭하고 로그 확인 영역의 JSON 데이터를 확인합니다.\n체크된 값 : Y, 체크 해제된 값 : N, 기본 값 (사용자 지정): N\n상태 선택 분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\n로그 확인\nSee Also\n[GridView] inputType이 checkbox로 지정된 열의 기본 값 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n dlt_books_3.setJSON(arrData);\n};\n\n/**\n * 버튼 [Data 출력하기 - dlt_books_1] 클릭 시\n * DataList dlt_books_1 출력\n */\nscwin.btn_ex1_onclick = function (e) {\n var strLog;\n var jsnData;\n\n jsnData = dlt_books_1.getAllJSON();\n\n //로그 출력\n strLog = \"[valueType : binary (기본 값)] dlt_books_1 출력\\n\";\n strLog += JSON.stringify(jsnData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 버튼 [Data 출력하기 - dlt_books_2] 클릭 시\n * DataList dlt_books_2 출력\n */\nscwin.btn_ex2_onclick = function (e) {\n var strLog;\n var jsnData;\n\n jsnData = dlt_books_2.getAllJSON();\n\n //로그 출력\n strLog = \"[valueType : boolean] dlt_books_2 출력\\n\";\n strLog += JSON.stringify(jsnData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 버튼 [Data 출력하기 - dlt_books_3] 클릭 시\n * DataList dlt_books_3 출력\n */\nscwin.btn_ex3_onclick = function (e) {\n var strLog;\n var jsnData;\n\n jsnData = dlt_books_3.getAllJSON();\n\n //로그 출력\n strLog = \"[valueType : other] dlt_books_3 출력\\n\";\n strLog += JSON.stringify(jsnData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","inputType이 checkbox로 지정된 열의 체크된 행의 Data 반환받기"],["tmp","GridView\n[GridView] inputType이 checkbox로 지정된 열의 체크된 행의 Data 반환받기\n〈\n/page/P00176.xmlcolumngetCheckedDatagetCheckedJSONgetCheckedXMLgridgridViewrow그리드뷰컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼 속성 inputType이 checkbox일 때,\ncheckbox가 체크된 행의 데이터를 반환 받는 예제입니다.\n데이터 유형별 아래의 함수를 사용할 수 있습니다.\n- JSON 배열 : getCheckedJSON\n- XML : getCheckedXML\n- 2차원 배열 : getCheckedData //행 단위로 컬럼의 value가 배열로 담깁니다.\n체크된 행의 Data 반환받기\n컬럼 [선택]의 checkbox를 체크합니다.\n버튼을 클릭하고 로그 확인 영역 로그를 확인합니다.\n선택 분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\", \"chk_1\": \"0\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\", \"chk_1\": \"1\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\", \"chk_1\": \"0\" },\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * 버튼 [getCheckedJSON] 클릭 시\n * API getCheckedJSON를 호출하여 반환 받기\n */\nscwin.btn_ex1_onclick = function (e) {\n var strLog;\n var objData;\n\n //GridView grd_exam1의 컬럼 chk_1의 체크된 행의 데이터를 JSON으로 반환 받기\n //파라미터는 컬럼의 id와 indexd를 사용할 수 있습니다. 일반적으로 id를 사용합니다.(index는 컬럼이 추가/삭제되면 변경되기 때문입니다.)\n objData = grd_exam1.getCheckedJSON(\"chk_1\");\n\n //로그 출력\n strLog = \"getCheckedJSON 반환 값 : \\n\";\n strLog += JSON.stringify(objData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 버튼 [getCheckedXML] 클릭 시\n * API getCheckedXML를 호출하여 반환 받기\n */\nscwin.btn_ex2_onclick = function (e) {\n var strLog;\n var objData;\n\n //GridView grd_exam1의 컬럼 chk_1의 체크된 행의 데이터를 XML로 반환 받기\n //파라미터는 컬럼의 id와 indexd를 사용할 수 있습니다. 일반적으로 id를 사용합니다.(index는 컬럼이 추가/삭제되면 변경되기 때문입니다.)\n objData = grd_exam1.getCheckedXML(\"chk_1\");\n\n //로그 출력\n strLog = \"getCheckedXML 반환 값 : \\n\";\n strLog += WebSquare.xml.indent(objData);\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 버튼 [getCheckedData] 클릭 시\n * API getCheckedData를 호출하여 반환 받기\n */\nscwin.btn_ex3_onclick = function (e) {\n var strLog;\n var objData;\n\n //GridView grd_exam1의 컬럼 chk_1의 체크된 행의 데이터를 2차원 배열로 반환 받기\n //파라미터는 컬럼의 id와 indexd를 사용할 수 있습니다. 일반적으로 id를 사용합니다.(index는 컬럼이 추가/삭제되면 변경되기 때문입니다.)\n objData = grd_exam1.getCheckedData(\"chk_1\");\n\n //로그 출력\n strLog = \"getCheckedData 반환 값 : \\n\";\n strLog += JSON.stringify(objData, null, \"\\t\");\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","inputType이 checkbox로 지정된 열의 체크된 행의 index 반환받기"],["tmp","GridView\n[GridView] inputType이 checkbox로 지정된 열의 체크된 행의 index 반환받기\n〈\n/page/P00175.xmlcolumngetCheckedIndexgridgridViewrow그리드뷰컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼 속성 inputType이 checkbox일 때,\ncheckbox가 체크된 행의 index를 배열로 반환 받는 예제입니다.\nGridView의 함수 getCheckedIndex를 사용합니다.\n체크된 행의 index을 배열로 반환받기\n컬럼 [선택]의 checkbox를 체크합니다.\n버튼 [반환값 출력하기]를 클릭하고 로그 확인 영역 로그를 확인합니다.\n선택 분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\", \"chk_1\": \"0\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\", \"chk_1\": \"1\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\", \"chk_1\": \"0\" },\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * 버튼 [반환값 출력하기] 클릭 시\n * 체크된 행의 index 배열 출력하기\n */\nscwin.btn_ex1_onclick = function (e) {\n var strLog;\n var arrIndex;\n\n //GridView grd_exam1의 컬럼 chk_1의 체크된 행 index를 배열로 반환 받기\n //파라미터는 컬럼의 id와 indexd를 사용할 수 있습니다. 일반적으로 id를 사용합니다.(index는 컬럼이 추가/삭제되면 변경되기 때문입니다.)\n arrIndex = grd_exam1.getCheckedIndex(\"chk_1\");\n\n //로그 출력\n strLog = \"체크된 배열 : \";\n strLog += JSON.stringify(arrIndex);\n\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","scrollEnd 기능을 사용한 데이터 추가하기"],["tmp","GridView\n[GridView] scrollEnd 기능을 사용한 데이터 추가하기\n〈\n/page/P00054.xmldataListgridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\n그리드뷰의 scrollEnd 기능 사용 예시입니다.\n그리드뷰의 세로 스크롤이 (마지막 행 건수 - 10건)의 높이에 위치하면 100건씩 데이터가 추가됩니다.\n최대 600건의 데이터가 로드됩니다.\n사용자 목록\n총\n100\n/\n600\n건\n번호 성명 성별 입사일 직책 직위 역할 담당업무 이메일 수정일\n1 신길동 남 2004-09-22 과장 협력 PL yeki408@inswave02.com 2016-12-07\n2 비길동 남 2015-11-06 대리 팀장 개발 gevo206@inswave02.com 2016-12-07\n3 풍길동 여 2006-08-14 대리 팀원 퍼블리셔 tuyu121@inswave01.com 2016-12-07\n4 정길동 남 2002-06-10 팀장 협력 분석/설계 wire062@inswave02.com 2016-12-07\n5 미길동 남 2004-10-08 차장 협력 분석/설계 woka436@inswave03.com 2016-12-07\n6 강길동 남 2016-10-11 팀장 협력 PL ziku748@inswave01.com 2016-12-07\n7 당길동 여 2002-02-04 사원 팀원 퍼블리셔 milu328@inswave02.com 2016-12-07\n8 허길동 여 2004-02-03 과장 협력 개발 puza935@inswave02.com 2016-12-07\n9 군길동 여 2005-12-14 대리 팀장 PM keka460@inswave01.com 2016-12-07\n10 빈길동 여 2003-09-21 사원 팀장 PL vuce190@inswave03.com 2016-12-07\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.gVar = {\n append: false,\n totalCnt: 0,\n pageNum: 0\n};\n\nscwin.onpageload = function () {\n //조회 버튼 click 이벤트 발생\n btn_Search.trigger(\"onclick\");\n};\n\n//[조회]버튼 클릭 시\nscwin.btn_Search_onclick = function () {\n scwin.gVar.append = false;\n scwin.gVar.totalCnt = 0;\n scwin.gVar.pageNum = 0;\n spn_curCount.setValue(0);\n spn_totCount.setValue(0);\n\n scwin.searchMain(0, \"Y\");\n};\n\n/**\n* 조회 (현재 샘플은 100개씩 조회할 경우 기준) \n* param1 - 조회 시작 순번\n* param2 - 총 건수 조회 여부 \n*/\nscwin.searchMain = function (idx, strYn) {\n dma_Search.set(\"TOTAL_YN\", strYn);\n dma_Search.set(\"startNum\", idx);\n dma_Search.set(\"endNum\", 100);\n dma_Search.set(\"count\", 100);\n\n //이 예제는 DB 연계가 되어 있지 않기 때문에 100건씩 나뉘어진 json 파일을 호출하도록 되어있습니다.\n scwin.setActionURL();\n\n scwin.gVar.pageNum++;\n\n $p.executeSubmission(\"sbm_select\");\n};\n\n\n/**\n * json 파일 URL 설정\n */\nscwin.setActionURL = function (idx) {\n var _cmpSubmission;\n _cmpSubmission = $p.getSubmission(\"sbm_select\");\n _cmpSubmission.action = '/data/sampleData/dlt_Member_append_100_' + scwin.gVar.pageNum + '.json';\n};\n\n/**\n * sbm_select의 submitdone 핸들러\n */\nscwin.sbm_select_submitdone = function (e) {\n if (e.responseJSON.msgCode == \"S\") {\n var firstYn = dma_Search.get(\"TOTAL_YN\");\n\n // 최초 조회일 경우에만 전체 건수를 구하여 전역변수에 담는다.\n if (firstYn == \"Y\") {\n let totCount = e.responseJSON.TOTAL_CNT;\n scwin.gVar.totalCnt = totCount;\n spn_totCount.setValue(totCount);\n }\n dlt_Member.setJSON(e.responseJSON.dlt_Member, scwin.gVar.append);\n }\n\n};\n\n/**\n * grd_Member의 onscrollend 핸들러\n * 데이터를 추가합니다.\n */\nscwin.grd_Member_onscrollend = function () {\n var startRow = dlt_Member.getRowCount();\n\n // 전체 건수보다 조회된 건수가 작을 경우에만 추가 조회를 한다.\n if (scwin.gVar.totalCnt > startRow) {\n scwin.gVar.append = true;\n scwin.searchMain(startRow, \"N\");\n }\n};\n\n/**\n * dlt_Member의 ondataload 이벤트 핸들러\n */\nscwin.dlt_Member_ondataload = function () {\n //게시물 수 출력\n spn_curCount.setValue(dlt_Member.getRowCount());\n};"]],[["title","Style 개인화 하기"],["tmp","GridView\n[GridView] Style 개인화 하기\n〈\n/page/P00198.xmlgridgridViewlocalStorage그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView를 개인화 하는 예제입니다.\nGridView의 Style 정보를 읽고, localStorage를 활용해 저장하여 구현합니다.\n컬럼의 순서, 행렬 틀 고정, 컬럼 숨김, 컬럼 크기의 저장, 불러오기가 가능합니다.\nGridView 개인화 샘플\nGridView 개인화는 컬럼의 넓이, 컬럼 숨기기, 컬럼 이동에 관한 정보를 저장, 불러오기가 가능합니다.\nlocalStorage는 브라우저의 메모리를 사용하기 때문에 브라우저에 종속됩니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사 piho888@inswave02.com\n10001337 마정연 남 2012-04-30 사원 개발 본사 zibe925@inswave02.com\n10001336 후혜선 남 2006-04-23 차장 기획 본사 mewa036@inswave02.com\n10001335 동세희 여 2005-04-01 부장 디자인 본사 cane427@inswave02.com\n로그 확인\nSee Also\n[GridView] 마우스 DragDrop으로 열(컬럼) 위치 변경하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function() {\n //로그 출력\n var strLog = \"GridView Style 초기화 정보 저장 완료\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n // localStorage에 저장된 gridView의 초기 style 정보 가져오기\n var grd_style = $p.local.getItem(\"init_grid\");\n\n // localStorage에 저장된 정보가 없는 경우 저장\n if (grd_style == null){\n grd_style = grd_main.getCurrentGridStyle();\n $p.local.setItem(\"init_grid\", grd_style);\n }\n};\n\n/**\n * 영역 [GridView 개인화 샘플]의\n * 입력 [btn_save]의 onclick 이벤트 함수\n */\nscwin.btn_save_onclick = function(e) {\n //로그 출력\n var strLog = \"GridView Style 정보 저장 완료\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n // 현재 gridView 스타일 정보 가져오기\n var grd_style = grd_main.getCurrentGridStyle();\n\n // localStorage에 gridView의 style 저장\n $p.local.setItem(\"grd_style\", grd_style);\n};\n\n/**\n * 영역 [GridView 개인화 샘플]의\n * 입력 [btn_load]의 onclick 이벤트 함수\n */\nscwin.btn_load_onclick = function(e) {\n //로그 출력\n var strLog = \"GridView Style 정보 불러오기기 완료\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n // localStorage에 저장한 gridView 스타일 정보 가져오기\n var grd_style = $p.local.getItem(\"grd_style\");\n\n // 현재 gridView의 style 정보 적용\n grd_main.setGridStyle(grd_style);\n};\n\n/**\n * 영역 [GridView 개인화 샘플]의\n * 입력 [btn_clear]의 onclick 이벤트 함수\n */\nscwin.btn_clear_onclick = function(e) {\n //로그 출력\n var strLog = \"GridView Style 초기화 정보 불러오기 완료\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n // 초기 gridView의 style 정보를 저장한 정보 가져오기\n var grd_style = $p.local.getItem(\"init_grid\");\n\n // 가져온 초기 gridView의 style 적용\n grd_main.setGridStyle(grd_style);\n};"]],[["title","데이터 복사 - 데이터 출처 설정"],["tmp","GridView\n[GridView] 데이터 복사 - 데이터 출처 설정\n〈\n/page/P00088.xmlcopyOptiongridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView에서 데이터 복사(Ctrl+C)를 할 때 데이터 출처의 설정 예제입니다.\nGridView의 \"정가\", \"출간일\" 컬럼의 값을 복사하여 비교합니다.\n이 기능은 GridView의 속성 'copyOption'에 지정된 값에 의해 동작합니다.\n아래는 지정 값에 따른 동작 방식입니다.\n- dataList : (기본 값) : 데이터 복사 시 dataList에 할당된 값을 복사합니다.\n- display : 데이터 복사 시 화면에 출력된 값을 복사합니다.\n[기본설정] 연결된 DataList의 값이 복사\n컬럼 '정가' 또는 '출간일'의 셀을 클릭하고 복사('Ctrl'+'C')하면 DataList에 할당된 값이 복사 됩니다.\n첫 번째 행의 '정가'열의 '16,500'을 복사하면 '16500'이 붙여넣기 됩니다.\n도서명 정가 출간일\n정글만리 16,500 2013-07-01\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n공정하다는 착각 18,000 2020-12-01\n불편한 편의점 14,000 2021-04-20\n사람일까 상황일까 28,000 2019-08-26\n출력된 값이 복사\n컬럼 '정가' 또는 '출간일'의 셀을 클릭하고 복사('Ctrl'+'C')하면 화면에 보여지는 값이 복사 됩니다.\n첫 번째 행의 '정가'열의 '16,500'을 복사하면 '16,500'이 붙여넣기 됩니다.\n도서명 정가 출간일\n정글만리 16,500 2013-07-01\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n공정하다는 착각 18,000 2020-12-01\n불편한 편의점 14,000 2021-04-20\n사람일까 상황일까 28,000 2019-08-26\n컬럼별 복사할 데이터 출처 설정\n정가 : 화면에 출력된 값으로 복사\n출간일 : DataList의 값으로 복사\n도서명 정가 출간일\n정글만리 16,500 2013-07-01\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n공정하다는 착각 18,000 2020-12-01\n불편한 편의점 14,000 2021-04-20\n사람일까 상황일까 28,000 2019-08-26\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","데이터 복사 - 일부 문자열 복사하기"],["tmp",""]],[["title","데이터 타입에 따른 필터 기능의 비교 연산자 비교하기"],["tmp","GridView\n[GridView] 데이터 타입에 따른 필터 기능의 비교 연산자 비교하기\n〈\n/page/P00112.xmlgridgridViewuseFilter그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView에 필터 기능 적용 시 비교 연산자의 차이를 비교하는 예제입니다.\n컬럼의 데이터가 숫자형으로 이루어진 경우 (>, >=, <, <=)가 추가됩니다.\n이 기능은 필터 기능이 적용된 경우 별도의 설정없이 적용됩니다.\n필터 기능 적용\n[분류] 컬럼과 [정가] 컬럼의 필터 기능의 비교 연산자를 비교합니다.\n분류\n정가\n도서명\n1 인문 18000 공정하다는 착각\n2 시/에세이 17600 기분을 관리하면 인생이 관리된다\n3 인문 16000 내가 틀릴 수도 있습니다\n4 시/에세이 14000 너무 잘하려고 애쓰지 마라\nSee Also\n[GridView] 필터 사용 설정하기\n[GridView] 데이터 필터 목록의 최소 너비를 데이터의 최대 길이로 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\", \"price\": \"18000\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\", \"price\": \"17600\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\", \"price\": \"16000\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\", \"price\": \"14000\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\", \"price\": \"13800\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\", \"price\": \"17800\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\", \"price\": \"28900\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\", \"price\": \"14900\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\", \"price\": \"14000\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\", \"price\": \"17800\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\", \"price\": \"15800\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\", \"price\": \"14000\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\", \"price\": \"15000\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\", \"price\": \"15000\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\", \"price\": \"14500\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","데이터 필터 목록의 최소 너비를 데이터의 최대 길이로 설정하기"],["tmp","GridView\n[GridView] 데이터 필터 목록의 최소 너비를 데이터의 최대 길이로 설정하기\n〈\n/page/P00210.xmlautoFitFilterListgridgridViewuseFilteruseFilterList그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 헤더 컬럼의 속성 autoFitFilterList의 기능 예제입니다.\n속성 autoFitFilterList은 헤더 컬럼에 데이터 필터를 리스트 형태로 지정하였을 때 동작하는 기능입니다.\n아래는 설정 값 별 설명입니다.\n- false : (기본 설정 값) 목록 박스의 너비는 컬럼의 너비로 지정됩니다.\n- true :  필터 목록 박스의 최소 너비가가 데이터의 최대 길이로 지정됩니다. (목록 박스의 너비가 데이터의 최대 길이보자 작은 경우 적용)\n헤더 컬럼의 속성 autoFitFilterList 사용\n헤더 컬럼 '분류'의 필터 아이콘을 클릭하면 데이터의 목록 박스가 표시됩니다.\n목록 박스의 너비가 데이터의 최대 길이보다 작을 경우 박스의 너비는 데이터의 최대 길이로 조절됩니다.\n분류\n도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n(기본 설정) 헤더 컬럼의 속성 autoFitFilterList 미사용\n헤더 컬러 '분류'의 필터 아이콘을 클릭하면 데이터의 목록 박스가 표시됩니다.\n목록 박스의 너비가 컬럼의 너비로 지정됩니다.\n분류\n도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\nSee Also\n[GridView] 필터 사용 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"당신은 결국 무엇이든 해내는 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마지막 몰입: 나를 넘어서는 힘\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"멘탈을 바꿔야 인생이 바뀐다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"원씽(The One Thing)\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" },\n { \"label\": \"총 균 쇠\", \"categoryLabel\": \"역사/문화\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","마우스 DragDrop 기능을 통한 GridView 내 행의 이동 금지 설정하기"],["tmp","GridView\n[GridView] 마우스 DragDrop 기능을 통한 GridView 내 행의 이동 금지 설정하기\n〈\n/page/P00102.xmldataDragDropdataDragDropOthergridgridViewmouse그리드뷰드래그드롭드래그앤드롭\n〉\n예제와 가이드 함께 보기\nGridView의 Drag&Drop 기능의 옵션 중 하나인 \"dataDragDropOther\" 속성 예제입니다.\n속성 \"dataDragDropOther\"은 GridView 내부에서의 행 이동을 금지하는 기능을 제공합니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\nDragDrop 설정 + GridVIew 내 행 이동 금지\nDrag&Drop으로 GridView내 행의 이동이 불가합니다.\n행을 Drag하여 다른 GridView에 Drop하면 행이 이동됩니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n5 시/에세이 모든 사람에게 좋은 사람일 필요는 없어\n행 이동 테스트용 GridView\n이곳에 행을 Drop 하세요.\n분류 도서명\n이곳에 행을 Drop 하세요.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","마우스 DragDrop 기능을 통해 GridView 내 이동된 행의 rowStatus(상태)값 유지하기"],["tmp","GridView\n[GridView] 마우스 DragDrop 기능을 통해 GridView 내 이동된 행의 rowStatus(상태)값 유지하기\n〈\n/page/P00103.xmldataDragDropdataDragDropStatusgridgridViewmouse그리드뷰드래그드롭드래그앤드롭상태값\n〉\n예제와 가이드 함께 보기\nGridView의 Drag&Drop 기능의 옵션 중 하나인 \"dataDragDropStatus\" 속성 예제입니다.\n속성 \"dataDragDropStatus\"은 Drag&Drop을 통해 GridView 내부에서 행이 이동된 경우 rowStatus(행 상태)를 변경하지 않는 기능을 제공합니다.\n타 GridView의 행이 Drop된 경우는 \"dataDragDropStatus\" 설정과 무관하게 \"C\"상태로 변경됩니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\nDragDrop 설정\nGridView 내에서 Drag&Drop으로 이동된 행의 rowStatus(상태)가 C(신규)로 변경됩니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n5 시/에세이 모든 사람에게 좋은 사람일 필요는 없어\nDragDrop 설정 + 행 상태(rowStatus) 유지\nGridView 내에서 Drag&Drop으로 이동된 행의 rowStatus(상태)를 변경하지 않습니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n5 시/에세이 모든 사람에게 좋은 사람일 필요는 없어\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","마우스 DragDrop으로 열(컬럼) 위치 변경하기"],["tmp",""]],[["title","마우스 DragDrop으로 행 위치 변경하기"],["tmp","GridView\n[GridView] 마우스 DragDrop으로 행 위치 변경하기\n〈\n/page/P00101.xmldataDragDropgridgridViewmouse그리드뷰드래그드롭드래그앤드롭\n〉\n예제와 가이드 함께 보기\nGridView의 Drag&Drop 설정 예제입니다.\nGridView의 행의 데이터를 Drag&Drop하여 이동할 수 있습니다.\n이 기능은 GridView 내부 또는 GridView와 GridView 간의 DragDrop만 지원됩니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n[기본설정] DragDrop 설정 없음\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n5 시/에세이 나로서 충분히 괜찮은 사람\n6 역사/문화 나의 문화유산답사기\nDragDrop 설정\nDrag&Drop으로 GridView내 행의 이동이 가능합니다.\n행을 Drag하여 다른 GridView에 Drop하면 행이 이동됩니다.\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n5 시/에세이 나로서 충분히 괜찮은 사람\n6 역사/문화 나의 문화유산답사기\n행 이동 테스트용 GridView\n이곳에 행을 Drop 하세요.\n분류 도서명\n이곳에 행을 Drop 하세요.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","마우스 Drag로 다중 셀을 선택할 때 마우스가 GridView 밖으로 이동하면 마우스의 방향에 따라 셀의 선택을 연장하는 기능 설정하기"],["tmp","GridView\n[GridView] 마우스 Drag로 다중 셀을 선택할 때 마우스가 GridView 밖으로 이동하면 마우스의 방향에 따라 셀의 선택을 연장하는 기능 설정하기\n〈\n/page/P00214.xmldataDragSelectdataDragSelectAutoScrolldataDragSelectAutoScrollLeveldataDragSelectAutoScrollPeriodgridgridViewuseShiftKey그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 속성 'dataDragSelectAutoScroll'의 예제입니다.\n속성 'dataDragSelectAutoScroll'의 기능은 GridView에 세로 또는 가로 스크롤 있는 경우 사용합니다.(데이터가 화면에 보이는 영역보다 많은 경우)\nGridView 영역 안에서 Drag를 통해 셀의 범위를 선택하고 이어서 마우스를 GridView 영역 밖으로 이동(상하좌우) 시켰을 때,\n마우스의 방향에 따라 셀의 선택을 연장하는 기능을 제공합니다.\n이때 마우스 방향에 맞춰 스크롤이 자동으로 이동합니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n속성 'dataDragSelectAutoScroll' 사용\nGridView 내 Drag를 통해 셀의 범위 선택을 할 수 있습니다.\n드래깅 시 마우스를 GridView 영역의 아래로 이동 시키면 세로 스크롤이 이동되면서 셀의 범위가 선택됩니다.\n분야 상품명 정가 출간일\n1 인문 만일 내가 인생을 다시 산다면(20만 부 기념 양장본 에디션) 17,200 2022-11-11 김혜남\n2 자기계발 원씽(The One Thing)(리커버 특별판) 14,000 2013-08-30 게리 켈러 외\n3 시/에세이 생에 감사해 17,000 2022-12-22 김혜자\n4 소설 불편한 편의점(40만부 기념 벚꽃 에디션) 14,000 2021-04-20 김호연\n5 정치/사회 미스터 프레지던트 22,000 2023-01-18 탁현민\n속성 'dataDragSelectAutoScroll' 미사용\nGridView 내 Drag를 통해 셀의 범위 선택을 할 수 있습니다.\n분야 상품명 정가 출간일\n1 인문 만일 내가 인생을 다시 산다면(20만 부 기념 양장본 에디션) 17,200 2022-11-11 김혜남\n2 자기계발 원씽(The One Thing)(리커버 특별판) 14,000 2013-08-30 게리 켈러 외\n3 시/에세이 생에 감사해 17,000 2022-12-22 김혜자\n4 소설 불편한 편의점(40만부 기념 벚꽃 에디션) 14,000 2021-04-20 김호연\n5 정치/사회 미스터 프레지던트 22,000 2023-01-18 탁현민\nSee Also\n[GridView] 마우스 Drag를 통한 셀의 범위 선택 기능 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"isbn\": \"9791190538510\", \"label\": \"만일 내가 인생을 다시 산다면(20만 부 기념 양장본 에디션)\", \"categoryLabel\": \"인문\", \"price\": \"17200\", \"author\": \"김혜남\", \"publisher\": \"메이븐\", \"published_date\": \"20221111\" },\n { \"isbn\": \"9788997575169\", \"label\": \"원씽(The One Thing)(리커버 특별판)\", \"categoryLabel\": \"자기계발\", \"price\": \"14000\", \"author\": \"게리 켈러 외\", \"publisher\": \"비즈니스북스\", \"published_date\": \"20130830\" },\n { \"isbn\": \"9791190382915\", \"label\": \"생에 감사해\", \"categoryLabel\": \"시/에세이\", \"price\": \"17000\", \"author\": \"김혜자\", \"publisher\": \"수오서재\", \"published_date\": \"20221222\" },\n { \"isbn\": \"9791161571188\", \"label\": \"불편한 편의점(40만부 기념 벚꽃 에디션)\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"김호연\", \"publisher\": \"나무옆의자\", \"published_date\": \"20210420\" },\n { \"isbn\": \"9791157062805\", \"label\": \"미스터 프레지던트\", \"categoryLabel\": \"정치/사회\", \"price\": \"22000\", \"author\": \"탁현민\", \"publisher\": \"메디치미디어\", \"published_date\": \"20230118\" },\n { \"isbn\": \"9791191043297\", \"label\": \"오늘 밤, 세계에서 이 사랑이 사라진다 해도\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"이치조 미사키\", \"publisher\": \"모모\", \"published_date\": \"20210628\" },\n { \"isbn\": \"9791161571379\", \"label\": \"불편한 편의점 2(단풍 에디션)\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"김호연\", \"publisher\": \"나무옆의자\", \"published_date\": \"20220810\" },\n { \"isbn\": \"9788936438838\", \"label\": \"아버지의 해방일지\", \"categoryLabel\": \"소설\", \"price\": \"15000\", \"author\": \"정지아\", \"publisher\": \"창비\", \"published_date\": \"20220902\" },\n { \"isbn\": \"9788901260716\", \"label\": \"역행자\", \"categoryLabel\": \"자기계발\", \"price\": \"17500\", \"author\": \"자청\", \"publisher\": \"웅진지식하우스\", \"published_date\": \"20220603\" },\n { \"isbn\": \"9791197647666\", \"label\": \"기분이 태도가 되지 말자\", \"categoryLabel\": \"시/에세이\", \"price\": \"16000\", \"author\": \"김수현\", \"publisher\": \"하이스트\", \"published_date\": \"20221125\" },\n { \"isbn\": \"9788954680004\", \"label\": \"이토록 평범한 미래\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"김연수\", \"publisher\": \"문학동네\", \"published_date\": \"20221007\" },\n { \"isbn\": \"9791189327156\", \"label\": \"물고기는 존재하지 않는다\", \"categoryLabel\": \"과학\", \"price\": \"17000\", \"author\": \"룰루 밀러\", \"publisher\": \"곰출판\", \"published_date\": \"20211217\" },\n { \"isbn\": \"9791187142560\", \"label\": \"데일 카네기 인간관계론\", \"categoryLabel\": \"자기계발\", \"price\": \"11500\", \"author\": \"데일 카네기\", \"publisher\": \"현대지성\", \"published_date\": \"20191007\" },\n { \"isbn\": \"9791130689890\", \"label\": \"내가 틀릴 수도 있습니다(화이트 에디션)\", \"categoryLabel\": \"인문\", \"price\": \"16000\", \"author\": \"비욘 나티코 린데블라드\", \"publisher\": \"다산초당\", \"published_date\": \"20220418\" },\n { \"isbn\": \"9791158883591\", \"label\": \"부자 아빠 가난한 아빠 1(20주년 특별 기념판)\", \"categoryLabel\": \"경제/경영\", \"price\": \"17000\", \"author\": \"로버트 기요사키\", \"publisher\": \"민음인\", \"published_date\": \"20221028\" },\n { \"isbn\": \"9788984374546\", \"label\": \"안젤리크\", \"categoryLabel\": \"소설\", \"price\": \"16800\", \"author\": \"기욤 뮈소\", \"publisher\": \"밝은세상\", \"published_date\": \"20221221\" },\n { \"isbn\": \"9791130621678\", \"label\": \"레버리지\", \"categoryLabel\": \"경제/경영\", \"price\": \"16000\", \"author\": \"롭 무어\", \"publisher\": \"다산북스\", \"published_date\": \"20190603\" },\n { \"isbn\": \"9788954699914\", \"label\": \"하얼빈\", \"categoryLabel\": \"소설\", \"price\": \"16000\", \"author\": \"김훈\", \"publisher\": \"문학동네\", \"published_date\": \"20220803\" },\n { \"isbn\": \"9791162540633\", \"label\": \"그릿(50만부 판매 기념 리커버 골드에디션)(양장본 Hardcover)\", \"categoryLabel\": \"자기계발\", \"price\": \"18000\", \"author\": \"앤절라 더크워스\", \"publisher\": \"비즈니스북스\", \"published_date\": \"20221219\" },\n { \"isbn\": \"9791191043976\", \"label\": \"오늘 밤, 세계에서 이 눈물이 사라진다 해도\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"이치조 미사키\", \"publisher\": \"모모\", \"published_date\": \"20220728\" },\n { \"isbn\": \"9791191114225\", \"label\": \"작별인사\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"author\": \"김영하\", \"publisher\": \"복복서가\", \"published_date\": \"20220502\" },\n { \"isbn\": \"9791192300245\", \"label\": \"마흔에 읽는 니체\", \"categoryLabel\": \"인문\", \"price\": \"16000\", \"author\": \"장재형\", \"publisher\": \"유노북스\", \"published_date\": \"20220901\" },\n { \"isbn\": \"9788937437564\", \"label\": \"참을 수 없는 존재의 가벼움\", \"categoryLabel\": \"소설\", \"price\": \"15000\", \"author\": \"밀란 쿤데라\", \"publisher\": \"민음사\", \"published_date\": \"20180620\" },\n { \"isbn\": \"9791169475808\", \"label\": \"체인소 맨 12\", \"categoryLabel\": \"만화\", \"price\": \"6000\", \"author\": \"Tatsuki Fujimoto\", \"publisher\": \"학산문화사\", \"published_date\": \"20230125\" },\n { \"isbn\": \"9791130696393\", \"label\": \"스카이 버스\", \"categoryLabel\": \"가정/육아\", \"price\": \"18000\", \"author\": \"분당강쌤\", \"publisher\": \"다산에듀\", \"published_date\": \"20230103\" },\n { \"isbn\": \"9788937439933\", \"label\": \"사랑의 이해\", \"categoryLabel\": \"소설\", \"price\": \"15000\", \"author\": \"이혁진\", \"publisher\": \"민음사\", \"published_date\": \"20190419\" },\n { \"isbn\": \"9791140702589\", \"label\": \"당신도 느리게 나이 들 수 있습니다\", \"categoryLabel\": \"인문\", \"price\": \"17800\", \"author\": \"정희원\", \"publisher\": \"더퀘스트\", \"published_date\": \"20230117\" },\n { \"isbn\": \"9788972773702\", \"label\": \"심리학이 제갈량에게 말하다 1\", \"categoryLabel\": \"자기계발\", \"price\": \"17800\", \"author\": \"천위안\", \"publisher\": \"리드리드출판\", \"published_date\": \"20230210\" },\n { \"isbn\": \"9791196617141\", \"label\": \"열 번 잘해도 한 번 실수로 무너지는 게 관계다\", \"categoryLabel\": \"시/에세이\", \"price\": \"19600\", \"author\": \"김다슬\", \"publisher\": \"클라우디아\", \"published_date\": \"20230120\" },\n { \"isbn\": \"9791198161734\", \"label\": \"런던에서 온 평양 여자\", \"categoryLabel\": \"시/에세이\", \"price\": \"18000\", \"author\": \"오혜선\", \"publisher\": \"더미라클\", \"published_date\": \"20230126\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","마우스 Drag를 통한 셀의 범위 선택 기능 설정하기"],["tmp","GridView\n[GridView] 마우스 Drag를 통한 셀의 범위 선택 기능 설정하기\n〈\n/page/P00104.xmldataDragSelectgridgridViewmouseuseShiftKey그리드뷰드래그\n〉\n예제와 가이드 함께 보기\nGridView 내에서 Drag를 통해 셀의 범위 선택을 제공하는 예제입니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n[기본설정] Drag를 통해 범위 선택 불가\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n5 시/에세이 나로서 충분히 괜찮은 사람\n6 역사/문화 나의 문화유산답사기\nDrag를 통해 범위 선택 가능\nGridView 내 Drag를 통해 셀의 범위 선택을 할 수 있습니다.\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n5 시/에세이 나로서 충분히 괜찮은 사람\n6 역사/문화 나의 문화유산답사기\nSee Also\n[GridView] 마우스 Drag로 다중 셀을 선택할 때 마우스가 GridView 밖으로 이동하면 마우스의 방향에 따라 셀의 선택을 연장하는 기능 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","마우스를 이용하여 셀의 수정(편집) 모드 진입 시 적용할 이벤트 지정하기"],["tmp","GridView\n[GridView] 마우스를 이용하여 셀의 수정(편집) 모드 진입 시 적용할 이벤트 지정하기\n〈\n/page/P00170.xmlcelleditModeEventeditModeEventIcongridgridViewmouse그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 속성 editModeEvent와 속성 editModeEventIcon의 설정 값 비교 예제입니다.\n두 속성은 마우스를 이용하여 셀을 수정 모드로 변경할 때 적용할 이벤트를 지정하는 기능을 제공합니다.\n속성별 적용 범위는 아래와 같습니다.\n- editModeEvent : 속성 viewType의 설정 값이 icon이 아닌 컬럼\n- editModeEventIcon의 : 속성 viewType의 설정 값이 icon인 컬럼\n속성은 GridView와 컬럼에 각각 설정할 수 있으며, 컬럼의 설정이 우선합니다.\n더보기\n\neditModeEvent - ondblclick (기본 값)\n셀을 더블 클릭하면 수정 모드로 변경됩니다.\n도서명 정가 출간일\n1 공정하다는 착각 18,000 2020-12-01\n2 사람일까 상황일까 28,000 2019-08-26\n3 무엇이 옳은가 17,800 2022-04-19\neditModeEvent - onclick\n셀을 클릭하면 수정 모드로 변경됩니다.\n도서명 정가 출간일\n1 공정하다는 착각 18,000 2020-12-01\n2 사람일까 상황일까 28,000 2019-08-26\n3 무엇이 옳은가 17,800 2022-04-19\neditModeEvent - onsecondclick\n셀이 선택된 상태에서 클릭하면 수정 모드로 변경됩니다.\n선택되지 않은 셀을 클릭하면 셀이 선택되고, 이후 동일 셀을 클릭하면 수정 모드로 변경됩니다.\n도서명 정가 출간일\n1 공정하다는 착각 18,000 2020-12-01\n2 사람일까 상황일까 28,000 2019-08-26\n3 무엇이 옳은가 17,800 2022-04-19\neditModeEvent 설정 값이 GridView와 컬럼이 다른 예시\nGridView의 전체 설정은 셀을 더블 클릭하면 수정 모드로 변경됩니다.\n단, 컬럼 [정가]는 셀을 클릭하면 수정 모드로 변경됩니다.\n도서명 정가 출간일\n1 공정하다는 착각 18,000 2020-12-01\n2 사람일까 상황일까 28,000 2019-08-26\n3 무엇이 옳은가 17,800 2022-04-19\neditModeEventIcon - onclick (기본 값)\n컬럼 [분류], [출간일]은 셀을 클릭하면 수정 모드로 변경됩니다.\n속성 editModeEvent은 ondblclick으로 설정되어 있습니다.\n컬럼 [도서명]은 셀을 더블 클릭하면 수정 모드로 변경됩니다.\n분류 출간일 도서명\n1\n인문\n2020-12-01 공정하다는 착각\n2\n인문\n2019-08-26 사람일까 상황일까\n3\n인문\n2022-04-19 무엇이 옳은가\neditModeEventIcon - ondblclick\n컬럼 [분류], [출간일]의 셀을 더블 클릭하면 수정 모드로 변경됩니다.\n속성 editModeEvent은 ondblclick으로 설정되어 있습니다.\n컬럼 [도서명]은 셀을 더블 클릭하면 수정 모드로 변경됩니다.\n분류 출간일 도서명\n1\n인문\n2020-12-01 공정하다는 착각\n2\n인문\n2019-08-26 사람일까 상황일까\n3\n인문\n2022-04-19 무엇이 옳은가\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\", \"price\": \"17800\", \"published_date\": \"20220419\" },\n { \"book_name\": \"불편한 편의점\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"published_date\": \"20210420\" },\n { \"book_name\": \"책들의 부엌\", \"categoryLabel\": \"소설\", \"price\": \"14500\", \"published_date\": \"20220512\" }\n ];\n\n dlt_books.setJSON(arrData);\n};"]],[["title","멀티 헤더 응용"],["tmp","GridView\n[GridView] 멀티 헤더 응용\n〈\n/page/P00196.xmlexcelfootergridgridViewheadermultiHader그리드뷰\n〉\nGridview의 Excel 다운로드 기능 예제입니다.\n각각 1줄, 2줄의 헤더를 가진 Gridview로 Selectbox를 통해 현재 보여지는 데이터와 실제 데이터 중 선택하여 다운로드 할 수 있습니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\n이 예제는 PC에 최적화 된 화면입니다. 모바일에서는 기능 일부가 작동하지 않을 수 있습니다.\n보여지는데이터\n1줄 엑셀 연동\n순번 상태 예탁계좌 예탁계좌명 보관기관 국가 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 기준일\n총계 0 0 0 0 0 0 0 0 총 0 건\n보여지는데이터\n2줄 엑셀 연동\n순번 상태 예탁계좌 예탁계좌명 보관기관 국가 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 기준일\n예금주 2예탁계좌명 2보관기관 국가 평균보관금액\n(원화) 점유율 평균보관금액\n(원화) 점유율 평균보관금액\n(원화) 점유율 평균보관금액\n(USD) 점유율 기준일\n총계 0 0 0 0 0 0 0 0 총 0 건\nSee Also\n[GridView] footer의 expression(올림,반올림,내림)\n[GridView] 엑셀 업로드 시 엑셀 파일의 셀에 포함된 공백 제거하기\n[GridView] GridView 컬럼의 속성 dataType, 속성 displayFormat을 스크립트로 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\n// 페이지 로드 시 실행\nscwin.onpageload = function () {\n //$p.executeSubmission(\"sbm_gridview1\");\n};\n\n// 검색 버튼 클릭 이벤트 - 그리드뷰 1번 데이터 submission 실행\nscwin.btn_search_onclick = function (e) {\n $p.executeSubmission(\"sbm_gridview1\");\n};\n\n// 그리드뷰 1번 footer 총 건수 표시 형식\nscwin.dis = function (data) {\n return \"총 \" + data + \" 건\";\n};\n\n// 지움 버튼 - 페이지 다시 로드\nscwin.btn_reset_onclick = function (e) {\n $p.reinitialize();\n};\n\n\n// 다운로드 버튼\nscwin.btn_down_onclick = function (e) {\n // 옵션 변수\n var options = {};\n // xlsx, xls, csv 구분 ex) .csv\n\n // 옵션 설정\n options.fileName = \"excel.xlsx\";\n options.type = select_type1.getValue();\n\n // 컬럼 무브를 적용해 다운 받을지 여부\n options.columnMove = \"true\";\n // 스타일 사용 여부\n options.useStyle = \"true\";\n // footer 포함 여부\n options.useFooter = \"true\";\n // 다운로드\n grd1.advancedExcelDownload(options);\n};\n\n// 업로드 버튼 클릭 이벤트\nscwin.btn_up_onclick = function (e) {\n var options = {};\n var type = select_type1.getValue();\n\n options.type = type;\n // 업로드 창 modal 사용 여부\n options.useModalDisable = \"true\";\n // 헤더 존재 여부\n options.headerExist = \"1\";\n\n options.processMsg = \"처리중입니다.\";\n\n // csv 타입인 경우\n if (type == \".csv\") {\n options.delim = \";\"\n grd1.readCSV(options);\n return;\n }\n // 업로드\n grd1.advancedExcelUpload(options);\n\n};\n\n// clear 버튼 클릭 이벤트 - 그리드뷰1번 초기화\nscwin.btn_clean_onclick = function (e) {\n dl_gridview1.setJSON([]);\n};\n\nscwin.masking_formatter = function (data) {\n var len = data.length;\n var str = \"\";\n if (len <= 0) {\n return \"\";\n }\n for (var i = 0; i < len - 2; i++)\n str += '*';\n return str + \"증권\";\n};\nscwin.btn_search_onclick = function (e) {\n $p.executeSubmission(\"sbm_gridview1\");\n};\n\nscwin.btn_insertRow1_onclick = function (e) {\n dl_gridview1.insertRow(0);\n}\n\n// 2줄 그리드 기능 처리\n// 다운로드\nscwin.btn_down2_onclick = function (e) {\n // 옵션 변수\n var options = {};\n // xlsx, xls, csv 구분 ex) .csv\n\n // 옵션 설정\n options.fileName = \"excel.xlsx\";\n options.type = select_type2.getValue();\n\n // 컬럼 무브를 적용해 다운 받을지 여부\n options.columnMove = \"true\";\n // 스타일 사용 여부\n options.useStyle = \"true\";\n // footer 포함 여부\n options.useFooter = \"true\";\n options.showProcess = true;\n // 다운로드\n grd2.advancedExcelDownload(options);\n};\n\n//업로드\nscwin.btn_up2_onclick = function (e) {\n var options = {};\n var type = select_type2.getValue();\n options.type = type;\n // 업로드 창 modal 사용 여부\n options.useModalDisable = \"true\";\n // 헤더 존재 여부\n options.headerExist = \"1\";\n options.processMsg = \"업로드중입니다.\";\n\n // csv 타입인 경우\n if (type == \".csv\") {\n options.delim = \";\"\n grd1.readCSV(options);\n return;\n }\n // 업로드\n grd2.advancedExcelUpload(options);\n};\n\n//초기화\nscwin.btn_clean2_onclick = function (e) {\n dl_gridview2.setJSON([]);\n};\n\nscwin.btn_insertRow2_onclick = function (e) {\n dl_gridview2.insertRow(0);\n}\n\n//조회\nscwin.btn_search2_onclick = function (e) {\n $p.executeSubmission(\"sbm_gridview2\");\n};\n\n// 단축키\nscwin.complete = function (e) {\n if (e.key == \"F1\") {\n var fr = $p.getParentWindow();\n fr.scwin.showHelp(\"p19\");\n } else if (e.key == \"F2\") {\n scwin.btn_search_onclick(e);\n scwin.btn_search2_onclick(e);\n }\n}\nscwin.grd_oncustompaste = function (data) {\n\n var dataArr = data.split(\"\\r\\n\");\n var retArr = [];\n for (var i = 0; i < dataArr.length; i++) {\n var rowArr = dataArr[i].split(\"\\t\");\n for (var j = 0; j < rowArr.length; j++) {\n rowArr[j] = rowArr[j].replaceAll(\",\", \"\");\n }\n retArr.push(rowArr);\n }\n\n var jsonToCsv = Papa.unparse(retArr, {\n delimiter: \"\\t\"\n });\n return jsonToCsv;\n}"]],[["title","목록형 inputType의 정렬할 데이터의 출처 설정하기"],["tmp","GridView\n[GridView] 목록형 inputType의 정렬할 데이터의 출처 설정하기\n〈\n/page/P00120.xmlgridgridViewshowSortableImagesortEventsortable그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 바디 컬럼의 inputType이 목록(콤보)형인 경우 정렬할 데이터의 출처를 설정하는 예제입니다.\n정렬할 데이터의 출처의 기본 설정값은 value입니다. 설정을 통해 label로 지정할 수 있습니다.\n적용 가능한 inputType은 select, checkcombobox, autoComplete입니다.\n기본 설정\n목록에 연결된 value 데이터를 기반으로 정렬됩니다.\nselect\ncheckcombobox\nautoComplete\nApple\nApple Apple\nLime\nLime Lime\nPeach\nPeach Peach\nGrapes\nGrapes Grapes\n정렬 데이터의 출처를 목록의 label로 지정\n목록에 연결된 label 데이터를 기반으로 정렬됩니다.\nselect\ncheckcombobox\nautoComplete\nApple\nApple Apple\nLime\nLime Lime\nPeach\nPeach Peach\nGrapes\nGrapes Grapes\n[참고 정보] 목록 데이터\nGridView에 연결된 목록형 inputType에 연결된 DataList \"dlt_exam_code\"의 데이터입니다.\nlabel code\nPeach 01\nLime 02\nApple 03\nGrapes 04\nSee Also\n[GridView] 병합된 헤더 컬럼에 정렬 기능을 사용할 바디 컬럼 지정하기\n[GridView] Event - onsort (헤더를 클릭 또는 더블클릭하여 데이터 정렬된 경우 발생)\n[GridView] 정렬 아이콘과 필터 아이콘을 모두 표시하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrCodeData = [\n { \"label\": \"Peach\", \"code\": \"01\" },\n { \"label\": \"Lime\", \"code\": \"02\" },\n { \"label\": \"Apple\", \"code\": \"03\" },\n { \"label\": \"Grapes\", \"code\": \"04\" }\n ];\n\n var arrData = [\n { \"select\": \"03\", \"checkcombobox\": \"03\", \"autoComplete\": \"03\" },\n { \"select\": \"02\", \"checkcombobox\": \"02\", \"autoComplete\": \"02\" },\n { \"select\": \"01\", \"checkcombobox\": \"01\", \"autoComplete\": \"01\" },\n { \"select\": \"04\", \"checkcombobox\": \"04\", \"autoComplete\": \"04\" }\n ];\n\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON(arrCodeData);\n\n dlt_exam_1.setJSON(arrData);\n dlt_exam_2.setJSON(arrData);\n};"]],[["title","병합된 헤더 컬럼에 정렬 기능을 사용할 바디 컬럼 지정하기"],["tmp","GridView\n[GridView] 병합된 헤더 컬럼에 정렬 기능을 사용할 바디 컬럼 지정하기\n〈\n/page/P00119.xmlgridgridVieworderByColumnshowSortableImagesortEventsortable그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 헤더 컬럼이 병합되었을 때 정렬 기능을 적용할 바디 컬럼을 지정하는 예제입니다.\n기본 설정\n병합된 헤더 컬럼의 첫번째 바디 컬럼(도서명)을 기준으로 정렬됩니다.\n도서 정보\n1 불편한 편의점 14,000 2021-04-20\n2 어린왕자 2,000 1981-08-01\n3 사람일까 상황일까 28,000 2019-08-26\n4 내가 틀릴 수도 있습니다 16,000 2022-04-18\n두번째 바디 컬럼(정가)이 정렬\n병합된 헤더 컬럼의 두번째 바디 컬럼(정가)을 기준으로 정렬됩니다.\n도서 정보\n1 불편한 편의점 14,000 2021-04-20\n2 어린왕자 2,000 1981-08-01\n3 사람일까 상황일까 28,000 2019-08-26\n4 내가 틀릴 수도 있습니다 16,000 2022-04-18\nSee Also\n[GridView] Event - onsort (헤더를 클릭 또는 더블클릭하여 데이터 정렬된 경우 발생)\n[GridView] 목록형 inputType의 정렬할 데이터의 출처 설정하기\n[GridView] 정렬 아이콘과 필터 아이콘을 모두 표시하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"불편한 편의점\", \"price\": \"14000\", \"published_date\": \"20210420\" },\n { \"book_name\": \"어린왕자\", \"price\": \"2000\", \"published_date\": \"19810801\" },\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"인간 실격\", \"price\": \"9000\", \"published_date\": \"20040515\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"JavaScript Patterns\", \"price\": \"22000\", \"published_date\": \"20111103\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","보여질 행의 개수 지정하기"],["tmp","GridView\n[GridView] 보여질 행의 개수 지정하기\n〈\n/page/P00207.xmlgridgridViewsetVisibleRowNumvisibleRowNumvisibleRowNumFix그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView에 보여질 행의 개수를 지정하는 예제입니다.\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- visibleRowNum : (속성) 화면에 표현할 행의 개수.\n- setVisibleRowNum : (함수) 속성 visibleRowNum을 스크립트로 지정.\n각 영역의 GridView는 동일한 height로 지정되어 있습니다.\n브라우저에 출력되는 것을 비교합니다.\n보여질 행의 수 지정하기\n이 GridView는 속성 visibleRowNum이 3으로 지정되어, 초기에 3개의 행이 보여집니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 무엇이 옳은가 17,800 2022-04-19\n속성 visibleRowNum을 미지정\nGridView에 지정된 높이에 출력할 수 있는 행만 그려집니다.\n이 GridView는 1개의 행이 보여지며 남은 공간은 빈 여백으로 표시됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\nSee Also\n[GridView] 보여질 행의 개수(visibleRowNum)를 기반으로 GridView 높이 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [보여지는 행을 2개로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 보여지는 행을 2개로 지정하기\n grd_exam1.setVisibleRowNum(2);\n};\n\n/**\n * 버튼 [보여지는 행을 전체로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var numTotalRow;\n\n //GridView 'grd_exam1'의 전체 행 개수 반환 받기\n numTotalRow = grd_exam1.getTotalRow();\n\n //GridView 'grd_exam1'의 보여지는 행을 전체로 지정하기\n grd_exam1.setVisibleRowNum(numTotalRow);\n};"]],[["title","보여질 행의 개수(visibleRowNum)를 기반으로 GridView 높이 설정하기"],["tmp","GridView\n[GridView] 보여질 행의 개수(visibleRowNum)를 기반으로 GridView 높이 설정하기\n〈\n/page/P00209.xmlgridgridViewvisibleRowNumvisibleRowNumFix그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 초기 높이를 속성 visibleRowNum에 지정된 행의 개수를 바탕으로 설정하는 예제입니다.\n데이터가 할당되기 전의 GridView의 높이를 고정할 때 주로 사용됩니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- visibleRowNum : (속성) 화면에 표현할 행의 개수.\n- visibleRowNumFix : (속성) 초기 gridView의 높이를 visibleRowNum에 설정한 값에 해당하는 크기만큼 자동으로 늘려주는 설정\n속성 visibleRowNum, visibleRowNumFix 지정\nGridView에 지정된 높이는 70px입니다. 높이를 가늠하기 위해 배경색이 지정되어 있습니다.\n이 GridView는 속성 visibleRowNum이 3, 속성 visibleRowNumFix이 true로 지정되어 있습니다.\n도서명 정가 출간일\n속성 visibleRowNum 지정\nGridView에 지정된 높이는 70px입니다. 높이를 가늠하기 위해 배경색이 지정되어 있습니다.\n이 GridView는 속성 visibleRowNum이 3으로 지정되어 있습니다.\n데이터가 할당되기 전이기 때문에 초기 높이 값이 70px로 설정됩니다.\n도서명 정가 출간일\nSee Also\n[GridView] 보여질 행의 개수 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 데이터 반환\n */\nscwin.getData = function () {\n return [\n { \"book_name\": \"사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"무엇이 옳은가\", \"price\": \"17800\", \"published_date\": \"20220419\" },\n { \"book_name\": \"공정하다는 착각\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"불편한 편의점\", \"price\": \"14000\", \"published_date\": \"20210420\" }\n ];\n};\n\n/**\n * 버튼 [GridView에 Data 할당하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n dlt_books_1.setJSON(scwin.getData());\n};\n\n/**\n * 버튼 [GridView에 Data 할당하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n dlt_books_2.setJSON(scwin.getData());\n};"]],[["title","브라우저에 표현하는 방식 설정하기"],["tmp","GridView\n[GridView] 브라우저에 표현하는 방식 설정하기\n〈\n/page/P00090.xmldrawTypegridgridViewrendering그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView를 브라우저에 표현(Rendering)하는 방식의 설정 예제입니다.\n[기본 설정] WebSquare 방식(화면에 노출되는 영역만 table로 출력)\n도서명 정가 출간일\n1 1. 정글만리 16,500 2013-07-01\n2 1. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 1. 사람일까 상황일까 28,000 2019-08-26\n4 2. 정글만리 16,500 2013-07-01\nNative 방식 (데이터를 table로 모두 출력)\n도서명 정가 출간일\n1 1. 정글만리 16,500 2013-07-01\n2 1. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 1. 사람일까 상황일까 28,000 2019-08-26\n4 2. 정글만리 16,500 2013-07-01\n5 2. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n6 2. 사람일까 상황일까 28,000 2019-08-26\n7 3. 정글만리 16,500 2013-07-01\n8 3. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n9 3. 사람일까 상황일까 28,000 2019-08-26\n10 4. 정글만리 16,500 2013-07-01\n11 4. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n12 4. 사람일까 상황일까 28,000 2019-08-26\n13 5. 정글만리 16,500 2013-07-01\n14 5. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n15 5. 사람일까 상황일까 28,000 2019-08-26\n16 6. 정글만리 16,500 2013-07-01\n17 6. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n18 6. 사람일까 상황일까 28,000 2019-08-26\n19 7. 정글만리 16,500 2013-07-01\n20 7. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n21 7. 사람일까 상황일까 28,000 2019-08-26\n22 8. 정글만리 16,500 2013-07-01\n23 8. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n24 8. 사람일까 상황일까 28,000 2019-08-26\n25 9. 정글만리 16,500 2013-07-01\n26 9. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n27 9. 사람일까 상황일까 28,000 2019-08-26\n28 10. 정글만리 16,500 2013-07-01\n29 10. 내가 틀릴 수도 있습니다 16,000 2022-04-18\n30 10. 사람일까 상황일까 28,000 2019-08-26\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n //DataList 할당\n dlt_books.setJSON([\n { \"book_name\": \"1. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"1. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"1. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"2. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"2. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"2. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"3. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"3. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"3. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"4. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"4. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"4. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"5. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"5. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"5. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"6. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"6. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"6. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"7. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"7. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"7. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"8. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"8. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"8. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"9. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"9. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"9. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"10. 정글만리\", \"price\": \"16500\", \"published_date\": \"20130701\" },\n { \"book_name\": \"10. 내가 틀릴 수도 있습니다\", \"price\": \"16000\", \"published_date\": \"20220418\" },\n { \"book_name\": \"10. 사람일까 상황일까\", \"price\": \"28000\", \"published_date\": \"20190826\" }\n ]);\n};"]],[["title","비활성화 여부 지정하기"],["tmp","GridView\n[GridView] 비활성화 여부 지정하기\n〈\n/page/P00190.xmlgridgridViewsetDisabeld그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 비활성화 여부를 지정하는 예제입니다.\nGirdView, Column, Row, Cell 단위로 지정할 수 있습니다.\n이 기능은 GridView의 함수 setDisabled 호출하여 사용할 수 있습니다.\nGridView 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 셀의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nGridView 셀의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 셀의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nGridView 컬럼의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 컬럼의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nGridView 로우의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 로우의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 비활성화 여부 지정하기 - 셀, 컬럼, 로우\n[GridView] 셀이 비활성화되었을 때의 셀 배경색, 글자색 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * 버튼 [GridVeiw 비활성화 하기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n //GridView 비활성화\n grd_exam1.setDisabled(\"grid\", true);\n};\n\n/**\n * 버튼 [GridVeiw 활성화 하기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView 비활성화\n grd_exam1.setDisabled(\"grid\", false);\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 2번째 행의 셀을 비활성화 하기] 클릭 시\n */\nscwin.btn_ex2_1_onclick = function (e) {\n //GridView 'grd_exam2'의 컬럼 '도서명'의 2번째 행의 셀을 비활성화 하기\n grd_exam2.setDisabled(\"cell\", 1, \"book_name\", true);\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 2번째 행의 셀을 활성화 하기] 클릭 시\n */\nscwin.btn_ex2_2_onclick = function (e) {\n //GridView 'grd_exam2'의 컬럼 '도서명'의 2번째 행의 셀을 활성화 하기\n grd_exam2.setDisabled(\"cell\", 1, \"book_name\", false);\n};\n\n/**\n * 버튼 [컬럼 '정가'를 비활성화 하기] 클릭 시\n */\nscwin.btn_ex3_1_onclick = function (e) {\n //GridView 'grd_exam3'의 컬럼 '정가'를 비활성화 하기\n grd_exam3.setDisabled(\"column\", \"price\", true);\n};\n\n/**\n * 버튼 [컬럼 '정가'를 활성화 하기] 클릭 시\n */\nscwin.btn_ex3_2_onclick = function (e) {\n //GridView 'grd_exam3'의 컬럼 '정가'를 활성화 하기\n grd_exam3.setDisabled(\"column\", \"price\", false);\n};\n\n/**\n * 버튼 [1번째 행을 비활성화 하기] 클릭 시\n */\nscwin.btn_ex4_1_onclick = function (e) {\n //GridView 'grd_exam4'의 1번째 행을 비활성화 하기\n grd_exam4.setDisabled(\"row\", 0, true);\n};\n\n/**\n * 버튼 [1번째 행을 활성화 하기] 클릭 시\n */\nscwin.btn_ex4_2_onclick = function (e) {\n //GridView 'grd_exam4'의 1번째 행을 활성화 하기\n grd_exam4.setDisabled(\"row\", 0, false);\n};"]],[["title","비활성화 여부 지정하기 - 셀, 컬럼, 로우"],["tmp","GridView\n[GridView] 비활성화 여부 지정하기 - 셀, 컬럼, 로우\n〈\n/page/P00188.xmlgridgridViewsetCellDisabledsetColumnDisabledsetRowDisabled그리드뷰열행\n〉\n예제와 가이드 함께 보기\nGridView의 셀, 컬럼, 로우의 비활성화 여부를 지정하는 예제입니다.\n이 기능은 아래의 GridView의 함수를 호출하여 사용할 수 있습니다.\n- setCellDisabled : 셀 단위 비활성화\n- setColumnDisabled : 컬럼 단위 비활성화\n- setRowDisabled : 로우 단위 비활성화\n또는 GridView 함수 setDisabled을 사용하여 제어할 수 있습니다.\n함수 setDisabled 사용 예시는 예제 파일명 P00190.xml에서 확인할 수 있습니다.\nGridView 셀의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 셀의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nGridView 컬럼의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 컬럼의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nGridView 로우의 비활성화 여부 지정하기\n아래의 버튼을 클릭하고 GridView 로우의 비활성화 여부를 확인합니다.\n비활성화가 적용되면 셀이 수정 모드로 변경되지 않습니다.\n이 GridView는 비활성화가 되었을 때 배경색과 글자색이 변경됩니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 비활성화 여부 지정하기\n[GridView] 셀이 비활성화되었을 때의 셀 배경색, 글자색 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 2번째 행의 셀을 비활성화 적용하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '도서명'의 2번째 행의 셀을 비활성화 적용하기\n grd_exam1.setCellDisabled(1, \"book_name\", true);\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 2번째 행의 셀을 비활성화 해제하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '도서명'의 2번째 행의 셀을 비활성화 해제하기\n grd_exam1.setCellDisabled(1, \"book_name\", false);\n};\n\n/**\n * 버튼 [컬럼 '정가'에 비활성화 적용하기] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n //GridView 'grd_exam2'의 컬럼 '정가'에 비활성화 적용하기\n grd_exam2.setColumnDisabled(\"price\", true);\n};\n\n/**\n * 버튼 [컬럼 '정가'에 비활성화 해제하기] 클릭 시\n */\nscwin.btn_ex4_onclick = function (e) {\n //GridView 'grd_exam2'의 컬럼 '정가'에 비활성화 해제하기\n grd_exam2.setColumnDisabled(\"price\", false);\n};\n\n/**\n * 버튼 [1번째 행에 비활성화 적용하기] 클릭 시\n */\nscwin.btn_ex5_onclick = function (e) {\n //GridView 'grd_exam3'의 1번째 행에 비활성화 적용하기\n grd_exam3.setRowDisabled(0, true);\n};\n\n/**\n * 버튼 [1번째 행에 비활성화 해제하기] 클릭 시\n */\nscwin.btn_ex6_onclick = function (e) {\n //GridView 'grd_exam3'의 1번째 행에 비활성화 해제하기\n grd_exam3.setRowDisabled(0, false);\n};"]],[["title","선택된 cell 또는 row의 배경색 지정하기"],["tmp","GridView\n[GridView] 선택된 cell 또는 row의 배경색 지정하기\n〈\n/page/P00172.xmlfocusModegridgridViewselectedCellColorselectedCellOverColorselectedRowColorselectedRowOverColor그리드뷰셀행\n〉\n예제와 가이드 함께 보기\nGridView의 선택된 cell과 row의 배경색을 지정하는 예제입니다.\n관련된 속성은 selectedRowColor, selectedRowOverColor, selectedCellColor, selectedCellOverColor입니다.\nGridView의 속성 focusMode의 설정값에 따른 동작을 비교합니다.\n예제의 GridView에는 속성이 동일하게 지정되었습니다.\n각 속성에 지정된 배경색은 아래와 같습니다.\n- selectedCellColor : chocolate //선택된 cell의 배경색이 chocolate로 변경됩니다.\n- selectedCellOverColor : green //선택된 cell에 마우스를 over하면 배경색이 green으로 변경됩니다.\n- selectedRowColor : yellow //선택된 row의 배경색이 yellow로 변경됩니다.\n- selectedRowOverColor : skyblue //선택된 row에 마우스를 over하면 배경색이 skyblue로 변경됩니다.\n(기본설정) focusMode : cell\n셀 선택 시 포커스(선택) 범위가 셀(Cell) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nfocusMode : row\n셀 선택 시 포커스(선택) 범위가 행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nfocusMode : both\n셀 선택 시 포커스(선택) 범위가 셀(Cell)+행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nfocusMode : none\n셀 선택 시 포커스(선택)가 되지 않습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nSee Also\n[GridView] 셀 선택 시 선택 범위 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","선택형 inputType의 목록 중 특정 항목 비활성화 하기"],["tmp","GridView\n[GridView] 선택형 inputType의 목록 중 특정 항목 비활성화 하기\n〈\n/page/P00094.xmlgridgridViewsetColumnEnableColumn그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 inputType이 목록 선택형(DropDown) 타입인 경우,\n목록의 특정 항목을 비활성화하는 예제입니다.\n적용 가능한 inputType은 select, checkcombobox, autoComplete입니다.\n[기본 설정] 모든 항목 활성화\nselect checkcombobox autoComplete\n- 선택 -\n- 선택 - - 선택 -\n- 선택 -\n- 선택 - - 선택 -\n비활성화 항목 지정\nselect checkcombobox autoComplete\n- 선택 -\n- 선택 - - 선택 -\n- 선택 -\n- 선택 - - 선택 -\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //GridView의 선택형 inputType의 목록과 연결된 DataList \"dlt_exam_code\"에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Melon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n\n //GridView와 연결된 DataList에 빈 행 추가\n dlt_exam.insertRow();\n dlt_exam.insertRow();\n\n //GridView의 컬럼 select에 비활성화 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 비활성화 지정\n grd_exam2.setColumnEnableColumn(\"select\", \"useYN\", \"N\");\n\n //GridView의 컬럼 checkcombobox에 비활성화 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 비활성화 지정\n grd_exam2.setColumnEnableColumn(\"checkcombobox\", \"useYN\", \"N\");\n\n //GridView의 컬럼 autoComplete에 비활성화 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 비활성화 지정\n grd_exam2.setColumnEnableColumn(\"autoComplete\", \"useYN\", \"N\");\n};"]],[["title","선택형 inputType의 목록 중 특정 항목 숨기기"],["tmp","GridView\n[GridView] 선택형 inputType의 목록 중 특정 항목 숨기기\n〈\n/page/P00095.xmlgridgridViewsetColumnVisibleColumn그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 inputType이 목록 선택형(DropDown) 타입인 경우,\n목록의 특정 항목을 숨기는 예제입니다.\n적용 가능한 inputType은 select, checkcombobox, autoComplete입니다.\n[기본 설정] 모든 항목 노출\nselect checkcombobox autoComplete\n- 선택 -\n- 선택 - - 선택 -\n- 선택 -\n- 선택 - - 선택 -\n미노출 항목 지정\nselect checkcombobox autoComplete\n- 선택 -\n- 선택 - - 선택 -\n- 선택 -\n- 선택 - - 선택 -\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //GridView의 선택형 inputType의 목록과 연결된 DataList \"dlt_exam_code\"에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Melon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n\n //GridView와 연결된 DataList에 빈 행 추가\n dlt_exam.insertRow();\n dlt_exam.insertRow();\n\n //GridView의 컬럼 select에 미노출 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 미노출 지정\n grd_exam2.setColumnVisibleColumn(\"select\", \"useYN\", \"N\");\n\n //GridView의 컬럼 checkcombobox에 미노출 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 미노출 지정\n grd_exam2.setColumnVisibleColumn(\"checkcombobox\", \"useYN\", \"N\");\n\n //GridView의 컬럼 autoComplete에 미노출 항목 지정하기\n //목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"이면 미노출 지정\n grd_exam2.setColumnVisibleColumn(\"autoComplete\", \"useYN\", \"N\");\n};"]],[["title","셀 선택 시 선택 범위 지정하기"],["tmp","GridView\n[GridView] 셀 선택 시 선택 범위 지정하기\n〈\n/page/P00096.xmlfocusModegridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 셀(Cell) 선택 시 선택 범위를 비교하는 예제입니다.\n기본 설정은 셀(Cell) 단위이며, 설정을 통해 행(Row)단위, 셀(Cell)+행(Row) 단위, 아무 동작 안함으로 변경할 수 있습니다.\n[기본설정] focusMode : cell\n셀 선택 시 포커스(선택) 범위가 셀(Cell) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nfocusMode : row\n셀 선택 시 포커스(선택) 범위가 행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nfocusMode : both\n셀 선택 시 포커스(선택) 범위가 셀(Cell)+행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nfocusMode : none\n셀 선택 시 포커스(선택)가 되지 않습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 선택된 cell 또는 row의 배경색 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","셀에 class 적용하기"],["tmp","GridView\n[GridView] 셀에 class 적용하기\n〈\n/page/P00186.xmlgridgridViewsetCellClass그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 셀에 class를 적용하는 예제입니다.\n이 기능은 함수 setCellClass를 호출하여 사용할 수 있습니다.\nGridView의 특정 셀에 class 적용하기\n아래의 버튼을 클릭하고 GridView 셀의 배경색, 글자색을 확인합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nSee Also\n[GridView] 셀의 배경색 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 2번째 행의 셀에 class 'P00186_exam1' 적용하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '도서명'의 2번째 행의 셀에 class 'P00186_exam1'을 적용합니다.\n //class 'P00186_exam1'는 '/css/example.css'에 정의되어 있습니다.\n grd_exam1.setCellClass(1, \"book_name\", \"P00186_exam1\");\n};"]],[["title","셀의 inputType을 동적으로 변경하기"],["tmp","GridView\n[GridView] 셀의 inputType을 동적으로 변경하기\n〈\n/page/P00116.xmlcustomgridgridViewinputTypetypeGetter그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼의 inputType을 조건에 따라 설정하는 예제입니다.\n컬럼 [유형]의 값을 조건으로 컬럼 [inputType=\"custom\"]의 inputType이 설정되었습니다.\n유형 inputType=\"custom\"\n1 checkbox 선택\n2 input 사람일까 상황일까\n3 calendar 2002-04-15\n4 checkbox 선택\n5 select\n미선택\n6 input 공정하다는 착각\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * grd_exam1의 컬럼 [inputType=\"custom\"]의 inputType 반환\n * 속성 [typeGetter]에 함수명이 정의되어있습니다.\n */\nscwin.grd_exam1_type_value_typeGetter = function (argInfo) {\n var rowIndex = argInfo.rowIndex;\n var colIndex = argInfo.colIndex;\n var jsnRow;\n var returnInfo; //inputType 정보가 담긴 JSON객체\n var inputType;\n var strID;\n\n jsnRow = dlt_exam1.getRowJSON(rowIndex); //현 행의 JSON 데이터 반환받기\n inputType = jsnRow.type || \"notype\";\n\n //중복되지 않는 ID 생성\n strID = \"dynamic_\" + inputType + \"_\" + rowIndex + \"_\" + colIndex;\n\n switch (inputType) {\n case \"checkbox\":\n returnInfo = {\n id: strID,\n inputType: \"checkbox\",\n options: { valueType: \"other\", trueValue: \"Y\", falseValue: \"N\", checkboxLabel: \"선택\" }\n };\n break;\n case \"calendar\":\n returnInfo = {\n id: strID,\n inputType: \"calendar\",\n options: { viewType: \"icon\", dataType: \"date\", displayFormat: \"yyyy-MM-dd\" }\n };\n break;\n case \"select\":\n //itemSet 속성은 select에 출력할 콤보 리스트에 연결할 DataList의 정보입니다.\n returnInfo = {\n id: strID,\n inputType: \"select\",\n options: { viewType: \"icon\" },\n itemSet: {\n nodeset: \"data:dlt_code\",\n label: \"label\",\n value: \"code\"\n }\n };\n break;\n case \"input\":\n default:\n returnInfo = {\n id: strID,\n inputType: \"text\",\n options: {}\n };\n break;\n }\n\n return returnInfo;\n\n};"]],[["title","셀의 inputType을 동적으로 변경하기 - 스크립트"],["tmp","GridView\n[GridView] 셀의 inputType을 동적으로 변경하기 - 스크립트\n〈\n/page/P00117.xmlcustomgridgridViewinputTypesetCellInputTypesetCellInputTypeCustom그리드뷰\n〉\n예제와 가이드 함께 보기\n원하는 시점에 GridView 셀의 inputType을 변경하는 예제입니다.\n컬럼 [동적 inputType]의 inputType 변경하기\n유형 동적 inputType\n1 checkbox Y\n2 select 02\n3 calendar 20020415\n4 input 공정하다는 착각\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [1번째 행의 inputType을 \"checkbox\"로 변경하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnCellInfo;\n var numRowIndex;\n var strColID;\n\n strRowIndex = 0; //변경할 행의 index \n strColID = \"type_value\" //변경할 열의 ID\n\n strID = \"dynamic_select_\" + strRowIndex + \"_\" + strColID; //중복되지 않는 GridVIew의 셀 ID 생성\n\n //inputType 정보\n jsnCellInfo = {\n id: strID,\n inputType: \"checkbox\",\n options: { valueType: \"other\", trueValue: \"Y\", falseValue: \"N\", checkboxLabel: \"선택\" }\n };\n\n //GridView \"grd_exam1\"의 셀 inputType을 변경합니다.\n grd_exam1.setCellInputType(strRowIndex, strColID, jsnCellInfo);\n};\n\n/**\n * 버튼 [2번째 행의 inputType을 \"select\"로 변경하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnCellInfo;\n var numRowIndex;\n var strColID;\n\n strRowIndex = 1; //변경할 행의 index\n strColID = \"type_value\" //변경할 열의 ID\n\n strID = \"dynamic_select_\" + strRowIndex + \"_\" + strColID; //중복되지 않는 GridVIew의 셀 ID 생성\n\n //inputType 정보\n jsnCellInfo = {\n id: strID,\n inputType: \"select\",\n options: { viewType: \"icon\" },\n itemSet: {\n nodeset: \"data:dlt_code\",\n label: \"label\",\n value: \"code\"\n }\n };\n\n //GridView \"grd_exam1\"의 셀 inputType을 변경합니다.\n grd_exam1.setCellInputType(strRowIndex, strColID, jsnCellInfo);\n};\n\n/**\n * 버튼 [3번째 행의 inputType을 \"calenar\"로 변경하기] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var jsnCellInfo;\n var numRowIndex;\n var strColID;\n\n strRowIndex = 2; //변경할 행의 index\n strColID = \"type_value\" //변경할 열의 ID\n\n strID = \"dynamic_select_\" + strRowIndex + \"_\" + strColID; //중복되지 않는 GridVIew의 셀 ID 생성\n\n //inputType 정보\n jsnCellInfo = {\n id: strID,\n inputType: \"calendar\",\n options: { viewType: \"icon\", dataType: \"date\", displayFormat: \"yyyy-MM-dd\" }\n };\n\n //GridView \"grd_exam1\"의 셀 inputType을 변경합니다.\n grd_exam1.setCellInputType(strRowIndex, strColID, jsnCellInfo);\n};"]],[["title","셀의 글자색 지정하기"],["tmp","GridView\n[GridView] 셀의 글자색 지정하기\n〈\n/page/P00187.xmlgridgridViewsetCellColor그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 셀의 글자색을 지정하는 예제입니다.\n이 기능은 함수 setCellColor를 호출하여 사용할 수 있습니다.\nGridView 셀의 글자색 지정하기\n아래의 버튼을 클릭하고 GridView 셀의 글자색을 확인합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 셀에 class 적용하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [컬럼 '출간일'의 2번째 행에 글자색을 'tomato'로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '출간일'의 2번째 행의 글자색을 'tomato'로 지정하기\n grd_exam1.setCellColor(1, \"published_date\", \"tomato\");\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 3번째 행에 글자색을 '#DAA520'로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '도서명'의 3번째 행의 글자색을 '#DAA520'로 지정하기\n grd_exam1.setCellColor(2, \"book_name\", \"#DAA520\");\n};"]],[["title","셀의 배경색 지정하기"],["tmp","GridView\n[GridView] 셀의 배경색 지정하기\n〈\n/page/P00185.xmlgridgridViewsetCellBackgroundColor그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 셀의 배경색을 지정하는 예제입니다.\n이 기능은 함수 setCellBackgroundColor를 호출하여 사용할 수 있습니다.\nGridView 셀의 배경색 지정하기\n아래의 버튼을 클릭하고 GridView 셀의 배경색을 확인합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 셀에 class 적용하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [컬럼 '정가'의 2번째 행에 배경색을 'peru'로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '정가'의 2번째 행의 배경색을 'peru'로 지정하기\n grd_exam1.setCellBackgroundColor(1, \"price\", \"peru\");\n};\n\n/**\n * 버튼 [컬럼 '도서명'의 1번째 행에 배경색을 '#9ACD32'로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '도서명'의 1번째 행의 배경색을 '#9ACD32'로 지정하기\n grd_exam1.setCellBackgroundColor(0, \"book_name\", \"#9ACD32\");\n};"]],[["title","셀의 범위(range) 선택하기"],["tmp","GridView\n[GridView] 셀의 범위(range) 선택하기\n〈\n/page/P00097.xmlgridgridViewsetFocusedMultiCell그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 범위 선택을 스크립트로 지정하는 예제입니다.\n각 버튼을 클릭하여 각 그리드의 범위 선택을 비교합니다.\n범위 선택 실행\n결과 확인용 GridView - [기본설정] focusMode : cell\n셀 선택 시 포커스(선택) 범위가 셀(Cell) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n결과 확인용 GridView - focusMode : row\n셀 선택 시 포커스(선택) 범위가 행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n결과 확인용 GridView - focusMode : both\n셀 선택 시 포커스(선택) 범위가 셀(Cell)+행(Row) 단위입니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n결과 확인용 GridView - focusMode : none\n셀 선택 시 포커스(선택)가 되지 않습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [1번째 행 1번째 컬럼 ~ 2번째 행 2번째 컬럼] 클릭시\n */\nscwin.btn_ex1_onclick = function (e) {\n //1번째 행 1번째 컬럼 ~ 2번째 행 2번째 컬럼 선택하기\n grd_exam1.setFocusedMultiCell(0, 0, 1, 1);\n grd_exam2.setFocusedMultiCell(0, 0, 1, 1);\n grd_exam3.setFocusedMultiCell(0, 0, 1, 1);\n grd_exam4.setFocusedMultiCell(0, 0, 1, 1);\n\n //포커스 버튼으로 이동.\n btn_ex1.focus();\n};\n\n/**\n * 버튼 [행:1, 열:1 ~ 행:2, 열:2 + ignoreFocusMode 적용] 클릭시\n */\nscwin.btn_ex3_onclick = function (e) {\n //1번째 행 1번째 컬럼 ~ 2번째 행 2번째 컬럼 선택하기 - 설정된 FocusMode 무시\n grd_exam1.setFocusedMultiCell(0, 0, 1, 1, { ignoreFocusMode: true });\n grd_exam2.setFocusedMultiCell(0, 0, 1, 1, { ignoreFocusMode: true });\n grd_exam3.setFocusedMultiCell(0, 0, 1, 1, { ignoreFocusMode: true });\n grd_exam4.setFocusedMultiCell(0, 0, 1, 1, { ignoreFocusMode: true });\n\n //포커스 버튼으로 이동.\n btn_ex3.focus();\n};\n\n/**\n * 버튼 [2번째 행 2번째 컬럼 ~ 4번째 행 3번째 컬럼] 클릭시\n */\nscwin.btn_ex2_onclick = function (e) {\n //2번째 행 2번째 컬럼 ~ 4번째 행 3번째 컬럼\n grd_exam1.setFocusedMultiCell(1, 1, 3, 2);\n grd_exam2.setFocusedMultiCell(1, 1, 3, 2);\n grd_exam3.setFocusedMultiCell(1, 1, 3, 2);\n grd_exam4.setFocusedMultiCell(1, 1, 3, 2);\n\n //포커스 버튼으로 이동.\n btn_ex2.focus();\n};\n\n/**\n * 버튼 [행:2, 열:2 ~ 행:4, 열:3 + ignoreFocusMode 적용] 클릭시\n */\nscwin.btn_ex4_onclick = function (e) {\n //2번째 행 2번째 컬럼 ~ 4번째 행 3번째 컬럼 - 설정된 FocusMode 무시\n grd_exam1.setFocusedMultiCell(1, 1, 3, 2, { ignoreFocusMode: true });\n grd_exam2.setFocusedMultiCell(1, 1, 3, 2, { ignoreFocusMode: true });\n grd_exam3.setFocusedMultiCell(1, 1, 3, 2, { ignoreFocusMode: true });\n grd_exam4.setFocusedMultiCell(1, 1, 3, 2, { ignoreFocusMode: true });\n\n //포커스 버튼으로 이동.\n btn_ex4.focus();\n};"]],[["title","셀이 비활성화되었을 때의 셀 배경색, 글자색 지정하기"],["tmp","GridView\n[GridView] 셀이 비활성화되었을 때의 셀 배경색, 글자색 지정하기\n〈\n/page/P00189.xmlclassdisabledBackgroundColordisabledFontColorgridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 비활성화 된 셀의 배경색과 글자색을 지정하는 예제입니다.\n이 기능은 속성 disabledBackgroundColor, disabledFontColor에 지정하여 사용할 수 있습니다.\n또는 class 'w2grid_default_disabled'를 재정의하여 지정할 수도 있습니다.\n화면 로딩 후 각 GridView에 cell, column, row 단위를 비활성화하는 스크립트가 작성되어 있습니다.\n비활성화 된 셀의 배경색, 글자색 지정 - 속성\n컬럼 '도서명'의 1번째 행의 셀이 비활성화 되었습니다.\n컬럼 '정가'가 비활성화 되었습니다.\n3번째 행이 비활성화 되었습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n비활성화 된 셀의 배경색, 글자색 지정 - class 정의\n컬럼 '도서명'의 1번째 행의 셀이 비활성화 되었습니다.\n컬럼 '정가'가 비활성화 되었습니다.\n3번째 행이 비활성화 되었습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n비활성화 된 셀의 배경색, 글자색 지정 안함 (기본 설정)\n컬럼 '도서명'의 1번째 행의 셀이 비활성화 되었습니다.\n컬럼 '정가'가 비활성화 되었습니다.\n3번째 행이 비활성화 되었습니다.\n기본 설정은 셀의 style이 변경되지 않습니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\nSee Also\n[GridView] 비활성화 여부 지정하기 - 셀, 컬럼, 로우\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n //GridView 'grd_exam1'의 컬럼 '도서명'의 1번째 행의 셀을 비활성화 적용하기\n grd_exam1.setCellDisabled(0, \"book_name\", true);\n //GridView 'grd_exam1'의 컬럼 '정가'에 비활성화 적용하기\n grd_exam1.setColumnDisabled(\"price\", true);\n //GridView 'grd_exam1'의 3번째 행에 비활성화 적용하기\n grd_exam1.setRowDisabled(2, true)\n\n //GridView 'grd_exam2'의 컬럼 '도서명'의 1번째 행의 셀을 비활성화 적용하기\n grd_exam2.setCellDisabled(0, \"book_name\", true);\n //GridView 'grd_exam2'의 컬럼 '정가'에 비활성화 적용하기\n grd_exam2.setColumnDisabled(\"price\", true);\n //GridView 'grd_exam2'의 3번째 행에 비활성화 적용하기\n grd_exam2.setRowDisabled(2, true)\n\n //GridView 'grd_exam3'의 컬럼 '도서명'의 1번째 행의 셀을 비활성화 적용하기\n grd_exam3.setCellDisabled(0, \"book_name\", true);\n //GridView 'grd_exam3'의 컬럼 '정가'에 비활성화 적용하기\n grd_exam3.setColumnDisabled(\"price\", true);\n //GridView 'grd_exam3'의 3번째 행에 비활성화 적용하기\n grd_exam3.setRowDisabled(2, true)\n\n};"]],[["title","셀이 편집 모드가 아닐 때, 셀의 문자열 선택 금지 설정하기"],["tmp","GridView\n[GridView] 셀이 편집 모드가 아닐 때, 셀의 문자열 선택 금지 설정하기\n〈\n/page/P00178.xmldraggridgridViewmousenoSelect그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 셀의 문자열 선택을 방지 예제입니다.\n이 기능은 속성 noSelect을 true로 설정하여 사용할 수 있습니다.\n키보드 키(ctrl+a 등)를 또는 마우스 드래깅을 통해 문자열이 선택되지 않습니다.\n셀이 편집 모드가 아닌 경우 동작합니다.\n문자열 선택 방지\nGridView의 속성 noSelect=true\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n(기본 설정) 문자열 선택 가능\nGridView의 속성 noSelect=false\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","엑셀 다운로드 시 다운로드할 데이터 출처 설정하기"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 다운로드할 데이터 출처 설정하기\n〈\n/page/P00106.xmladvancedExcelDownloadgridgridViewtype그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드 옵션 중 \"type\" 설정의 예제입니다.\n옵션 \"type\"은 데이터의 출처를 결정합니다.\nDataList의 데이터 또는 GridView에 출력된 데이터로 지정할 수 있습니다.\n기본 설정은 GridView에 출력된 데이터로 다운로드 됩니다.\ntype:1 - GridView에 출력된 값\ntype:0 - DataList에 할당된 값\n분류 도서명 정가 출간일\n1\n인문\n사람일까 상황일까 28,000 2019-08-26\n2\n인문\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n3\n소설\n어린왕자 2,000 1981-08-01\n4\n인문\n공정하다는 착각 18,000 2020-12-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00106_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - DataList의 값을 다운로드] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00106_TYPE2.xlsx\", //엑셀의 파일명\n type: 0 //[default:1, 0] 사용할 데이터 출처. 0: DataList의 데이터 사용. 1: GridView에 출력된 데이터 사용\n };\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 다운로드할 데이터 출처를 컬럼별로 설정하기"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 다운로드할 데이터 출처를 컬럼별로 설정하기\n〈\n/page/P00107.xmladvancedExcelDownloadconvertIndexgridgridViewtype그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드 옵션 중 \"convertIndex\" 설정의 예제입니다.\n옵션 \"convertIndex\"은 지정한 index의 컬럼의 type을 기본 설정값과 반대의 설정으로 지정합니다.\n옵션 \"type\"의 값이 \"1\"으로 지정되면 converIndex에 해당하는 컬럼은 type이 \"0\"인 값으로 할당됩니다.\n분류 도서명 정가 출간일\n1\n인문\n사람일까 상황일까 28,000 2019-08-26\n2\n인문\n내가 틀릴 수도 있습니다 16,000 2022-04-18\n3\n소설\n어린왕자 2,000 1981-08-01\n4\n인문\n공정하다는 착각 18,000 2020-12-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00107_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 컬럼 \"분류\" 만 DataList의 값으로 다운로드] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00107_TYPE2.xlsx\", //엑셀의 파일명\n convertIndex: \"0\" //0번째 컬럼만 DataList의 값으로 다운로드. type 옵션의 기본값은 1(GridView에 출력된 값)입니다.\n };\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 데이터의 좌우 공백 제거하기"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 데이터의 좌우 공백 제거하기\n〈\n/page/P00232.xmladvancedExcelDownloadgridgridViewtrim그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 'trim' 설정의 예제입니다.\n옵션 'trim'은 데이터의 좌우 공백 제거의 여부를 지정할 수 있습니다.\nfalse : (기본 값) 좌우 공백 제거하지 않음\ntrue : 좌우 공백 제거\n다운로드된 엑셀 파일의 컬럼 '도서명'의 데이터의 좌우 공백을 비교합니다.\n이 예제는 데이터의 좌우 공백을 표현하기 위해 컬럼 '도서명'에 class 'P00000_preColumn'이 적용되어 있습니다.\n도서명 정가\n1    사람일까 상황일까    28,000\n2       내가 틀릴 수도 있습니다 16,000\n3   공정하다는 착각   18,000\n4 불편한 편의점 14,000\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00232_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 데이터 좌우 공백 제거] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00232_TYPE2.xlsx\", //엑셀의 파일명\n trim: \"true\" //데이터 좌우 공백 제거\n };\n //options.trim <String:N> [default: false] gridView 데이터를 좌우 공백 적용 유무 (true 설정시 공백 제거 후 적용)\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 데이터의 타입(유형) 지정하기"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 데이터의 타입(유형) 지정하기\n〈\n/page/P00110.xmladvancedExcelDownloadexcelCellTypegridgridViewuseDataFormat그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드 시 엑셀에 설정할 셀의 데이터의 타입(유형)을 지정하는 예제입니다.\n이 기능은 엑셀 다운로드 옵션 \"useDataFormat\"과 GridView 컬럼의 excelCellType 속성을 통해 사용할 수 있습니다.\nGridView에는 숫자(number)형과 날짜(date)형 데이터가 각 컬럼에 할당되었습니다.\nGridView의 헤더에 \"no excelCellType\" 문자열이 포함된 경우는 excelCellType 속성이 지정되지 않았습니다.\n각 엑셀 다운로드 버튼을 클릭하여 엑셀을 다운로드 합니다.\n다운로드된 엑셀의 셀의 \"표현 형식\"에 설정된 값을 비교합니다.\nnumber 1\nno excelCellType number 2 date 1\nno excelCellType date 2\n2345600 2345600 2023-04-24 2023-04-24\n78900 78900 2023-04-24 2023-04-24\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strCurDate;\n\n strCurDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n dlt_excel.setJSON([\n { \"number_1\": \"2345600\", \"number_2\": \"2345600\", \"date_1\": strCurDate, \"date_2\": strCurDate },\n { \"number_1\": \"78900\", \"number_2\": \"78900\", \"date_1\": strCurDate, \"date_2\": strCurDate }\n ]);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00110_default.xlsx\"\n };\n\n //GridView의 엑셀다운로드 API를 호출합니다.\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - useDataFormat 설정] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00110_useDataFormat.xlsx\",\n useDataFormat: true //[default: 없음] \"true\"인 경우 dataType에 따라 Excel 파일에 표시 형식을 출력. dataType=\"text\"인 셀은 Excel의 표시형식에 '텍스트' 출력, dataType=\"number\" 혹은 \"bigDecimal\" 셀은 \"숫자\" 출력.\n };\n\n //GridView의 엑셀다운로드 API를 호출합니다. \n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 병합된 셀 유지하기"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 병합된 셀 유지하기\n〈\n/page/P00231.xmladvancedExcelDownloadcolMergecolMergeValuegridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 시 셀 병합이 적용된 상태를 유지하는 예제입니다.\n다운로드 옵션 'colMerge', 'colMergeValue'을 'true'로 지정하여 구현할 수 있습니다.\n다음은 옵션에 대한 설명입니다.\n- colMerge : [default: false, true] colMerge된 컬럼을 Merge해서 출력 할 지 여부\n- colMergeValue : [default: false, true] colMerge된 컬럼을 다운로드한 Excel 파일에서 병합을 취소할 경우 모든 셀에 데이터를 채우는 기능.\n사번 성명 역할 성별\n10001370 손태한 PL 남\n10001839 피민기\n10001115 옹신혜 여\n10000142 노지안\n10001156 변재진 개발 남\n10001904 노가은\n10001361 독고동희 여\n10001008 양차빈\n10001199 음상혁\n10000269 심솔지 분석/설계 남\n10000268 추태겸\n10000806 황관후 여\n10000789 김신혜\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00231_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 병합된 상태 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00231_TYPE2.xlsx\", //엑셀의 파일명\n colMerge: \"true\", //colMerge된 컬럼을 병합 출력\n colMergeValue: \"true\" //Excel에서 병합을 취소할 경우 셀에 데이터를 채움\n };\n //colMerge : [default: false, true] colMerge된 컬럼을 Merge해서 출력할 지 여부\n //colMergeValue : [default: false, true] colMerge된 컬럼을 Excel에서 병합을 취소할 경우 모든 셀에 데이터를 채우는 기능. (true : 병합 해제된 모든 셀에 데이터를 채움, false : 첫 행이나 첫 열에만 데이터가 표시)\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 숫자형의 서식 설정하기 - inputType이 custom 인 경우"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 숫자형의 서식 설정하기 - inputType이 custom 인 경우\n〈\n/page/P00105.xmladvancedExcelDownloadbigdecimalcustomToDataTypegridgridViewnumber그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드 옵션 중 \"customToDataType\" 설정의 예제입니다.\n\"customToDataType\"을 \"true\"로 지정하면 엑셀에 숫자형 서식을 적용합니다.\n기본 동작은 엑셀에 \"일반\" 서식으로 적용됩니다.\n옵션 \"customToDataType\"은 아래의 조건일 때 동작됩니다.\nGridView 컬럼의 inputType이 custom이고, DataList의 dataType이 number 또는 bigdecimal으로 설정.\n도서명 정가 inputType\ncustom\n1 사람일까 상황일까 28,000 28,000\n2 내가 틀릴 수도 있습니다 16,000 16,000\n3 공정하다는 착각 18,000 18,000\n4 정글만리 16,500 16,500\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00105_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - \"customToDataType\" 옵션 활성화] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00105_TYPE2.xlsx\", //엑셀의 파일명\n customToDataType: \"true\" //inputType이 custom인 경우 엑셀의 서식을 DataList에 정의된 DataType 형으로 지정합니다.(엑셀 내 연산이 가능합니다.)\n };\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 공통"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n〈\n/page/P00243.xmladvancedExcelDownloaddisplayGridlinesgridgridViewrowHeightuseSubTotal그리드뷰눈금선행높이\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 공통으로 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n- rowHeight : [default: 없음] Excel 파일로 다운로드 할 때 엑셀의 셀 높이. (단위: pixel)\n- displayGridlines : [default: true, false] Excel 파일 전체 셀의 눈금선 제거 유무\n다운로드된 엑셀 파일의 행 높이, 눈금선 유무를 비교합니다.\n분류 도서명 상반기 하반기\n소설 칼의 노래 200 300\n태백산맥 300 200\n달과 6펜스 400 200\n소계 소설 - 3건 900 700\n역사/문화 조선왕조실록 600 300\n난중일기 1,200 900\n소계 역사/문화 - 2건 1,800 1,200\n합계 총 합계 - 5건 2,700 1,900\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00243_TYPE1.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\" //subTotal 표시\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 공통 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00243_TYPE2.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\", //필수 지정 - subTotal 표시\n rowHeight: \"30\", //Excel 파일로 다운로드 할 때 엑셀의 셀 높이. (단위: pixel)\n displayGridlines: \"false\" //Excel 파일 전체 셀의 눈금선 제거 유무\n };\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 바디(body)"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n〈\n/page/P00235.xmladvancedExcelDownloadbodyColorbodyFontBoldbodyFontColorbodyFontNamebodyFontSizeevenRowBackgroundColorgridgridViewoddRowBackgroundColoruseStyle그리드뷰글자 굵게 적용글자색글자체글자크기배경색짝수행홀수행\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 바디의 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n바디 스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n- bodyColor : [default: #FFFFFF] Excel 파일에서 그리드의 body의 색\n- bodyFontName : [default: 없음] Excel 파일에서 그리드의 body의 font name\n- bodyFontSize : Excel 파일에서 그리드의 body의 font size\n- bodyFontColor : [default: 없음] Excel 파일에서 그리드의 body의 font 색\n- bodyFontBold : [default: 없음] Excel 파일에서 그리드의 body의 Bold 적용 유무\n- oddRowBackgroundColor : [default: 없음] Excel 파일에서 그리드 body의 홀수 줄의 배경색\n- evenRowBackgroundColor : [default: 없음] Excel 파일에서 그리드 body의 짝수 줄의 배경색\n옵션 bodyColor, bodyFontName, bodyFontSize, bodyFontColor, bodyFontBold는 옵션 'useStyle'을 'false'로 지정해야 동작합니다.\n다운로드된 엑셀 파일의 바디 영역의 스타일을 비교합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00235_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 바디의 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00235_TYPE2.xlsx\", //엑셀의 파일명\n useStyle: \"false\", //필수 지정\n bodyColor: \"#F0E68C\", //바디의 배경색 - Khaki\n bodyFontName: \"Arial\", //바디의 글자체\n bodyFontSize: \"13\", //바디의 글자 크기\n bodyFontColor: \"#0000FF\", //바디의 글자색 - Blue\n bodyFontBold: \"true\" //바디의 글자 굵게 적용\n };\n\n //useStyle <String:N> [default: false] 다운로드시 css를 제외한, style을 excel에도 적용할 지 여부 (배경색,폰트)\n //bodyColor : <String:N> [default: #FFFFFF] Excel 파일에서 그리드의 body의 색\n //bodyFontName : <String:N> [default: 없음] Excel 파일에서 그리드의 body의 font name\n //bodyFontSize : <String:N> Excel 파일에서 그리드의 body의 font size\n //bodyFontColor : <String:N> [default: 없음] Excel 파일에서 그리드의 body의 font 색\n //bodyFontBold : <String:N> [default: 없음] Excel 파일에서 그리드의 body의 Bold 적용 유무\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 바디의 홀수행, 짝수행 배경색 적용] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00235_TYPE3.xlsx\", //엑셀의 파일명\n oddRowBackgroundColor: \"#F0E68C\", //바디의 홀수행 배경색 - Khaki\n evenRowBackgroundColor: \"#FFA500\" //바디의 짝수행 배경색 - Orange\n };\n\n //oddRowBackgroundColor : <String:N> [default: 없음] Excel 파일에서 그리드 body의 홀수 줄의 배경색\n //evenRowBackgroundColor : <String:N> [default: 없음] Excel 파일에서 그리드 body의 짝수 줄의 배경색\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n〈\n/page/P00236.xmladvancedExcelDownloadgridgridViewsubTotalColorsubTotalFontBoldsubTotalFontColorsubTotalFontNamesubTotalFontSizeuseStyleuseSubTotal그리드뷰글자 굵게 적용글자색글자체글자크기배경색\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 서브토탈의 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n서브토탈 스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n- subTotalColor : [default: #CCFFCC] Excel 파일에서 그리드의 subtotal분의 색\n- subTotalFontName : [default: 없음] Excel 파일에서 그리드의 subtotal의 font name\n- subTotalFontSize : Excel 파일에서 그리드의 subtotal의 font size\n- subTotalFontColor : [default: 없음] Excel 파일에서 그리드의 subtotal의 font 색\n- subTotalFontBold : [default: 없음] Excel 파일에서 그리드의 subTotal의 Bold 적용 유무\n이 기능은 옵션 'useStyle'을 'false'로 지정해야 동작합니다.\n다운로드된 엑셀 파일의 서브토탈(소계) 영역의 스타일을 비교합니다.\n분류 도서명 상반기 하반기\n소설 칼의 노래 200 300\n태백산맥 300 200\n달과 6펜스 400 200\n소계 소설 - 3건 900 700\n역사/문화 조선왕조실록 600 300\n난중일기 1,200 900\n소계 역사/문화 - 2건 1,800 1,200\n합계 총 합계 - 5건 2,700 1,900\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00236_TYPE1.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\" //subTotal 표시\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 서브토탈의 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00236_TYPE2.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\", //필수 지정 - subTotal 표시\n useStyle: \"false\", //필수 지정\n subTotalColor: \"green\", //서브토탈의 배경색 (Green)\n subTotalFontName: \"Arial\", //서브토탈의 글자체\n subTotalFontSize: \"14\", //서브토탈의 글자 크기\n subTotalFontColor: \"white\", //서브토탈의 글자색 (White)\n subTotalFontBold: \"true\" //서브토탈의 글자 굵게 적용\n };\n\n //useSubTotal : <String:N> [default: false, true] 다운로드시 SubTotal을 출력 할지 여부.\n //useStyle <String:N> [default: false] 다운로드시 css를 제외한, style을 excel에도 적용할 지 여부 (배경색,폰트)\n //subTotalColor : <String:N> [default: #CCFFCC] Excel 파일에서 그리드의 subtotal분의 색\n //subTotalFontName : <String:N> [default: 없음] Excel 파일에서 그리드의 subtotal의 font name\n //subTotalFontSize : <String:N> Excel 파일에서 그리드의 subtotal의 font size\n //subTotalFontColor : <String:N> [default: 없음] Excel 파일에서 그리드의 subtotal의 font 색\n //subTotalFontBold : <String:N> [default: 없음] Excel 파일에서 그리드의 subTotal의 Bold 적용 유무\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n〈\n/page/P00237.xmladvancedExcelDownloadfooterColorfooterFontBoldfooterFontColorfooterFontNamefooterFontSizegridgridViewuseStyle그리드뷰글자 굵게 적용글자색글자체글자크기배경색\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 푸터의 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n푸터 스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n- footerColor : [default: #008000] Excel 파일에서 그리드의 footer분의 색\n- footerFontName : [default: 없음] Excel 파일에서 그리드의 footer의 font name\n- footerFontSize : Excel 파일에서 그리드의 footer의 font size\n- footerFontColor : [default: 없음] Excel 파일에서 그리드의 footer의 font 색\n- footerFontBold : [default: 없음] Excel 파일에서 그리드의 footer의 Bold 적용 유무\n이 기능은 옵션 'useStyle'을 'false'로 지정해야 동작합니다.\n다운로드된 엑셀 파일의 푸터 영역의 스타일을 비교합니다.\n분류 도서명 상반기 하반기\n소설 칼의 노래 200 300\n태백산맥 300 200\n달과 6펜스 400 200\n역사/문화 조선왕조실록 600 300\n난중일기 1,200 900\n합계 5건 2,700 1,900\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00237_TYPE1.xlsx\" //엑셀의 파일명\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 푸터의 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00237_TYPE2.xlsx\", //엑셀의 파일명\n useStyle: \"false\", //필수 지정\n footerColor: \"blue\", //푸터의 배경색 (Green)\n footerFontName: \"Arial\", //푸터의 글자체\n footerFontSize: \"14\", //푸터의 글자 크기\n footerFontColor: \"white\", //푸터의 글자색 (White)\n footerFontBold: \"true\" //푸터의 글자 굵게 적용\n };\n\n //usefooter : <String:N> [default: false, true] 다운로드시 footer을 출력 할지 여부.\n //useStyle <String:N> [default: false] 다운로드시 css를 제외한, style을 excel에도 적용할 지 여부 (배경색,폰트)\n //footerColor : <String:N> [default: #CCFFCC] Excel 파일에서 그리드의 footer분의 색\n //footerFontName : <String:N> [default: 없음] Excel 파일에서 그리드의 footer의 font name\n //footerFontSize : <String:N> Excel 파일에서 그리드의 footer의 font size\n //footerFontColor : <String:N> [default: 없음] Excel 파일에서 그리드의 footer의 font 색\n //footerFontBold : <String:N> [default: 없음] Excel 파일에서 그리드의 footer의 Bold 적용 유무\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n〈\n/page/P00238.xmladvancedExcelDownloadgridgridViewrowNumBodyColorrowNumBodyFontColorrowNumBodyFontNamerowNumBodyFontSizerowNumFooterColorrowNumFooterFontColorrowNumFooterFontNamerowNumFooterFontSizerowNumHeaderColorrowNumHeaderFontColorrowNumHeaderFontNamerowNumHeaderFontSizerowNumHeaderValuerowNumSubTotalColorrowNumSubTotalFontColorrowNumSubTotalFontNamerowNumSubTotalFontSizerowNumVisibleuseStyleuseSubTotal그리드뷰글자 굵게 적용글자색글자체글자크기배경색\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 행 번호(rowNum) 영역의 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n옵션 보기\n\n\n\n\n\n\n\n\n\n\n\n\n\n이 기능은 옵션 'useStyle'을 'false'로 지정해야 동작합니다.\n다운로드된 엑셀 파일의 행 번호(rowNum) 영역의 스타일을 비교합니다.\n분류 도서명 상반기 하반기\n1 소설 칼의 노래 200 300\n2 태백산맥 300 200\n3 달과 6펜스 400 200\n소계 소설 - 3건 900 700\n4 역사/문화 조선왕조실록 600 300\n5 난중일기 1,200 900\n소계 역사/문화 - 2건 1,800 1,200\n합계 총 합계 - 5건 2,700 1,900\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00238_TYPE1.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\", //subTotal 표시\n useStyle: \"false\", //필수 지정\n rowNumVisible: \"true\" //행 번호(rowNum) 출력\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 행 번호의 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00238_TYPE2.xlsx\", //엑셀의 파일명\n useSubTotal: \"true\", //필수 지정 - subTotal 표시\n useStyle: \"false\", //필수 지정\n rowNumVisible: \"true\", //행 번호(rowNum) 출력\n rowNumHeaderValue: \"NO\", //행 번호의 헤더 문자열\n rowNumHeaderColor: \"green\", //행 번호 헤더 영역 배경색\n rowNumHeaderFontName: \"Arial\", //행 번호 헤더 영역 글자체\n rowNumHeaderFontSize: \"14\", //행 번호 헤더 영역 글자 크기\n rowNumHeaderFontColor: \"white\", //행 번호 헤더 영역 글자색\n rowNumBodyColor: \"green\", //행 번호 바디 영역 배경색\n rowNumBodyFontName: \"Arial\", //행 번호 바디 영역 글자체\n rowNumBodyFontSize: \"14\", //행 번호 바디 영역 글자 크기\n rowNumBodyFontColor: \"white\", //행 번호 바디 영역 글자색\n rowNumFooterColor: \"green\", //행 번호 푸터 영역 배경색\n rowNumFooterFontName: \"Arial\", //행 번호 푸터 영역 글자체\n rowNumFooterFontSize: \"14\", //행 번호 푸터 영역 글자 크기\n rowNumFooterFontColor: \"white\", //행 번호 푸터 영역 글자색\n rowNumSubTotalColor: \"green\", //행 번호 서브토탈 영역 배경색\n rowNumSubTotalFontName: \"Arial\", //행 번호 서브토탈 영역 글자체\n rowNumSubTotalFontSize: \"14\", //행 번호 서브토탈 영역 글자 크기\n rowNumSubTotalFontColor: \"white\" //행 번호 서브토탈 영역 글자색\n };\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 스타일 지정하기 - 헤더(header)"],["tmp","GridView\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 헤더(header)\n〈\n/page/P00234.xmladvancedExcelDownloadgridgridViewheaderColorheaderFontBoldheaderFontColorheaderFontNameheaderFontSizeuseStyle그리드뷰글자 굵게 적용글자색글자체글자크기배경색\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 다운로드(함수 'advancedExcelDownload') 옵션 중 헤더의 스타일을 적용할 수 있는 옵션 설정의 예제입니다.\n헤더 스타일을 지정할 수 있는 옵션은 아래와 같습니다.\n- headerColor : [default: #33CCCC] Excel 파일에서 그리드의 header 색\n- headerFontName : [default: 없음] Excel 파일에서 그리드의 header의 font name\n- headerFontSize : Excel 파일에서 그리드의 header의 font size\n- headerFontColor : [default: 없음] Excel 파일에서 그리드의 header의 font 색\n- headerFontBold : [default: \"false\"] Excel 파일에서 그리드의 header의 Bold 적용 유무\n이 기능은 옵션 'useStyle'을 'false'로 지정해야 동작합니다.\n다운로드된 엑셀 파일의 헤더 영역의 스타일을 비교합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\nSee Also\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 바디(body)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 서브토탈(subTotal)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 푸터(footer)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 행번호(rowNum)\n[GridView] 엑셀 다운로드 시 스타일 지정하기 - 공통\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 기본] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00234_TYPE1.xlsx\"\n };\n\n grd_exam1.advancedExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - 헤더의 스타일 적용] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n fileName: \"SP5_EXAMPLE_P00234_TYPE2.xlsx\", //엑셀의 파일명\n useStyle: \"false\", //필수 지정\n headerColor: \"black\", //헤더의 배경색\n headerFontName: \"Arial\", //헤더의 글자체\n headerFontSize: \"14\", //헤더의 글자 크기\n headerFontColor: \"white\", //헤더의 글자색\n headerFontBold: \"true\" //헤더의 글자 굵게 적용\n };\n\n //options.useStyle <String:N> [default: false] 다운로드시 css를 제외한, style을 excel에도 적용할 지 여부 (배경색,폰트)\n //options.headerColor : <String:N> [default: #33CCCC] Excel 파일에서 그리드의 header 색\n //options.headerFontName : <String:N> [default: 없음] Excel 파일에서 그리드의 header의 font name\n //options.headerFontSize : <String:N> Excel 파일에서 그리드의 header의 font size\n //options.headerFontColor : <String:N> [default: 없음] Excel 파일에서 그리드의 header의 font 색\n //options.headerFontBold : <String:N> [default: \"false\"] Excel 파일에서 그리드의 header의 Bold 적용 유무\n\n //GridView \"grd_exam1\"의 엑셀 다운로드 실행\n grd_exam1.advancedExcelDownload(jsnOptions);\n};"]],[["title","엑셀 업로드 시 엑셀 파일의 셀에 포함된 공백 제거하기"],["tmp","GridView\n[GridView] 엑셀 업로드 시 엑셀 파일의 셀에 포함된 공백 제거하기\n〈\n/page/P00109.xmlexcelUploadgridgridViewtrim그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 엑셀 업로드 옵션 중 \"trim\" 설정의 예제입니다.\n옵션 \"trim\"은 업로드할 엑셀 파일의 셀 데이터에 trim(앞뒤 공백 제거)을 적용하는 기능을 제공합니다.\n[엑셀 업로드 파일 다운로드] 버튼을 클릭하여 미리 생성된 엑셀 양식으로 업로드 테스트를 진행하는 것을 권장합니다.\n도서명\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [업로드할 엑셀 파일 다운로드] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //엑셀 업로드 양식 다운로드\n $c.frame.downloadSource(\"/page/resource/SP5_EXAMPLE_P00109_UPLOAD.xlsx\");\n};\n\n/**\n * 버튼 [엑셀 업로드 - 기본] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n headerExist: \"1\" //[default: 0] Excel 파일에서 그리드의 데이터에 header가 있는지 여부(1이면 header 존재 0이면 없음)\n };\n\n //GridView \"grd_exam1\"의 엑셀 업로드 실행\n grd_exam1.advancedExcelUpload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 업로드 - trim 적용] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var jsnOptions;\n\n jsnOptions = {\n headerExist: \"1\", //[default: 0] Excel 파일에서 그리드의 데이터에 header가 있는지 여부(1이면 header 존재 0이면 없음)\n trim: 1 //[default: 0, 1] 엑셀 각각의 셀데이터 좌, 우에 공백이 있는 경우 제거할지 여부 (1이면 제거, 0이면 유지)\n };\n\n //GridView \"grd_exam1\"의 엑셀 업로드 실행\n grd_exam1.advancedExcelUpload(jsnOptions);\n};"]],[["title","열 고정하기"],["tmp","GridView\n[GridView] 열 고정하기\n〈\n/page/P00199.xmlfixedColumnfixedRightColumngridgridViewsetFixedColumnsetFixedRightColumn그리드뷰틀고정\n〉\n예제와 가이드 함께 보기\nGridView의 열 고정 기능 예제입니다.\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- fixedColumn : (속성) 좌측 열 고정\n- fixedRightColumn : (속성) 우측 열 고정\n- setFixedColumn : (함수) 좌측 열 고정\n- setFixedRightColumn : (함수) 우측 열 고정\n좌측 열 고정 적용\n좌측 첫 번째 열이 고정되어 있습니다.\n사번 성명 성별 이메일 입사일 직위\n10001334 전성은 여 piho888@inswave02.com 2002-12-01 차장\n10001337 마정연 남 zibe925@inswave02.com 2012-04-30 사원\n10001335 동세희 여 cane427@inswave02.com 2005-04-01 부장\n우측 열 고정 적용\n우측 첫 번째 열이 고정되어 있습니다.\n사번 성명 성별 이메일 입사일 직위 소속\n10001334 전성은 여 piho888@inswave02.com 2002-12-01 차장 본사\n10001337 마정연 남 zibe925@inswave02.com 2012-04-30 사원 본사\n10001335 동세희 여 cane427@inswave02.com 2005-04-01 부장 본사\n좌측과 우측 열 고정 적용\n좌측과 우측의 첫 번째 열이 고정되어 있습니다.\n사번 성명 성별 이메일 입사일 직위 소속\n10001334 전성은 여 piho888@inswave02.com 2002-12-01 차장 본사\n10001337 마정연 남 zibe925@inswave02.com 2012-04-30 사원 본사\n10001335 동세희 여 cane427@inswave02.com 2005-04-01 부장 본사\n좌측과 우측 열 고정 적용 - 스크립트\n아래의 버튼을 클릭하여 고정된 열을 확인합니다.\n사번 성명 성별 이메일 입사일 직위\n10001334 전성은 여 piho888@inswave02.com 2002-12-01 차장\n10001337 마정연 남 zibe925@inswave02.com 2012-04-30 사원\n10001335 동세희 여 cane427@inswave02.com 2005-04-01 부장\nSee Also\n[GridView] 행 고정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [좌측 2번째 열까지 고정하기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n //GridView 'grd_exam4'의 좌측에서 두번째 열까지 고정하기\n grd_exam4.setFixedColumn(2);\n};\n\n/**\n * 버튼 [우측 1번째 열까지 고정하기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView 'grd_exam4'의 우측에서 첫번째 열까지 고정하기\n grd_exam4.setFixedRightColumn(1);\n};\n\n/**\n * 버튼 [열 고정 모두 해제하기] 클릭 시\n */\nscwin.btn_ex1_3_onclick = function (e) {\n //GridView 'grd_exam4'의 열 고정 해제\n grd_exam4.setFixedColumn(0);\n grd_exam4.setFixedRightColumn(0);\n};"]],[["title","정렬 아이콘과 필터 아이콘을 모두 표시하기"],["tmp","GridView\n[GridView] 정렬 아이콘과 필터 아이콘을 모두 표시하기\n〈\n/page/P00111.xmlgridgridViewshowSortableImageshowSortableUseFiltersortableuseFilteruseFilterList그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 컬럼에 정렬과 필터 기능이 모두 적용된 경우\nGridView의 헤더에 정렬(sort) 아이콘와 필터(filter) 아이콘을 함께 표시하는 예제입니다.\n[기본 설정]\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n5 시/에세이 모든 사람에게 좋은 사람일 필요는 없어\n정렬 및 필터 아이콘 표시\n분류\n도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n5 시/에세이 모든 사람에게 좋은 사람일 필요는 없어\nSee Also\n[GridView] Event - onsort (헤더를 클릭 또는 더블클릭하여 데이터 정렬된 경우 발생)\n[GridView] 목록형 inputType의 정렬할 데이터의 출처 설정하기\n[GridView] 병합된 헤더 컬럼에 정렬 기능을 사용할 바디 컬럼 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n};"]],[["title","조건에 따라 소계(subtotal)에 class 적용하기"],["tmp","GridView\n[GridView] 조건에 따라 소계(subtotal)에 class 적용하기\n〈\n/page/P00098.xmlgridgridViewsubtotalStyleFormatter그리드뷰스타일\n〉\n예제와 가이드 함께 보기\nGridView의 소계(subtotal) 컬럼을 조건에 따라 class를 적용하는 예제입니다.\n이 예제는 소계(subtotal)의 값이 1500 이상이면 글자를 굵고 붉은색으로 적용합니다.\n분류 도서명 1분기 2분기 3분기 4분기 합계\n소설 칼의 노래 200 300 800 200 1,500\n태백산맥 300 200 300 300 1,100\n달과 6펜스 400 200 200 400 1,200\n레미제라블 700 400 200 100 1,400\n소계 소설 - 4건 1,600 1,100 1,500 1,000 5,200\n역사/문화 조선왕조실록 600 600 600 600 2,400\n난중일기 700 700 700 700 2,800\n로마인 이야기 200 800 100 700 1,800\n소계 역사/문화 - 3건 1,500 2,100 1,400 2,000 7,000\n합계 총 합계 - 7건 3,100 3,200 2,900 3,000 12,200\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * gridView \"grd_exam1\"의 소계 class formatter\n */\nscwin.grd_exam1_subtotalStyleFormatter = function (value, formattedValue, subtotalColumnId) {\n var strReturnValue;\n\n //소계 컬럼의 ID로 조건 처리\n switch (subtotalColumnId) {\n case \"sub_col_1\": //1분기 소계 컬럼 ID\n case \"sub_col_2\": //2분기 소계 컬럼 ID\n case \"sub_col_3\": //3분기 소계 컬럼 ID\n case \"sub_col_4\": //4분기 소계 컬럼 ID\n\n //소계가 1500 이상이면 class \"ws5_example_txt_red2\"를 적용합니다.\n if (value >= 1500) {\n strReturnValue = \"ws5_example_txt_red2\";\n }\n break;\n default:\n break;\n }\n\n return strReturnValue;\n};"]],[["title","출력된 데이터가 없는 경우 지정된 메시지 출력하기"],["tmp","GridView\n[GridView] 출력된 데이터가 없는 경우 지정된 메시지 출력하기\n〈\n/page/P00092.xmlgridgridViewnoResultMessageVisibleAlways그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView에 출력된 Data가 없는 경우 메시지 출력 예제입니다.\nnoResultMessage 출력의 기본 동작은 연결된 DataList에 데이터가 없이 최초 로딩된 경우에는 noResultMessage가 출력되지 않는 것입니다.\n설정을 통해 GridView에 출력될 데이터가 없는 경우 noResultMessage를 출력할 수있습니다.\n[기본 설정]\n도서명 정가 출간일\nGridView에 출력된 Data가 없는 경우 noResultMessage 출력하기\n도서명 정가 출간일\n데이터가 없음\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","컨텍스트 메뉴 사용 설정하기"],["tmp","GridView\n[GridView] 컨텍스트 메뉴 사용 설정하기\n〈\n/page/P00169.xmlcontextMenucontextMenuAltClickgridgridViewmouseuseHeaderContextMenu그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 컨텍스트 메뉴의 노출 예제입니다.\n설정을 통해 [마우스 오른쪽 마우스 버튼 클릭]으로 컨텍스트 메뉴를 노출할 수 있으며 설정을 통해 기능이 동작되는 영역을 지정할 수 있습니다.\n바디 영역에서 컨텍스트 메뉴 사용하기\nGridView의 바디 영역에서 [마우스 오른쪽 버튼 클릭]을 하면 컨텍스트 메뉴가 노출됩니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사\n10001337 마정연 남 2012-04-30 사원 개발 본사\n10001336 박소유 남 2006-04-23 차장 기획 협력\n바디 영역에서 컨텍스트 메뉴 사용하기 - 단축키 확장\nGridView의 바디 영역에서 [마우스 오른쪽 버튼 클릭]하거나 [Alt+마우스 오른쪽 버튼 클릭]을 하면 컨텍스트 메뉴가 노출됩니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사\n10001337 마정연 남 2012-04-30 사원 개발 본사\n10001336 박소유 남 2006-04-23 차장 기획 협력\n헤더 영역에서 컨텍스트 메뉴 사용하기\nGridView의 헤더 영역에서 마우스 오른쪽 버튼을 클릭하면 컨텍스트 메뉴가 노출됩니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사\n10001337 마정연 남 2012-04-30 사원 개발 본사\n10001336 박소유 남 2006-04-23 차장 기획 협력\n바디 영역과 헤더 영역에서 컨텍스트 메뉴 사용하기\nGridView의 바디 영역 또는 헤더 영역에서 마우스 오른쪽 버튼을 클릭하면 컨텍스트 메뉴가 노출됩니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사\n10001337 마정연 남 2012-04-30 사원 개발 본사\n10001336 박소유 남 2006-04-23 차장 기획 협력\n컨텍스트 메뉴 사용 안 함(기본 설정)\nGridView의 컨텍스트 메뉴 기능을 사용하지 않습니다.\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 사원 퍼블리싱 본사\n10001337 마정연 남 2012-04-30 사원 개발 본사\n10001336 박소유 남 2006-04-23 차장 기획 협력\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","컬럼의 너비를 그리드 너비에 맞춰 자동 조절 지정하기 및 해제하기 - 스크립트"],["tmp","GridView\n[GridView] 컬럼의 너비를 그리드 너비에 맞춰 자동 조절 지정하기 및 해제하기 - 스크립트\n〈\n/page/P00184.xmlclearAutoFitgridgridViewsetAutoFitwidth그리드뷰열\n〉\n예제와 가이드 함께 보기\nGridView의 속성 autoFit을 스크립트로 지정하는 예제입니다.\nGridView의 함수 setAutoFit, clearAutoFit으로 제어할 수 있습니다.\n- 함수 setAutoFit : autoFit 속성을 지정합니다.\n- 함수 clearAutoFit : autoFit 속성을 해제합니다.\n함수 setAutoFit은 현재 그리드의 상태(여백, 컬럼 폭의 합 등)를 기준으로 계산됩니다.\n최초 그려진 GridView를 기준으로 재 설정하고자 하는 경우는 먼저 함수 clearAutoFit으로 설정을 해제해야 합니다.\n속성 autoFit 설정 값을 allColumn으로 지정하기\n아래의 버튼을 클릭하고 GridView의 컬럼 너비를 확인합니다.\n이 GridView의 autoFit 설정 값은 'none'(사용 안함)입니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\n속성 autoFit 설정 값을 lastColumn으로 지정하기\n아래의 버튼을 클릭하고 GridView의 컬럼 너비를 확인합니다.\n이 GridView의 autoFit 설정 값은 'none'(사용 안함)입니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\n속성 autoFit 설정 해제하기\n아래의 버튼을 클릭하고 GridView의 컬럼 너비를 확인합니다.\n이 GridView의 autoFit 설정 값은 'lastColumn'입니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\nSee Also\n[GridView] 컬럼의 너비를 그리드 너비에 맞춰 자동 조절하기 - 속성\n[GridView] GridView의 너비가 설정한 너비 이하일 때 autoFit(컬럼 너비 자동 조절) 기능 사용하지 않기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [autoFit의 설정 값을 'allColumn'으로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnAutoFitOptions;\n\n jsnAutoFitOptions = {\n type: \"allColumn\" //autoFit 타입\n //, minWidth : \"300\" //설정 값은 px 단위이며, gridView의 width가 설정 값보다 작아질 경우에 각 컬럼의 width의 합이 설정 값로 고정되어 계산됩니다. GridView의 속성 autoFitMinWidth과는 다른 기능입니다.\n };\n\n //GridView [grd_exam1]에 autoFit 속성을 지정합니다.\n grd_exam1.setAutoFit(jsnAutoFitOptions);\n};\n\n/**\n * 버튼 [autoFit의 설정 값을 'lastColumn'으로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnAutoFitOptions;\n\n jsnAutoFitOptions = {\n type: \"lastColumn\" //autoFit 타입\n };\n\n //GridView [grd_exam2]에 autoFit 속성을 지정합니다.\n grd_exam2.setAutoFit(jsnAutoFitOptions);\n};\n\n/**\n * 버튼 [속성 autoFit 설정 해제하기] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n //GridView [grd_exam3]에 autoFit 속성을 해제합니다.\n grd_exam3.clearAutoFit();\n};"]],[["title","컬럼의 너비를 그리드 너비에 맞춰 자동 조절하기 - 속성"],["tmp","GridView\n[GridView] 컬럼의 너비를 그리드 너비에 맞춰 자동 조절하기 - 속성\n〈\n/page/P00166.xmlautoFitgridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 속성 autoFit의 설정 값 비교 예제입니다.\n속성 autoFit은 그리드뷰 컬럼의 폭을 그리드뷰의 너비에 맞춰 자동으로 조절하는 기능을 제공합니다.\n더보기\n\n\n(기본설정) autoFit - none\n그리드뷰 우측에 여백이 있습니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\nautoFit - lastColumn\n그리드뷰의 여백을 마지막 컬럼의 폭에 할당합니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\nautoFit - allColumn\n그리드뷰의 여백을 모든 컬럼의 폭에 분배합니다.\n출간일 도서명\n2020-12-01 공정하다는 착각\n2021-04-20 불편한 편의점\n2019-08-26 사람일까 상황일까\nSee Also\n[GridView] GridView의 너비가 설정한 너비 이하일 때 autoFit(컬럼 너비 자동 조절) 기능 사용하지 않기\n[GridView] 컬럼의 너비를 그리드 너비에 맞춰 자동 조절 지정하기 및 해제하기 - 스크립트\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","키보드를 이용해 포커스 이동 시 이동 범위 설정하기"],["tmp","GridView\n[GridView] 키보드를 이용해 포커스 이동 시 이동 범위 설정하기\n〈\n/page/P00171.xmlfocusFlowgridgridView그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 속성 focusFlow의 설정 값 비교 예제입니다.\n속성은 focusFlow는 키 입력을 통해 셀의 포커스를 이동할 때, 포커스의 이동 범위를 지정할 수 있습니다.\n다음 셀로 포커스를 이동하는 기본 키는 [Tab]이며 이전 셀로 포커스 이동은 키 [Shift+Tab]로 설정되어 있습니다.\n설정 값에 따른 동작 방식은 아래와 같습니다.\n- default : 행(row)에서만 포커스가 이동됩니다.\n- linear : 행의 마지막 셀에서 키 Tab을 누르면 다음 행의 첫 번째 셀로 이동됩니다.\nfocusFlow - default (기본 값)\n포커스 이동 범위가 행(row) 단위입니다.\n행의 마지막 셀에서 키 Tab을 누르면 포커스가 이동하지 않습니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\nfocusFlow - linear\n포커스 이동 범위가 전체 영역입니다.\n행의 마지막 셀에서 키 Tab을 누르면 다음 행의 첫 번째 셀로 이동됩니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 인문 사람일까 상황일까\n3 인문 무엇이 옳은가\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitData();\n};\n\n/**\n * DataList에 Data 할당\n */\nscwin.setInitData = function () {\n var arrData = [\n { \"book_name\": \"공정하다는 착각\", \"categoryLabel\": \"인문\", \"price\": \"18000\", \"published_date\": \"20201201\" },\n { \"book_name\": \"사람일까 상황일까\", \"categoryLabel\": \"인문\", \"price\": \"28000\", \"published_date\": \"20190826\" },\n { \"book_name\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\", \"price\": \"17800\", \"published_date\": \"20220419\" },\n { \"book_name\": \"불편한 편의점\", \"categoryLabel\": \"소설\", \"price\": \"14000\", \"published_date\": \"20210420\" },\n { \"book_name\": \"책들의 부엌\", \"categoryLabel\": \"소설\", \"price\": \"14500\", \"published_date\": \"20220512\" }\n ];\n\n dlt_books.setJSON(arrData);\n};"]],[["title","툴팁 표시하기"],["tmp","GridView\n[GridView] 툴팁 표시하기\n〈\n/page/P00208.xmlgridgridViewtooltipDisplaytooltipDisplayColumntooltipHeadertooltipHeaderShowAlwaystooltipShowAlwaystooltipShowAlwaysColumns그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 툴 팁 표시 예제입니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- tooltipDisplay : 전체 데이터가 셀에 모두 표시되지 않는 경우 마우스-오버 시 툴팁으로 데이터를 표시할 지 여부.\n- tooltipDisplayColumn : 특정 컬럼만 tooltip이 표현되도록 설정.\n- tooltipShowAlways : 툴팁을 항상 표시.\n- tooltipShowAlwaysColumns : 툴팁을 항상 표시할 컬럼을 지정.\n- tooltipHeader : 헤더에 전체 데이터가 셀에 모두 표시되지 않는 경우 마우스-오버 시 툴팁으로 데이터를 표시할 지 여부.\n- tooltipHeaderShowAlways : 항상 툴팁을 표시할 지 여부.\nTooltip 기능은 마우스의 over/out 이벤트로 구현된 기능입니다.\n마우스를 사용할 수 있는 환경에서만 정상 동작 합니다.\n전체 데이터가 출력되지 않는 셀만 툴팁으로 데이터 표시하기\n셀에 전체 데이터가 출력되지 않는 경우 셀에 마우스를 오버하면 데이터가 툴팁으로 표시됩니다.\n사번 성명 이메일 - 툴팁 기능 테스트 용도 입사일 직위 역할 소속\n10001334 전성은 piho888@inswave1.com 2002-12-01 차장 퍼블리싱 본사\n10001337 김수한무거북이와두루미 dev@inswave1.com 2012-04-30 사원 개발 본사\n10001335 동세희 cane427@inswave1.com 2005-04-01 부장 디자인 본사\n모든 셀에 데이터 툴팁을 항상 표시하기\n셀에 마우스를 오버하면 데이터가 툴팁으로 표시됩니다.\n사번 성명 이메일 - 툴팁 기능 테스트 용도 입사일 직위 역할 소속\n10001334 전성은 piho888@inswave1.com 2002-12-01 차장 퍼블리싱 본사\n10001337 김수한무거북이와두루미 dev@inswave1.com 2012-04-30 사원 개발 본사\n10001335 동세희 cane427@inswave1.com 2005-04-01 부장 디자인 본사\n지정된 컬럼의 전체 데이터가 출력되지 않는 셀만 툴팁으로 데이터 표시하기\n컬럼 '성명'의 셀에 전체 데이터가 출력되지 않는 경우 셀에 마우스를 오버하면 데이터가 툴팁으로 표시됩니다.\n사번 성명 이메일 - 툴팁 기능 테스트 용도 입사일 직위 역할 소속\n10001334 전성은 piho888@inswave1.com 2002-12-01 차장 퍼블리싱 본사\n10001337 김수한무거북이와두루미 dev@inswave1.com 2012-04-30 사원 개발 본사\n10001335 동세희 cane427@inswave1.com 2005-04-01 부장 디자인 본사\n지정된 컬럼의 셀에 데이터 툴팁을 항상 표시하기\n컬럼 '성명'의 셀에 마우스를 오버하면 데이터가 툴팁으로 표시됩니다.\n사번 성명 이메일 - 툴팁 기능 테스트 용도 입사일 직위 역할 소속\n10001334 전성은 piho888@inswave1.com 2002-12-01 차장 퍼블리싱 본사\n10001337 김수한무거북이와두루미 dev@inswave1.com 2012-04-30 사원 개발 본사\n10001335 동세희 cane427@inswave1.com 2005-04-01 부장 디자인 본사\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","특정 열 숨기기"],["tmp","GridView\n[GridView] 특정 열 숨기기\n〈\n/page/P00212.xmlgridgridViewsetColumnVisible그리드뷰컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 열의 숨김 여부을 스크립트로 지정하는 예제입니다.\n이 기능은 아래의 함수를 호출하여 사용할 수 있습니다.\n- setColumnVisible : 특정 열의 숨김 여부 설정\n스크립트로 컬럼의 숨김 여부 지정하기\n사번 성명 성별 입사일 직위 역할 소속\n10001334 전성은 여 2002-12-01 차장 퍼블리싱 본사 piho888@inswave02.com\n10001337 마정연 남 2012-04-30 사원 개발 본사 zibe925@inswave02.com\n10001335 동세희 여 2005-04-01 부장 디자인 본사 cane427@inswave02.com\nSee Also\n[GridView] 행의 번호(rowNum), 행의 상태(rowStatus) 열 숨기기(너비 변경하기)\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [컬럼 '성명' 숨기기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '성명'을 숨기기\n grd_exam1.setColumnVisible(\"EMP_NM\", false);\n};\n\n/**\n * 버튼 [컬럼 '성명' 보이기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView 'grd_exam1'의 컬럼 '성명'을 보이기\n grd_exam1.setColumnVisible(\"EMP_NM\", true);\n};"]],[["title","특정 컬럼의 선택 불가 설정하기"],["tmp","GridView\n[GridView] 특정 컬럼의 선택 불가 설정하기\n〈\n/page/P00093.xmlblockSelectgridgridView그리드뷰열\n〉\n예제와 가이드 함께 보기\nGridView의 특정 컬럼을 선택하지 못하도록 설정하는 예제입니다.\n[기본 설정] 모든 컬럼의 선택이 가능한 상태\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n\"도서명\" 컬럼의 선택 불가 설정 - 속성\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n\"도서명\" 컬럼의 선택 불가 설정 - 스크립트\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [\"도서명\" 컬럼에 선택 불가 설정하기] 클릭시\n */\nscwin.btn_ex1_onclick = function (e) {\n //컬럼 \"도서명\"에 선택 불가 설정하기\n grd_exam3.setBlockSelect(\"book_name\", true);\n};"]],[["title","특정 행 숨기기"],["tmp","GridView\n[GridView] 특정 행 숨기기\n〈\n/page/P00206.xmlclearRowVisiblegridgridViewsetRowVisible그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 행의 숨김 여부을 지정하는 예제입니다.\n이 기능은 아래의 함수를 호출하여 사용할 수 있습니다.\n- setRowVisible : 특정 행의 숨김 여부 설정\n- clearRowVisible : 숨김 처리한 행을 모두 표시\n특정 행의 숨김 여부 지정하기\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 무엇이 옳은가 17,800 2022-04-19\n4 공정하다는 착각 18,000 2020-12-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [2번째 행을 숨김 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 2번째 행을 숨김 지정하기\n grd_exam1.setRowVisible(1, false);\n};\n\n/**\n * 버튼 [2번째 행을 표시하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 2번째 행을 표시하기\n grd_exam1.setRowVisible(1, true);\n};\n\n/**\n * 버튼 [1번째, 3번째 행을 숨기기] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n //GridView 'grd_exam1'의 1번째, 3번째 행을 숨기기\n grd_exam1.setRowVisible(0, false);\n grd_exam1.setRowVisible(2, false);\n};\n\n/**\n * 버튼 [숨긴 행 모두 취소하기] 클릭 시\n */\nscwin.btn_ex4_onclick = function (e) {\n //GridView 'grd_exam1'의 숨긴 행 모두 취소하기\n grd_exam1.clearRowVisible();\n};"]],[["title","특정 행의 글자색 지정하기"],["tmp","GridView\n[GridView] 특정 행의 글자색 지정하기\n〈\n/page/P00205.xmlgridgridViewsetRowColor그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 행의 글자색을 지정하는 예제입니다.\n이 기능은 함수 setRowColor를 호출하여 사용할 수 있습니다.\n특정 행의 글자색 지정하기\n아래의 버튼을 클릭하고 GridView 행의 글자색을 확인합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 무엇이 옳은가 17,800 2022-04-19\n4 공정하다는 착각 18,000 2020-12-01\nSee Also\n[GridView] 셀의 글자색 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [2번째 행의 글자색을 'brown'로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 2번째 행의 글자색을 'brown'로 지정하기\n grd_exam1.setRowColor(1, \"brown\");\n};\n\n/**\n * 버튼 [1번째 행에 글자색을 '#FF4500'로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 1번째 행의 글자색을 '#FF4500'로 지정하기\n grd_exam1.setRowColor(0, \"#FF4500\");\n};"]],[["title","특정 행의 배경색 지정하기"],["tmp","GridView\n[GridView] 특정 행의 배경색 지정하기\n〈\n/page/P00204.xmlgridgridViewsetRowBackgroundColor그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 특정 행의 배경색을 지정하는 예제입니다.\n이 기능은 함수 setRowBackgroundColor를 호출하여 사용할 수 있습니다.\n특정 행의 배경색 지정하기\n아래의 버튼을 클릭하고 GridView 행의 배경색을 확인합니다.\n도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 정글만리 16,500 2013-07-01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [2번째 행의 배경색을 'peru'로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView 'grd_exam1'의 2번째 행의 배경색을 'peru'로 지정하기\n grd_exam1.setRowBackgroundColor(1, \"peru\");\n};\n\n/**\n * 버튼 [1번째 행에 배경색을 '#9ACD32'로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView 'grd_exam1'의 1번째 행의 배경색을 '#9ACD32'로 지정하기\n grd_exam1.setRowBackgroundColor(0, \"#9ACD32\");\n};"]],[["title","필터 사용 설정하기"],["tmp","GridView\n[GridView] 필터 사용 설정하기\n〈\n/page/P00099.xmlautoFitFilterListgridgridViewuseFilteruseFilterListuseFilterSearch그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 필터 설정 예제입니다.\n각 GridView의 헤더 [분류]에 있는 필터 아이콘을 클릭하여 필터 기능을 비교합니다.\n[기본설정] 필터 설정 없음\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n팝업형 필터 설정\n분류\n도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n콤보 박스형 필터 설정\n분류\n도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\n콤보 박스형 필터 + 필터 검색 설정\n분류\n도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n4 인문 나는 둔감하게 살기로 했다\nSee Also\n[GridView] 데이터 타입에 따른 필터 기능의 비교 연산자 비교하기\n[GridView] 데이터 필터 목록의 최소 너비를 데이터의 최대 길이로 설정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나는 둔감하게 살기로 했다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나의 문화유산답사기\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"당신은 결국 무엇이든 해내는 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마지막 몰입: 나를 넘어서는 힘\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"멘탈을 바꿔야 인생이 바뀐다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"원씽(The One Thing)\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" },\n { \"label\": \"총 균 쇠\", \"categoryLabel\": \"역사/문화\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n dlt_books_2.setJSON(arrData);\n dlt_books_3.setJSON(arrData);\n dlt_books_4.setJSON(arrData);\n};"]],[["title","행 고정하기"],["tmp","GridView\n[GridView] 행 고정하기\n〈\n/page/P00200.xmlfixedRowgridgridViewsetFixedRow그리드뷰틀고정\n〉\n예제와 가이드 함께 보기\nGridView의 행 고정 기능 예제입니다.\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- fixedRow : (속성) 행 고정\n- setFixedRow : (함수) 행 고정\n행 고정 적용 - 속성\n상단 2번째 행이 고정되어 있습니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\n행 고정 적용 - 스크립트\n아래의 버튼을 클릭하여 고정된 행을 확인합니다.\n분류 도서명\n1 인문 공정하다는 착각\n2 시/에세이 기분을 관리하면 인생이 관리된다\n3 인문 내가 틀릴 수도 있습니다\n4 시/에세이 너무 잘하려고 애쓰지 마라\nSee Also\n[GridView] 열 고정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"너무 잘하려고 애쓰지 마라\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"모든 사람에게 좋은 사람일 필요는 없어\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"문명의 붕괴(Collapse)\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"미움받을 용기\", \"categoryLabel\": \"인문\" },\n { \"label\": \"불편한 편의점\", \"categoryLabel\": \"소설\" },\n { \"label\": \"선을 넘지 않는 사람이 성공한다\", \"categoryLabel\": \"자기계발\" },\n { \"label\": \"우리는 여전히 삶을 사랑하는가\", \"categoryLabel\": \"인문\" },\n { \"label\": \"작별인사\", \"categoryLabel\": \"소설\" },\n { \"label\": \"잘했고 잘하고 있고 잘 될 것이다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"저만치 혼자서\", \"categoryLabel\": \"소설\" },\n { \"label\": \"책들의 부엌\", \"categoryLabel\": \"소설\" }\n ];\n\n dlt_books.setJSON(arrData);\n};\n\n/**\n * 버튼 [상단 1번째 행까지 고정하기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n //GridView 'grd_exam2'의 상단 1번째 행까지 고정하기\n grd_exam2.setFixedRow(1);\n};\n\n/**\n * 버튼 [행 고정 모두 해제하기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView 'grd_exam2'의 행 고정 해제하기\n grd_exam2.setFixedRow(0);\n};"]],[["title","행 번호 컬럼의 헤더 출력 값, 폭(너비), 배경색, 리사이즈 여부 지정하기"],["tmp","GridView\n[GridView] 행 번호 컬럼의 헤더 출력 값, 폭(너비), 배경색, 리사이즈 여부 지정하기\n〈\n/page/P00180.xmlgridgridViewrowNumBackgroundColorrowNumHeaderValuerowNumStatusResizerowNumVisiblerowNumWidth그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 행 번호 컬럼의 부가 기능 설정 예시입니다.\n예제에 설정한 기능은 속성 rowNumVisible(행 번호 표시 설정)이 true로 지정되어야 동작합니다.\n아래 목록은 적용 속성별 설명입니다.\n- rowNumVisible : 행 번호 표시 여부 지정\n- rowNumWidth : 행 번호 컬럼 너비(폭) 지정\n- rowNumHeaderValue : 행 번호 컬럼의 헤더의 출력 값(레이블) 지정\n- rowNumBackgroundColor : 행 번호의 바디 컬럼의 배경색 지정\n- rowNumStatusResize : 행 번호 컬럼의 리사이즈 가능 여부 지정\n행 번호 표시 및 부가 설정\n부가 설정 목록\n- 행 번호 컬럼 너비(폭)이 '34px'로 지정되었습니다.\n- 행 번호 컬럼의 헤더에 '번호'가 표시(출력)됩니다.\n- 행 번호의 바디 컬럼의 배경색이 '#f0f2f4'로 지정되었습니다.\n- 행 번호 컬럼의 리사이즈가 가능합니다. (헤더 컬럼에서 조작)\n번호 분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n행 번호 표시만 설정\nGridView의 속성 rowNumVisible=true\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\nSee Also\n[GridView] 행 번호 표시하기\n[GridView] 행 번호의 시작 값 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","행 번호 표시하기"],["tmp","GridView\n[GridView] 행 번호 표시하기\n〈\n/page/P00179.xmlgridgridViewrowNumVisible그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 행 번호를 표시하는 예제입니다.\n이 기능은 속성 rowNumVisible을 true로 설정하여 사용할 수 있습니다.\n행 번호 표시\nGridView의 속성 rowNumVisible=true\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\n(기본 설정) 행 번호 미표시\nGridView의 속성 rowNumVisible=false\n분류 도서명\n역사/문화 거의 모든 전쟁의 역사\n인문 공정하다는 착각\n시/에세이 기분을 관리하면 인생이 관리된다\nSee Also\n[GridView] 행 번호 컬럼의 헤더 출력 값, 폭(너비), 배경색, 리사이즈 여부 지정하기\n[GridView] 행 번호의 시작 값 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};"]],[["title","행 번호의 시작 값 지정하기"],["tmp","GridView\n[GridView] 행 번호의 시작 값 지정하기\n〈\n/page/P00181.xmlgridgridViewrowNumVisiblesetStartRowNumber그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 행 번호의 시작 값을 지정하는 예제입니다.\n이 기능은 함수 setStartRowNumber을 호출하여 사용할 수 있습니다.\n행 번호의 시작 값 지정하기\n아래의 input에 시작 값를 입력하고 아래 버튼을 클릭하여 GridView의 행 번호의 시작 값을 확인합니다.\n분류 도서명\n1 역사/문화 거의 모든 전쟁의 역사\n2 인문 공정하다는 착각\n3 시/에세이 기분을 관리하면 인생이 관리된다\nSee Also\n[GridView] 행 번호 표시하기\n[GridView] 행 번호 컬럼의 헤더 출력 값, 폭(너비), 배경색, 리사이즈 여부 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setDataList();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * 버튼 [시작 값를 11로 지정하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //GridView [grd_exam1]의 행 번호 시작 값을 11로 지정합니다.\n grd_exam1.setStartRowNumber(10);\n};\n\n/**\n * 버튼 [시작 값를 1로 지정하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //GridView [grd_exam1]의 행 번호 시작 값을 1로 지정합니다.\n grd_exam1.setStartRowNumber(0);\n};"]],[["title","행 상태 컬럼의 헤더 출력 값, 폭(너비), 리사이즈 여부 지정하기"],["tmp","GridView\n[GridView] 행 상태 컬럼의 헤더 출력 값, 폭(너비), 리사이즈 여부 지정하기\n〈\n/page/P00183.xmlgridgridViewrowNumStatusResizerowStatusHeaderValuerowStatusVisiblerowStatusWidth그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 행 상태 컬럼의 부가 기능 설정 예시입니다.\n예제에 설정한 기능은 속성 rowStatusVisible(행 상태 표시 설정)이 true로 지정되어야 동작합니다.\n아래 목록은 적용 속성별 설명입니다.\n- rowStatusVisible : 행의 상태(추가/수정/삭제) 컬럼을 표시\n- rowNumStatusResize : 행 상태 컬럼의 리사이즈 가능 여부 지정\n- rowStatusHeaderValue : 행 상태 컬럼의 헤더의 출력 값(레이블) 지정\n- rowStatusWidth : 행 상태 컬럼 너비(폭) 지정\n행 상태 표시 및 부가 설정\n부가 설정 목록\n- 행 상태 컬럼 너비(폭)이 '34px'로 지정되었습니다.\n- 행 상태 컬럼의 헤더에 문자열 '상태'가 표시(출력)됩니다.\n- 행 상태 컬럼의 리사이즈가 가능합니다. (헤더 컬럼에서 조작)\n상태 분류 도서명\n시/에세이 나로서 충분히 괜찮은 사람\n인문 도서명 변경 중\n인문 내가 틀릴 수도 있습니다\n행 상태 표시만 설정\nGridView의 속성 rowStatusVisible=true\n분류 도서명\n시/에세이 나로서 충분히 괜찮은 사람\n인문 도서명 변경 중\n인문 내가 틀릴 수도 있습니다\nSee Also\n[GridView] 행 상태 표시하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList에 데이터 할당\n scwin.setDataList();\n\n //DataList에 행 추가, 행 삭제, cell 값 변경\n scwin.setDataStatus();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * DataList에 행 추가, 행 삭제, cell 값 변경\n */\nscwin.setDataStatus = function () {\n //행 추가\n dlt_books_1.insertRow(1);\n //셀 수정\n dlt_books_1.setCellData(2, \"label\", \"도서명 변경 중\");\n //행 삭제\n dlt_books_1.deleteRow(3);\n};"]],[["title","행 상태 표시하기"],["tmp","GridView\n[GridView] 행 상태 표시하기\n〈\n/page/P00182.xmlgridgridViewrowStatusVisible그리드뷰\n〉\n예제와 가이드 함께 보기\nGridView의 행 상태를 표시하는 예제입니다.\n이 기능은 속성 rowStatusVisible을 true로 설정하여 사용할 수 있습니다.\n행 상태는 DataList의 컬럼 rowStatus에 할당 된 값에 따라 아이콘이 할당됩니다.\nR : 초기 상태, C : 추가, U : 수정, D : 삭제\n아래의 GridView들은 동일한 DataList 'dlt_books_1'가 연결되어 있습니다.\n행의 상태별 아이콘을 확인하기 위해 화면 로딩 후 스크립트(행 추가, 행 삭제, 값 변경)가 작성되었습니다.\n행 상태 표시\nGridView의 속성 rowStatusVisible=true\n분류 도서명\n역사/문화 거의 모든 전쟁의 역사\n인문 도서명 변경 중\n시/에세이 기분을 관리하면 인생이 관리된다\n(기본 설정) 행 상태 미표시\nGridView의 속성 rowStatusVisible=false\n분류 도서명\n역사/문화 거의 모든 전쟁의 역사\n인문 도서명 변경 중\n시/에세이 기분을 관리하면 인생이 관리된다\nSee Also\n[GridView] 행 상태 컬럼의 헤더 출력 값, 폭(너비), 리사이즈 여부 지정하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList에 데이터 할당\n scwin.setDataList();\n\n //DataList에 행 추가, 행 삭제, cell 값 변경\n scwin.setDataStatus();\n};\n\n/**\n * DataList에 데이터 할당\n */\nscwin.setDataList = function () {\n var arrData = [\n { \"label\": \"거의 모든 전쟁의 역사\", \"categoryLabel\": \"역사/문화\" },\n { \"label\": \"공정하다는 착각\", \"categoryLabel\": \"인문\" },\n { \"label\": \"기분을 관리하면 인생이 관리된다\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"나로서 충분히 괜찮은 사람\", \"categoryLabel\": \"시/에세이\" },\n { \"label\": \"내가 틀릴 수도 있습니다\", \"categoryLabel\": \"인문\" },\n { \"label\": \"마음의 법칙\", \"categoryLabel\": \"인문\" },\n { \"label\": \"무엇이 옳은가\", \"categoryLabel\": \"인문\" }\n ];\n\n dlt_books_1.setJSON(arrData);\n};\n\n/**\n * DataList에 행 추가, 행 삭제, cell 값 변경\n */\nscwin.setDataStatus = function () {\n //행 추가\n dlt_books_1.insertRow(1);\n //셀 수정\n dlt_books_1.setCellData(2, \"label\", \"도서명 변경 중\");\n //행 삭제\n dlt_books_1.deleteRow(3);\n};"]],[["title","행의 번호(rowNum), 행의 상태(rowStatus) 열 숨기기(너비 변경하기)"],["tmp","GridView\n[GridView] 행의 번호(rowNum), 행의 상태(rowStatus) 열 숨기기(너비 변경하기)\n〈\n/page/P00213.xmlgridgridViewsetRowNumColumnWidthsetRowStatusColumnWidth그리드뷰컬럼\n〉\n예제와 가이드 함께 보기\nGridView의 행의 번호(rowNum), 행의 상태 rowStatus) 열의 너비(width)를 스크립트로 지정하는 예제입니다.\n컬럼의 너비(width) 설정을 0으로 설정하여 열을 숨김 처리할 수 있습니다.\n이 기능은 아래의 함수를 호출하여 사용할 수 있습니다.\n- setRowNumColumnWidth : rowNum 컬럼의 폭을 변경\n- setRowStatusColumnWidth : rowStatus 컬럼의 폭을 변경\n스크립트로 컬럼 RowNum, RowStatus의 숨김 여부 지정하기\nGridView에 상태 아이콘을 표시하기 위해 4번째 행의 열 '도서명'의 데이터를 변경한 상태입니다.\n컬럼의 식별을 위해 컬럼 rowNum의 헤더명을 'NO', 컬럼 rowStatus의 헤더명을 '상태'로 지정되었습니다.\nNO 상태 도서명 정가 출간일\n1 사람일까 상황일까 28,000 2019-08-26\n2 내가 틀릴 수도 있습니다 16,000 2022-04-18\n3 공정하다는 착각 18,000 2020-12-01\n4 도서명 수정 중 14,000 2021-04-20\nSee Also\n[GridView] 특정 열 숨기기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //예제 테스트를 위한 셀 데이터 수정\n dlt_books.setCellData(3, \"book_name\", \"도서명 수정 중\");\n};\n\n/**\n * 버튼 [컬럼 'NO' 숨기기] 클릭 시\n */\nscwin.btn_ex1_1_onclick = function (e) {\n //GridView의 rowNum 컬럼의 width를 0으로 지정합니다. 컬럼이 숨김된 효과를 볼 수 있습니다.\n grd_exam1.setRowNumColumnWidth(0);\n};\n\n/**\n * 버튼 [컬럼 'NO' 보이기] 클릭 시\n */\nscwin.btn_ex1_2_onclick = function (e) {\n //GridView의 rowNum 컬럼의 width를 30으로 지정합니다.\n grd_exam1.setRowNumColumnWidth(30);\n};\n\n/**\n * 버튼 [컬럼 '상태' 숨기기] 클릭 시\n */\nscwin.btn_ex2_1_onclick = function (e) {\n //GridView의 rowStatus 컬럼의 width를 0으로 지정합니다. 컬럼이 숨김된 효과를 볼 수 있습니다.\n grd_exam1.setRowStatusColumnWidth(0);\n};\n\n/**\n * 버튼 [컬럼 '상태' 보이기] 클릭 시\n */\nscwin.btn_ex2_2_onclick = function (e) {\n //GridView의 rowSatus 컬럼의 width를 34으로 지정합니다.\n grd_exam1.setRowStatusColumnWidth(34);\n};"]],[["title","Event - onmouseenter (마우스 포인터가 영역 안으로 들어올 때 발생)"],["tmp","Group\n[Group] Event - onmouseenter (마우스 포인터가 영역 안으로 들어올 때 발생)\n〈\n/page/P00122.xmlGrouponmouseenter마우스이벤트\n〉\n예제와 가이드 함께 보기\nGroup의 이벤트 onmouseenter 예제입니다.\n이벤트 발생 조건은 아래와 같습니다.\nonmouseenter : 마우스 포인터가 영역 안으로 들어올 때 발생.\nGroup\n마우스를 Group 영역 밖에서 Group 영역으로 이동합니다.\n이벤트 로그가 [로그 확인] 영역과 개발자 도구 콘솔에 출력됩니다.\nGroup 영역\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};\n\n/**\n * Group \"grp_exam1\"의 onmouseenter 핸들러\n * 마우스 포인터가 영역 안으로 들어올 때 발생.\n */\nscwin.grp_exam1_onmouseenter = function (e) {\n var strLog;\n\n //로그 출력\n $c.frame.printExampleLog(\"**** onmouseenter 발생 ****\", txa_log);\n\n //이벤트 정보 출력\n console.log(e);\n\n $c.frame.printExampleLog(\"브라우저의 개발자 도구 콘솔을 확인하세요.\", txa_log, false);\n\n strLog = \"이벤트 발생 컴포넌트 ID : \" + this.getOriginalID() + \" | \";\n strLog += \"이벤트 타입 : \" + e.type;\n\n //로그 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n};"]],[["title","Event - onmouseleave (마우스 포인터가 영역 밖으로 나갈 때 발생)"],["tmp","Group\n[Group] Event - onmouseleave (마우스 포인터가 영역 밖으로 나갈 때 발생)\n〈\n/page/P00121.xmlGrouponmouseleave마우스이벤트\n〉\n예제와 가이드 함께 보기\nGroup의 이벤트 onmouseleave 예제입니다.\n이벤트 발생 조건은 아래와 같습니다.\nonmouseleave : 마우스 포인터가 영역 밖으로 나갈 때 발생.\nGroup\n아래의 Group 영역으로 마우스를 이동했다가 영역 밖으로 마우스를 이동합니다.\n이벤트 로그가 [로그 확인] 영역과 개발자 도구 콘솔에 출력됩니다.\nGroup 영역\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};\n\n/**\n * Group \"grp_exam1\"의 onmouseleave 핸들러\n * 마우스 포인터가 영역 밖으로 나갈 때 발생\n */\nscwin.grp_exam1_onmouseleave = function (e) {\n var strLog;\n\n //로그 출력\n $c.frame.printExampleLog(\"**** onmouseleave 발생 ****\", txa_log);\n\n //이벤트 정보 출력\n console.log(e);\n\n $c.frame.printExampleLog(\"브라우저의 개발자 도구 콘솔을 확인하세요.\", txa_log, false);\n\n strLog = \"이벤트 발생 컴포넌트 ID : \" + this.getOriginalID() + \" | \";\n strLog += \"이벤트 타입 : \" + e.type;\n\n //로그 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n};"]],[["title","자손 컴포넌트의 Method 일괄 호출하기"],["tmp","Group\n[Group] 자손 컴포넌트의 Method 일괄 호출하기\n〈\n/page/P00025.xmlGroupinvoke\n〉\n예제와 가이드 함께 보기\n빈 문자열 할당하기\n비활성화 하기\n활성화 하기\nInputBox\nCheckBox\nType1\nType2\nInputCalendar\n달력에서 선택\nTextBox Textbox 컴포넌트입니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [실행1] 클릭 시\n * [Group 컴포넌트 ID].invoke(\"setValue\",\"\");\n */\nscwin.btn_ex1_onclick = function (e) {\n\n //grp_form 컴포넌트 하위의 모든 웹스퀘어 컴포넌트의 setValue method를 실행합니다.\n //setValue method가 없는 경우 해당 컴포넌트는 제외하고 진행됩니다.\n grp_form.invoke(\"setValue\", \"\");\n};\n\n\n/**\n * [실행2] 클릭 시\n * [Group 컴포넌트 ID].invoke(\"setDisabled\",true);\n */\nscwin.btn_ex2_onclick = function (e) {\n\n //grp_form 컴포넌트 하위의 모든 웹스퀘어 컴포넌트의 setDisabled method를 실행합니다.\n //setDisabled method가 없는 경우 해당 컴포넌트는 제외하고 진행됩니다.\n //grp_form 컴포넌트 하위의 컴포넌트가 disabeld됩니다.\n grp_form.invoke(\"setDisabled\", true);\n};\n\n\n/**\n * [실행3] 클릭 시\n * [Group 컴포넌트 ID].invoke(\"setDisabled\", false);\n */\nscwin.btn_ex3_onclick = function (e) {\n\n //grp_form 컴포넌트 하위의 모든 웹스퀘어 컴포넌트의 setDisabled method를 실행합니다.\n //setDisabled method가 없는 경우 해당 컴포넌트는 제외하고 진행됩니다.\n //grp_form 컴포넌트 하위의 컴포넌트가 enabled됩니다.\n grp_form.invoke(\"setDisabled\", false);\n};"]],[["title","displayFormatter 적용하기"],["tmp","Input\n[Input] displayFormatter 적용하기\n〈\n/page/P00240.xmlInputdisplayFormatter\n〉\n예제와 가이드 함께 보기\ndisplayFormatter 속성에 사용자 함수를 지정하는 예제입니다.\ndisplayFormatter 속성으로 함수명을 지정하고 스크립트에서 해당 함수를 별도로 정의해야 합니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- dataType : Input의 dataType을 명시\n- displayFormatter : 스크립트에서 선언한 함수명 기재\n속성 'displayFormatter'에 사용자 함수 지정\n소문자 알파뱃 입력 후 Input에서 focus out 또는 Blur 시점에 사용자 함수에 의해 대문자 알파뱃으로 포맷이 변화되는 것을 확인할 수 있습니다.\n\nex) 입력값 : abcdefgh -> 출력값 : ABCDEFGH\n※Input에 포커스를 주면 처음에 입력한 값으로 돌아옵니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 영역 [속성 'displayFormatter'에 Input 입력값을 소문자에서 대문자로 바꿔주는 함수 지정]의\n * 입력 [ibx_exam2]의 displayFormatter 함수\n */\nscwin.toUpperCaseFormatter = function (value) {\n return value.toUpperCase();\n};"]],[["title","Event - oneditfull (입력값이 maxByteLength 설정값과 같을 때 발생)"],["tmp","Input\n[Input] Event - oneditfull (입력값이 maxByteLength 설정값과 같을 때 발생)\n〈\n/page/P00128.xmlInput이벤트\n〉\n예제와 가이드 함께 보기\nInput의 이벤트 oneditfull 예제입니다.\n이벤트 oneditfull는 입력값이 속성 maxByteLength의 설정값과 동일할 때 발생합니다.\n이 기능은 입력값이 영문, 숫자이고, 속성 maxByteLength이 설정된 경우만 동작합니다.\n이벤트 oneditfull 설정\n입력값이 영문, 숫자이고,\n입력값이 4byte에 도달하면 발생됩니다.\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * Input \"ibx_exam1\"의 oneditfull 핸들러\n * 입력된 값이 maxByteLength과 같을 경우 발생.\n * 입력값이 영문, 숫자이고, 속성 maxByteLength이 설정된 경우만 동작합니다.\n */\nscwin.ibx_exam1_oneditfull = function () {\n var strLog;\n\n //로그 출력\n $c.frame.printExampleLog(\"**** oneditfull 발생 ****\", txa_log);\n\n strLog = \"이벤트 발생 컴포넌트 ID : \" + this.getOriginalID() + \" | \";\n strLog += \"입력값 : \" + this.getValue();\n\n //로그 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","다양한 방법으로 입력 체크하기"],["tmp","Input\n[Input] 다양한 방법으로 입력 체크하기\n〈\n/page/P00195.xmlInputValidatedisplayformatteronbluronchangeoneditenteronviewchange\n〉\n예제와 가이드 함께 보기\nInput의 입력 값의 유효성 검사 방법들의 예제입니다.\n크게 두 가지 방법으로 Input의 이벤트를 이용한 방법과 속성에 사용자 정의 함수를 선언하는 방법입니다.\n사용할 이벤트와 속성은 아래와 같습니다.\n\n이벤트: oneditenter, onviewchange, onchange, onblur\n속성: validator, displayformatter\n\n추가적으로 자주 사용되는 onblur, onviewchange, oneditenter, validator, displayformatter의 실행 순서를 확인할 수 있는 예제를 포함하고 있습니다.\n컴포넌트의 이벤트 발생 시 결과가 입력 컴포넌트 우측에 표시되며 영역 [로그 확인]의 textarea에 로그가 같이 출력됩니다.\nEvent: onveiwchange\n이벤트 onviewchange를 이용한 날짜 형식 유효성 검사입니다.\nonviewchange는 사용자가 화면에서 값을 변경한 경우 발생하는 이벤트 입니다.\nscript 상에서 수정된 경우 이벤트가 발생하지 않습니다.\nex) 20230101 -> (O) , 9999999 -> (X)\nEvent: oneditenter\n이벤트 oneditenter를 이용한 필수 입력 항목입니다.\noneditenter 이벤트는 Input에서 \"ENTER\"키 혹은 \"TAB\"키를 누를 때 발생합니다.\nEvent: onchange\n이벤트 onchange를 이용한 주민등록번호 유효성 검증 샘플입니다\nonchange는 Input 안의 값이 변경된 경우 발생하는 이벤트로, 화면에서 사용자의 조작이나 script 상에서 변경된 경우 모두 발생합니다.\nscript 상에서 변경되어도 이벤트가 발상한다는 점에서 잘 사용되지 않고,\n사용자 조작으로만 이벤트가 발생하는 onviewchange가 더 자주 사용됩니다.\nex) 6407131018433 -> (O)\nEvent: onblur\nonblur를 이용한 값 선택한 겂 범위 체크 예제입니다.\nonblur는 Input에서 포커스가 벗어나게 되면 발생하는 이벤트입니다.\nselectbox에서 범위를 선택하고 숫자를 입력한 뒤 Input이 아닌 다른 곳을 클릭하면 이벤트가 발생합니다.\n-선택-\n1~1000\n1001~2000\n2001~3000\n3001~\nProperty: displayFormatter\n사용자 정의 함수를 이용한 전화번호 유효성 검증 예제입니다.\n속성 displayFormatter를 이용한 방법으로 displayformatter는 Input에 입력된 값의 표시 형태를 사용자 정의 함수로 만드는 속성입니다.\n입력이 완료되면 실행되기 때문에 동작은 onblur 이벤트와 비슷합니다.\nex) 050512345678, 01012345678, 021234567\nProperty: validator\n사용자 정의 함수를 이용한 이메일 유효성 검증 예제입니다.\n속성 validator를 이용한 방법으로 유효성 검사를 위한 사용자 정의 함수를 설정하는 속성입니다.\nex) websquare@inswave.com\n실행 순서 테스트\n자주 사용되는 oneditenter, onviewchange, onblur, validator, displayformatter의 실행 순서를 확인하는 예제 입니다.\n모두 적용 한 뒤 실행 순서대로 로그를 출력하는 예제입니다.\n주의 사항\n1. displayformatter와 validator는 동시에 적용되지 않고 validator가 우선시됩니다.\n2. 각 이벤트 발생 조건에 맞게 테스트해야합니다.\nonblur는 포커스를 잃었을 때, onviewchange, displayformatter, validator는 값이 변경된 상태에서 포커스를 잃을 때, oneditenter는 \"ENTER\"키나 \"TAB\"키를 눌렀을 경우 발생합니다.\n전체를 다 실행시키려면 \"ENTER\"키 혹은 \"TAB\"키를 눌러줍니다.\ndisplayformatter\nvalidator\n로그 확인\nSee Also\n[AutoComplete] onchange와 onviewchange 비교하기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n}\n/**\n * 영역 [Event: oneditenter]의\n * 입력 [ibx1]의 oneditenter 함수\n */\nscwin.ibx1_oneditenter = function () {\n var value = this.getValue();\n var str_len = value.trim().length;\n var strLog = \"[Input] 필수 입력 항목 - 입력 값 : \" + value;\n var isPass = true;\n\n if (str_len == 0) {\n //로그 출력\n strLog = \"[Input] 해당 항목은 필수입력 항목입니다.\";\n isPass = false;\n }\n scwin.setResultTxt(spn1, isPass);\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n}\n/**\n * 영역 [Event: onviewchange]의\n * 입력 [ibx2]의 onviewchange 함수\n */\nscwin.ibx2_onviewchange = function (info) {\n var value = this.getValue();\n var strLog = \"[Input] 날짜 입력 검증 - 입력 값 : \" + value;\n var flag = scwin.isDate(value);\n var isPass = true;\n if (!flag) {\n //로그 출력\n strLog = \"[Input] 날짜입력 오류입니다.\";\n this.setValue(\"\");\n this.focus();\n isPass = false;\n }\n scwin.setResultTxt(spn2, isPass);\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 영역 [Event: onviewchange]의\n * 입력 [ibx2]의 날짜 형식 유효성 확인 함수\n */\nscwin.isDate = function (sDate, timeChk) {\n var flag = true;\n try {\n if (sDate.length == 8) {\n sDate = sDate + \"000000\";\n }\n\n var y1 = parseInt(sDate.substring(0, 4), 10);\n var m1 = parseInt(sDate.substring(4, 6), 10);\n var d1 = parseInt(sDate.substring(6, 8), 10);\n var h1 = parseInt(sDate.substring(8, 10), 10);\n var t1 = parseInt(sDate.substring(10, 12), 10);\n var s1 = parseInt(sDate.substring(12), 10);\n if (isNaN(y1) || isNaN(m1) || isNaN(d1) || isNaN(h1) || isNaN(t1) || isNaN(s1))\n flag = false;\n\n if (m1 < 1 || m1 > 12)\n flag = false;\n\n var maxDay = 31;\n if (m1 == 2) {\n maxDay = ((y1 % 400 == 0) || ((y1 % 4 == 0) && (y1 % 100 != 0))) ? 29\n : 28;\n } else if (m1 == 4 || m1 == 6 || m1 == 9 || m1 == 11) {\n maxDay = 30;\n }\n\n if (d1 < 1 || d1 > maxDay) {\n flag = false;\n }\n\n if (h1 + t1 + s1 != \"\") {\n if (h1 < 0 || h1 > 24) {\n flag = false;\n } else if (h1 == 24) {\n if (typeof timeChk == \"boolean\" && !timeChk)\n flag = false;\n if (t1 > 0)\n flag = false;\n if (s1 > 0)\n flag = false;\n }\n if (t1 < 0 || t1 > 59)\n flag = false;\n if (s1 < 0 || s1 > 59)\n flag = false;\n }\n } catch (ex) {\n console.error(ex);\n flag = false;\n }\n return flag;\n};\n\n/**\n * 영역 [Event: onchange]의\n * 입력 [ibx1]의 onchange 함수\n */\nscwin.ibx3_onchange = function (info) {\n var value = this.getValue();\n var flag = scwin.isSSN(value);\n var strLog = \"[Input] 주민등록 번호 - 입력 값 : \" + value;\n var isPass = true;\n\n if (!flag) {\n //로그 출력\n strLog = \"[Input] 주민번호를 확인하세요\";\n isPass = false;\n }\n scwin.setResultTxt(spn3, isPass);\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n\n/**\n * 영역 [Event: onchange]의\n * 입력 [ibx1]의 주민등록 번호 유효성 확인 함수\n */\nscwin.isSSN = function (str) {\n var checkID = new Array(2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5);\n var i = 0, sum = 0;\n var temp = 0;\n var yy = \"\";\n\n if (str.length != 13) {\n return false;\n }\n\n for (i = 0; i < 13; i++) {\n if (str.charAt(i) < '0' || str.charAt(i) > '9') {\n return false;\n }\n }\n\n // foreigner PersonID Pass\n if (str.substring(6, 13) == \"5000000\" || str.substring(6, 13) == \"6000000\" || str.substring(6, 13) == \"7000000\"\n || str.substring(6, 13) == \"8000000\") {\n return true;\n }\n\n for (i = 0; i < 12; i++) {\n sum += str.charAt(i) * checkID[i];\n }\n\n temp = sum - Math.floor(sum / 11) * 11;\n temp = 11 - temp;\n temp = temp - Math.floor(temp / 10) * 10;\n\n // 나이 (-) 체크\n if (str.charAt(6) == '1' || str.charAt(6) == '2' || str.charAt(6) == '5' || str.charAt(6) == '6') {\n yy = \"19\";\n } else {\n yy = \"20\";\n }\n if (parseInt(WebSquare.date.getCurrentServerDate(\"yyyy\")) - parseInt(yy + str.substring(0, 2)) < 0) {\n return false;\n }\n\n // 외국인 주민번호 체크로직 추가\n if (str.charAt(6) != '5' && str.charAt(6) != '6' && str.charAt(6) != '7' && str.charAt(6) != '8') {\n if (temp == parseInt(str.charAt(12))) {\n return true;\n } else {\n return false;\n }\n } else {\n if ((temp + 2) % 10 == parseInt(str.charAt(12))) {\n return true;\n } else {\n return false;\n }\n }\n};\n\n/**\n * 영역 [Property: displayFormatter]의\n * 입력 [ibx4]의 displayFormatter 함수\n */\nscwin.phoneFormatter = function (str) {\n var strLog = \"[Input] 전화번호 - 입력 값 : \" + str;\n var phoneNum = scwin.formatPhone(str);\n var isDash = (phoneNum.indexOf(\"-\") > 1);\n var isPass = true;\n\n if (!isDash) {\n //로그 출력\n strLog = \"[Input] 전화번호 형식 오류입니다.\";\n phoneNum = \"\";\n isPass = false;\n }\n scwin.setResultTxt(spn4, isPass);\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n return phoneNum;\n};\n\n/**\n * 영역 [Property: displayFormatter]의\n * 입력 [ibx4]의 문자열에 전화번호 형식 Formatter를 적용하여 반환하는는 함수\n */\nscwin.formatPhone = function (str) {\n try {\n str = str.replace(/\\s+/g, \"\");\n var commCdList = [\"0505\"]; // 4자리 국번 ,예외가 되는 국번 확인\n var commCdNum = str.substr(0, 4); // 국번 4자리 확인\n if (commCdList.indexOf(commCdNum) > -1) { //국번이 0505 인경우\n return str.replace(/^(01[0136789]{1}|02|0[3-9]{1}[0-9]{1}[0-9]{1})-?([*0-9]{3,4})-?([0-9]{4})$/, \"$1-$2-$3\");\n } else if (str.length <= 11) {\n return str.replace(/^(01[0136789]{1}|02|0[3-9]{1}[0-9]{1})-?([*0-9]{3,4})-?([0-9]{4})$/, \"$1-$2-$3\");\n } else {\n return str;\n }\n } catch (ex) {\n console.error(ex);\n }\n};\n\n/**\n * 영역 [Property: validator]의\n * 입력 [ibx5]의 validator 함수\n */\nscwin.ibx5_validator = function (info) {\n var value = info;\n var strLog = \"[Input] 이메일 주소 - 입력 값 : \" + value;\n var flag = scwin.isEmail(info);\n var isPass = true;\n\n if (!flag) {\n //로그 출력\n strLog = \"[Input] 이메일 주소 형식 오류입니다.\";\n value = \"\";\n isPass = false;\n }\n if (info.length != 0) {\n scwin.setResultTxt(spn5, isPass);\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n }\n return value;\n};\n/**\n * 영역 [Property: validator]의\n * 입력 [ibx5]의 이메일 주소 유효성 검사사 함수\n */\nscwin.isEmail = function (str) {\n if (typeof str != \"undefined\" && str != \"\") {\n var format = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n if (format.test(str)) {\n return true;\n } else {\n return false;\n }\n }\n\n return true;\n};\n\n/**\n * 영역 [Event: onviewchange]의\n * selectbox [slt1]의 onviewchange 함수\n * 입력[ibx6]에서 받은 값을 확인할 범위를 지정\n */\nscwin.slt1_onviewchange = function (info) {\n ibx6.setValue(\"\");\n ibx6.focus();\n};\n\n/**\n * 영역 [Event: onviewchange]의\n * 입력[ibx6]의 onviewchange 함수\n */\nscwin.ibx6_onviewchange = function (info) {\n var selData = slt1.getValue();\n var data = this.getValue();\n var strLog = \"[Input]값 범위 체크 - 입력 값 : \" + data;\n var isPass = true;\n\n if (data == \"\") {\n return;\n }\n data = parseInt(data);\n\n if (selData == \"1\") {\n if (data > 1000 || data < 1) {\n isPass = false;\n strLog = \"[Input] 1~1000 사이의 값을 입력하세요\";\n this.setValue(\"\");\n }\n } else if (selData == \"2\") {\n if (data > 2000 || data < 1001) {\n isPass = false;\n strLog = \"[Input] 1001~2000 사이의 값을 입력하세요\";\n this.setValue(\"\");\n }\n } else if (selData == \"3\") {\n if (data > 3000 || data < 2001) {\n isPass = false;\n strLog = \"[Input] 2001~3000 사이의 값을 입력하세요\";\n this.setValue(\"\");\n }\n } else if (selData == \"4\") {\n if (data < 3001) {\n isPass = false;\n strLog = \"[Input] 3001 이상상의 값을 입력하세요\";\n this.setValue(\"\");\n }\n }\n\n scwin.setResultTxt(spn6, isPass);\n\n //로그 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 결과 표시 텍스트, css 설정 함수\n */\nscwin.setResultTxt = function (spnObj, isPass) {\n var msg = \"O\";\n var color = \"green\";\n\n if (isPass == false) {\n msg = \"입력을 확인하세요\";\n color = \"red\";\n }\n\n spnObj.setValue(msg);\n spnObj.setStyle(\"color\", color);\n}\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};\n\n/**\n * 영역 [실행 순서 테스트]의\n * 입력[ibx7], 입력[ibx8]의 onblur 함수\n */\nscwin.test_onblur = function(e) {\n //로그 출력\n var strLog = \"[Input] onblur\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n};\n\n/**\n * 영역 [실행 순서 테스트]의\n * 입력[ibx7], 입력[ibx8]의 oneditenter 함수\n */\nscwin.test_oneditenter = function() {\n //로그 출력\n var strLog = \"[Input] oneditenter\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n};\n\n/**\n * 영역 [실행 순서 테스트]의\n * 입력[ibx7], 입력[ibx8]의 onviewchange 함수\n */\nscwin.test_onviewchange = function(info) {\n //로그 출력\n var strLog = \"[Input] onviewchange\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n};\n\n\n/**\n * 영역 [실행 순서 테스트]의\n * 입력[ibx7]의 displayformatter 함수\n */\nscwin.ibx7_displayFormatter = function(str){\n //로그 출력\n var strLog = \"[Input] displayformatter\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n return str;\n}\n/**\n * 영역 [실행 순서 테스트]의\n * 입력[ibx8]의 validator 함수\n */\nscwin.ibx8_validator = function(info){\n //로그 출력\n var strLog = \"[Input] validator\";\n $c.frame.printExampleLog(strLog, txa_log, false);\n console.log(strLog);\n\n}"]],[["title","마스킹하는 방법 및 마스킹 방향 설정하기"],["tmp","Input\n[Input] 마스킹하는 방법 및 마스킹 방향 설정하기\n〈\n/page/P00241.xmlInputapplyFormatdisplayFormatmaskFormat\n〉\n예제와 가이드 함께 보기\nInput컴포넌트에 마스킹하는 방법 및 마스킹 방향 설정에 관한 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- dataType : Input의 dataType을 명시\n- displayFormat : Input값에 format을 적용\n- maskFormat : 마스킹이 적용되는 방향 설정\n마스킹 기본 방향\n숫자 및 알파벳 입력 시 왼쪽에서 오른쪽으로 마스킹이 적용되는 것을 확인한다.\ndisplayFormat : #-##-###\n입력값 : 123abc -> 출력값 : 1-23-abc\n※ 숫자, 알파벳만 입력되게 allowchar를 사용했습니다.\n마스킹 역방향 설정하기\n숫자 및 알파벳 입력 시 오른쪽에서 왼쪽으로 마스킹이 적용되는 것을 확인한다.\ndisplayFormat : #-##-###\n입력값 : 123abc -> 출력값 : 1-23-abc\n※ 숫자, 알파벳만 입력되게 allowchar를 사용했습니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","숫자형 데이터 입력 시 설정한 포맷 적용 시점 지정하기 - applyFormat 동작 비교"],["tmp","Input\n[Input] 숫자형 데이터 입력 시 설정한 포맷 적용 시점 지정하기 - applyFormat 동작 비교\n〈\n/page/P00125.xmlInputbigDecimaldataTypedisplayFormatnumber\n〉\n예제와 가이드 함께 보기\nInput의 속성 applyFormat의 설정값 비교 예제입니다.\nInput의 속성을 아래와 같이 설정하면 사용자가 입력한 숫자형 데이터가 3자리 마다 ,가 포함됩니다.\n- dataType : number 또는 bigDecimal\n- displayFormat : #,###\n속성 applyFormat에 지정한 값에 따라 포맷 적용의 시점이 달라집니다.\n기본 설정 - applyFormat : display\nInput에서 입력 커서가 벗어나면 포맷이 적용됩니다.\napplyFormat : all\nInput에 입력 즉시 포맷이 적용됩니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","입력값의 좌우 공백 제거하기 - trim, ltrim, rtrim"],["tmp","Input\n[Input] 입력값의 좌우 공백 제거하기 - trim, ltrim, rtrim\n〈\n/page/P00126.xmlInput양쪽공백오른쪽공백왼쪽공백우측공백좌우공백좌측공백\n〉\n예제와 가이드 함께 보기\nInput에 입력한 데이터의 좌우 공백 제거 예제입니다.\n속성 trim, ltrim, rtrim 설정으로 기능을 사용할 수 있습니다.\n이 기능은 컴포넌트에서 입력 커서가 벗어날 때 적용됩니다.\n기본 설정\ntrim\n입력 커서가 벗어날 때 좌우 공백이 제거됩니다.\nltrim\n입력 커서가 벗어날 때 좌측 공백이 제거됩니다.\nrtrim\n입력 커서가 벗어날 때 우측 공백이 제거됩니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","최대 입력 길이 제한하기 - maxLength, maxByteLength"],["tmp","Input\n[Input] 최대 입력 길이 제한하기 - maxLength, maxByteLength\n〈\n/page/P00127.xmlInputbyteCheckEncoding\n〉\n예제와 가이드 함께 보기\nInput의 입력값의 길이를 제한하는 예제입니다.\n속성 maxLength, maxByteLength를 비교할 수 있습니다.\nmaxLength : 글자 수를 기준으로 제한합니다.\nmaxByteLength : 입력값을 byte로 계산하여 제한합니다.\nmaxByteLength는 client 설정파일에 적용된 byteCheckEncoding의 설정값을 기준으로 아래와 같이 적용됩니다.\n- utf-8 : 한글 1글자가 3byte\n- euc-kr : 한글 1글자가 2byte\n기본 설정\n입력값을 최대 4글자로 제한\n숫자, 영문, 한글 상관없이 최대 4글자를 입력할 수 있습니다.\n한글의 경우 입력 커서가 벗어날 때 적용됩니다.\n입력값을 최대 4byte로 제한\nclient 설정 파일의 속성 byteCheckEncoding의 값은 \"utf-8\"입니다.\n숫자, 영문은 최대 4글자를 입력할 수 있습니다.\n한글은 최대 1글자를 입력할 수 있습니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","달력 아이콘 클릭 시 표시되는 날짜를 설정하거나 확인하기"],["tmp","InputCalendar\n[InputCalendar] 달력 아이콘 클릭 시 표시되는 날짜를 설정하거나 확인하기\n〈\n/page/P00202.xmlInputCalendardefaultDate\n〉\n예제와 가이드 함께 보기\n입력 값이 없는 상태에서 사용자가 초기에 달력 아이콘을 클릭할 때 달력에 표시되는 날짜를 지정 및 값으로 획득할 수 있습니다.\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- defaultDate : (속성) 초기에 달력 아이콘을 클릭할 때 달력에 표시되는 날짜\n- getDefaultDate : (함수) 현재 컴포넌트에 설정된 defaultDate를 반환\n- setDefaultDate : (함수) 속성 defaultDate의 value를 설정\n(기본 설정) defaultDate = \"\"\n속성 defaultDate에 default값인 빈 문자열이 설정되어 있습니다.\n달력 아이콘 클릭 후 표시되는 달력의 날짜가 시스템 상의 날짜(오늘)로 설정되어 있는것을 확인합니다.\n달력에서 선택\n속성 defaultDate에 값 설정\n속성 defaultDate에 \"20230101\" 문자열을 추가하였습니다.\n달력 아이콘 클릭 후 표시되는 달력의 날짜가 2023-01-01로 설정되어 있는것을 확인합니다.\n달력에서 선택\n메소드를 통한 속성 defaultDate에 값 설정 및 획득\n버튼 [달력에 표시되는 날짜를 1993-05-31로 변경하기]를 클릭하여 속성 defaultDate의 값을 변경할 수 있습니다. (변경된 날짜 값은 달력 아이콘을 눌러 확인 가능합니다.)\n그 후 버튼 [달력에 표시되는 날짜를 획득하여 메시지 창에 표시하기]를 클릭하면 \"19930531\" 날짜 값을 획득하고 메시지창(alert)에서 확인할 수 있습니다.\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [달력에 표시되는 날짜를 1993-05-31로 변경하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // InputCalendar 'ica_exam_3'의 날짜 값을 \"20230101\" -> \"19930531\" 변경하기\n ica_exam_3.setDefaultDate(\"19930531\");\n};\n\n/**\n * 버튼 [달력에 표시되는 날짜를 획득하여 메시지 창에 표시하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // InputCalendar 'ica_exam_3'의 날짜 값을 획득하여 메시지 창(alert)에 표시하기\n let date = ica_exam_3.getDefaultDate();\n alert(date);\n};"]],[["title","오늘 날짜 할당하기"],["tmp","InputCalendar\n[InputCalendar] 오늘 날짜 할당하기\n〈\n/page/P00137.xml$p.getCurrentServerDateInputCalendarsetCurrentDate\n〉\n예제와 가이드 함께 보기\nInputCalendar에 오늘 날짜를 출력하는 예제입니다.\n오늘 날짜 출력하기 - 속성\n달력에서 선택\n오늘 날짜 출력하기 - 스크립트\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [오늘 날짜 할당] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var strDate;\n\n //오늘 날짜 반환 받기 - InputCalenar에 설정된 ioFormat과 동일해야 합니다.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //InputCalenar [ica_exam_2]에 value 할당하기\n ica_exam_2.setValue(strDate);\n\n};"]],[["title","유효하지 않은 값이 입력된 경우 메시지를 팝업하고 직전 값으로 되돌리기"],["tmp","InputCalendar\n[InputCalendar] 유효하지 않은 값이 입력된 경우 메시지를 팝업하고 직전 값으로 되돌리기\n〈\n/page/P00130.xmlInputCalendardateValidSetdateValidSetCustominvalidMessageFuncvalidateOnInputvalidateOnInputMobile\n〉\n예제와 가이드 함께 보기\n입력값이 유효한 날짜가 아닌 경우 개발자가 정의 한 팝업에 메시지를 출력하고 직전 값으로 되돌리는 예제입니다.\n유효성 체크\n입력값이 유효한 날짜가 아니면 개발자가 정의 한 팝업에 메시지를 출력하고 직전 값으로 되돌립니다.\n달력에서 선택\n기본 설정\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar에 오늘 날짜 할당.\n ica_exam_1.setValue(strDate);\n ica_exam_2.setValue(strDate);\n};\n\n/**\n * inputCalendar [ica_exam_1]의 속성 invalidMessageFunc에 정의\n * 유효하지 않은 날짜가 입력된 경우 엔진에서 호출합니다.\n */\nscwin.inputCalendar_invalidMessageFunc = function () {\n var strTarget;\n var jsnPopParam;\n var jsnPopDataObjectsnPopParam;\n var jsnPopOptions;\n\n //컴포넌트 ID\n //this.callerId\n\n //대상 InputCalendar의 ID로 컴포넌트 객체 반환 받기\n strTarget = $p.getComponentById(this.callerId);\n\n //팝업에 전달할 데이터\n jsnPopParam = {\n \"inputData\": strTarget.getValue() //입력값 전달\n };\n\n //팝업에 전달한 데이터 객체 정보\n jsnPopDataObjectsnPopParam = {\n \"type\": \"json\", // 데이터 타입. \"json\" 권장 \n \"name\": \"p_param\", // 데이터를 가져오기 위한 key 값. popup에서 $p.getParameter(\"p_param\")로 반환 받을 수 있습니다.\n \"data\": jsnPopParam // 실제 전달할 데이터\n };\n\n //팝업 객체 정보\n jsnPopOptions = {\n \"id\": \"popup_P00130P01\",\n \"type\": \"wframePopup\",\n \"modal\": true,\n \"frameModal\": true,\n \"width\": \"270px\",\n \"height\": \"160px\",\n \"popupName\": \"유효성 체크 메시지\",\n \"left\": strTarget.getPosition(\"left\"), //inputCalendar의 left 값\n \"top\": strTarget.getPosition(\"top\"), //inputCalendar의 top 값\n \"dataObject\": jsnPopDataObjectsnPopParam //팝업에 전달할 데이터 객체 정보\n };\n\n //팝업 열기\n $p.openPopup(\"/page/P00130P01.xml\", jsnPopOptions);\n\n //직전 값으로 복원.\n strTarget.setValueCancel();\n};"]],[["title","유효하지 않은 값이 입력된 경우 직전 값으로 되돌리기"],["tmp","InputCalendar\n[InputCalendar] 유효하지 않은 값이 입력된 경우 직전 값으로 되돌리기\n〈\n/page/P00129.xmlInputCalendardateValidSetvalidateOnInputvalidateOnInputMobile\n〉\n예제와 가이드 함께 보기\n입력값이 유효한 날짜가 아닌 경우 직전 값으로 복원하는 예제입니다.\n이 기능은 속성 \"dateValidSet\"을 활성화하여 사용할 수 있습니다.\n속성 dateValidSet 적용\n유효하지 않은 값이 입력되면 직전 값으로 복원합니다.\n직전 값의 유효성 검증은 진행하지 않습니다.\n달력에서 선택\n기본 설정\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar에 오늘 날짜 할당.\n ica_exam_1.setValue(strDate);\n ica_exam_2.setValue(strDate);\n};"]],[["title","입력, 출력 서식 지정하기"],["tmp","InputCalendar\n[InputCalendar] 입력, 출력 서식 지정하기\n〈\n/page/P00135.xmlInputCalendarcalendarDisplayFormatdisplayFormatioFormat\n〉\n예제와 가이드 함께 보기\n지정된 입출력 서식에 따라 value로 할당된 값이 표현된 것을 비교합니다.\n입력 서식은 속성 ioFormat, 출력 서식은 속성 displayFormat, calendarDisplayFormat을 사용합니다.\n[기본 설정] 입력 서식 : 연월일 / 출력 서식 : 연-월-일\n달력에서 선택\n입력 서식 : 월일연 / 출력 서식 : 월-일-연\n달력에서 선택\n입력 서식 : 연월일 / 출력 서식 : 월-일-연\n달력에서 선택\n입력 서식 : 월일연 / 출력 서식 : 연-월-일\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\nscwin.btn_ex1_1_onclick = function (e) {\n ica_exam_1.setValue('20220815');\n};\n\nscwin.btn_ex1_2_onclick = function (e) {\n ica_exam_2.setValue('08152022');\n};\n\nscwin.btn_ex1_3_onclick = function (e) {\n ica_exam_3.setValue('20220815');\n};\n\nscwin.btn_ex1_4_onclick = function (e) {\n ica_exam_4.setValue('08152022');\n};"]],[["title","캘린더의 날짜 비활성화 하기 - 지정한 날짜"],["tmp","InputCalendar\n[InputCalendar] 캘린더의 날짜 비활성화 하기 - 지정한 날짜\n〈\n/page/P00133.xmlInputCalendardisableDate\n〉\n예제와 가이드 함께 보기\nInputCalendar의 캘린더에 지정한 날짜를 비활성화하는 예제입니다.\n캘린더의 날짜 비활성화화기 -  지정일\n달력에서 선택\n캘린더의 날짜 비활성화화기 -  지정일(다중)\n달력에서 선택\n기본 설정\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strYear;\n\n //서버에서 올해 반환 받기.\n strYear = $p.getCurrentServerDate(\"yyyy\");\n\n //inputCalendar에 올해 8월 1일 할당하기\n ica_exam_1.setValue(strYear + \"0801\");\n ica_exam_2.setValue(strYear + \"0801\");\n ica_exam_3.setValue(strYear + \"0801\");\n};\n\n/**\n * 버튼 [올해의 8월 15일 비활성화] 클릭 시 호출\n */\nscwin.btn_ex1_onclick = function (e) {\n var strYear;\n\n //서버에서 올해 반환 받기.\n strYear = $p.getCurrentServerDate(\"yyyy\");\n\n //inputCalendar \"ica_exam_2\"에 올해의 8월 15일 비활성화 하기\n ica_exam_2.disableDate(strYear + \"0815\");\n};\n\n/**\n * 버튼 [올해의 8월 14, 16일 비활성화] 클릭 시 호출\n */\nscwin.btn_ex2_onclick = function (e) {\n var strYear;\n\n //서버에서 올해 반환 받기.\n strYear = $p.getCurrentServerDate(\"yyyy\");\n\n //inputCalendar \"ica_exam_3\"에 올해의 8월 14, 16일 비활성화 하기\n ica_exam_3.disableDate(strYear + \"0814 \" + strYear + \"0816\"); //날짜는 공백으로 구분\n //ex) ica_exam_3.disableDate(\"20220814 20220816\")\n\n\n};"]],[["title","캘린더의 날짜 비활성화 하기 - 지정한 날짜 이전/이후"],["tmp","InputCalendar\n[InputCalendar] 캘린더의 날짜 비활성화 하기 - 지정한 날짜 이전/이후\n〈\n/page/P00132.xmlInputCalendardisableAfterDatedisableBeforeDate\n〉\n예제와 가이드 함께 보기\nInputCalendar의 캘린더에 출력된 날짜를 비활성화하는 예제입니다.\n지정한 날짜의 이후 또는 이전 날짜를 비활성화 할 수 있습니다.\n비활성화 된 날짜는 사용자가 선택할 수 없습니다.\n이 기능은 사용자가 입력하는 날짜, 기 입력(할당)된 날짜에 대해서는 제어하지 않습니다.\n캘린더의 날짜 비활성화화기 -  지정일 이전\n달력에서 선택\n캘린더의 날짜 비활성화화기 -  지정일 이후\n달력에서 선택\n기본 설정\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar에 오늘 날짜 할당.\n ica_exam_1.setValue(strDate);\n ica_exam_2.setValue(strDate);\n ica_exam_3.setValue(strDate);\n};\n\n/**\n * 버튼 [오늘 이전 날짜 비활성화] 클릭 시 호출\n */\nscwin.btn_ex1_onclick = function (e) {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar \"ica_exam_2\"에 지정일 이전 날짜 비활성화하기\n ica_exam_2.disableBeforeDate(strDate);\n};\n\n/**\n * 버튼 [오늘 이후 날짜 비활성화] 클릭 시 호출\n */\nscwin.btn_ex2_onclick = function (e) {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar \"ica_exam_3\"에 지정일 이후 날짜 비활성화하기\n ica_exam_3.disableAfterDate(strDate);\n\n};"]],[["title","캘린더의 연도와 월을 선택하는 UI 지정하기"],["tmp","InputCalendar\n[InputCalendar] 캘린더의 연도와 월을 선택하는 UI 지정하기\n〈\n/page/P00136.xmlInputCalendardynamicHeaderOrderpickerType\n〉\n예제와 가이드 함께 보기\nInputCalendar의 캘린더의 연도와 월을 선택하는 UI를 지정하는 예제입니다.\n(기본 설정) select : 연도와 월 선택하는 UI를 drop down 형태로 구성\ndynamic : 연도와 월을 선택하는 UI를 list 형태로 구성\n(기본 설정) DropDown 형태의 UI\n달력에서 선택\nList 형태의 UI\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strYear;\n\n //서버에서 올해 반환 받기.\n strYear = $p.getCurrentServerDate(\"yyyy\");\n\n //inputCalendar에 올해 8월 1일 할당하기\n ica_exam_1.setValue(strYear + \"0801\");\n ica_exam_2.setValue(strYear + \"0801\");\n};"]],[["title","캘린더의 요일을 이미지 또는 텍스트로 표시하기"],["tmp","InputCalendar\n[InputCalendar] 캘린더의 요일을 이미지 또는 텍스트로 표시하기\n〈\n/page/P00134.xmlInputCalendardisplayDayType\n〉\n예제와 가이드 함께 보기\n캘린더의 요일 영역을 브라우저에 표현하는 방법의 설정 예제입니다.\n설정을 통해 이미지 또는 문자열로 표현할 수 있습니다.\n[기본 설정] 캘린더의 요일을 이미지로 출력\n달력에서 선택\n캘린더의 요일을 문자열로 출력\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.setInitPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.setInitPage = function () {\n var strDate;\n\n //서버에서 오늘 날짜 반환 받기.\n strDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //inputCalendar에 오늘 날짜 할당.\n ica_exam_1.setValue(strDate);\n ica_exam_2.setValue(strDate);\n};"]],[["title","클릭할 경우 현재 날짜를 선택해주는 Today 버튼을 숨기거나 표시하기"],["tmp","InputCalendar\n[InputCalendar] 클릭할 경우 현재 날짜를 선택해주는 Today 버튼을 숨기거나 표시하기\n〈\n/page/P00220.xmlInputCalendarshowToday\n〉\n예제와 가이드 함께 보기\n달력 아이콘을 클릭하여 달력을 표시할 경우, 달력 상에 Today 버튼이 함께 표시됩니다.\nToday 버튼을 클릭하면 현재 날짜를 선택할 수 있습니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- showToday : Today 버튼의 표시 또는 비표시\n(기본 설정) showToday = \"true\"\n달력 아이콘 클릭 후 달력의 하단에 today 버튼이 있는 것을 확인합니다.\n달력에서 선택\nshowToday = \"false\"\n달력 아이콘 클릭 후 달력의 하단에 today 버튼이 없는 것을 확인합니다.\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //InputCalendar에 지정할 시스템 날짜를 yyyyMMdd 형태로 저장합니다.\n let sysDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //InputCalendar 'ica_exam_1'에 시스템 날짜를 지정합니다.\n ica_exam_1.setValue(sysDate);\n\n //InputCalendar 'ica_exam_2'에 시스템 날짜를 지정합니다.\n ica_exam_2.setValue(sysDate);\n};"]],[["title","특정 일 선택 후 월이나 연도를 이동해도 현재 선택한 일을 유지하기"],["tmp","InputCalendar\n[InputCalendar] 특정 일 선택 후 월이나 연도를 이동해도 현재 선택한 일을 유지하기\n〈\n/page/P00201.xmlInputCalendardayMoveFixed\n〉\n예제와 가이드 함께 보기\n달력 아이콘 클릭, 특정 일(Day)을 선택한 후, 달력 상단의 화살표를 사용하여 월이나 연도를 이동해도 현재 선택한 일을 유지할 수 있습니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- dayMoveFixed : 날짜(day) 유지 유무\n(기본 설정) dayMoveFixed - false\n달력 아이콘 클릭 시 표시되는 달력의 좌우 아이콘 '<' 을 클릭하여 월을 이동합니다.\n달력의 월이 바뀌었고 해당 월의 1일로 날짜가 이동한 것을 확인합니다.\n※ 단 속성과 관계 없이 셀렉트박스로 년(year), 월(month) 수정 시 선택해 둔 일(day)은 유지됩니다.\n달력에서 선택\ndayMoveFixed - true 적용\n달력 아이콘 클릭 시 표시되는 달력의 좌우 아이콘 '<<' 을 클릭하여 연도를 이동합니다.\n달력의 연도가 바뀌고 좌우 아이콘을 클릭하기 전 날짜가 달력에 표시된 것을 확인합니다.\n※ 단 속성과 관계 없이 셀렉트박스로 년(year), 월(month) 수정 시 선택해 둔 일(day)은 유지됩니다.\n달력에서 선택\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //InputCalendar에 지정할 시스템 날짜를 yyyyMMdd 형태로 저장합니다.\n let sysDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //InputCalendar 'ica_exam_1'에 시스템 날짜를 지정합니다.\n ica_exam_1.setValue(sysDate);\n\n //InputCalendar 'ica_exam_2'에 시스템 날짜를 지정합니다.\n ica_exam_2.setValue(sysDate);\n};"]],[["title","Y축 헤더 컬럼 병합하기"],["tmp","Pivot\n[Pivot] Y축 헤더 컬럼 병합하기\n〈\n/page/P00139.xmlPivotheaderYMerge세로축\n〉\n예제와 가이드 함께 보기\nPivot의 Y축 헤더 컬럼 병합 예제입니다.\n속성 \"headerYMerge\"의 설정을 통해 Y축에 출력된 헤더의 값이 동일한 경우 병합할 수 있습니다.\n(기본설정) Y축 헤더 컬럼 병합 미사용\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n전체 전체 1,464,559 1,471,513 1,518,040\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n전체 전체 10,415,399 11,379,459 12,479,061\nY축 헤더 컬럼 병합 사용\nY축의 [국적 구분], [성별]에 출력된 \"전체\" 값이 병합되었습니다.\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n전체 1,464,559 1,471,513 1,518,040\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n전체 10,415,399 11,379,459 12,479,061\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","Y축 헤더 컬럼 병합하기"],["tmp","Pivot\n[Pivot] Y축 헤더 컬럼 병합하기\n〈\n/page/P00139.xmlPivotheaderYMerge세로축\n〉\n예제와 가이드 함께 보기\nPivot의 Y축 헤더 컬럼 병합 예제입니다.\n속성 \"headerYMerge\"의 설정을 통해 Y축에 출력된 헤더의 값이 동일한 경우 병합할 수 있습니다.\n(기본설정) Y축 헤더 컬럼 병합 미사용\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n전체 전체 1,464,559 1,471,513 1,518,040\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n전체 전체 10,415,399 11,379,459 12,479,061\nY축 헤더 컬럼 병합 사용\nY축의 [국적 구분], [성별]에 출력된 \"전체\" 값이 병합되었습니다.\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n전체 1,464,559 1,471,513 1,518,040\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n전체 10,415,399 11,379,459 12,479,061\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","Y축 헤더 컬럼 이동 기능 설정하기"],["tmp","Pivot\n[Pivot] Y축 헤더 컬럼 이동 기능 설정하기\n〈\n/page/P00141.xmlPivotnoColumnMove\n〉\n예제와 가이드 함께 보기\nPivot의 Y축 헤더 컬럼의 이동 기능 설정 예제입니다.\n속성 \"noColumnMove\"의 설정을 통해 Y축의 헤더 이동 기능을 금지할 수 있습니다.\n이 기능은 마우스 Drag&Drop을 통해 동작됩니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n(기본설정) Y축 헤더 컬럼 이동 가능\nY축의 [도시명], [구분], [성별] 헤더를 마우스 Drag&Drop으로 이동할 수 있습니다.\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n경상남도 내국인 남자 1,521,110 1,562,686 1,634,407\nY축 헤더 컬럼 이동 불가능\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n경상남도 내국인 남자 1,521,110 1,562,686 1,634,407\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","Y축 헤더 컬럼 이동 기능 설정하기"],["tmp","Pivot\n[Pivot] Y축 헤더 컬럼 이동 기능 설정하기\n〈\n/page/P00141.xmlPivotnoColumnMove\n〉\n예제와 가이드 함께 보기\nPivot의 Y축 헤더 컬럼의 이동 기능 설정 예제입니다.\n속성 \"noColumnMove\"의 설정을 통해 Y축의 헤더 이동 기능을 금지할 수 있습니다.\n이 기능은 마우스 Drag&Drop을 통해 동작됩니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n(기본설정) Y축 헤더 컬럼 이동 가능\nY축의 [도시명], [구분], [성별] 헤더를 마우스 Drag&Drop으로 이동할 수 있습니다.\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n경상남도 내국인 남자 1,521,110 1,562,686 1,634,407\nY축 헤더 컬럼 이동 불가능\n인원수\n년도 ▾\n도시명 ▾구분 ▾성별 ▾\n년도 2005 2010 2015\n도시명 구분 성별\n강원도 내국인 남자 733,266 735,075 758,601\n여자 727,504 728,575 741,133\n외국인 남자 2,178 3,324 9,640\n여자 1,611 4,539 8,666\n경기도 내국인 남자 5,192,007 5,599,570 6,039,800\n여자 5,148,999 5,596,483 5,986,629\n외국인 남자 51,776 106,043 269,861\n여자 22,617 77,363 182,771\n경상남도 내국인 남자 1,521,110 1,562,686 1,634,407\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","엑셀 다운로드 시 컬럼 너비 조절 옵션 설정하기"],["tmp","Pivot\n[Pivot] 엑셀 다운로드 시 컬럼 너비 조절 옵션 설정하기\n〈\n/page/P00142.xmlPivotautoSizeColumnpivotExcelDownload\n〉\n예제와 가이드 함께 보기\nPivot의 엑셀 다운로드 시 컬럼 너비 자동 조절 옵션 비교 예제입니다.\npivotExcelDownload 호출 시 옵션 autoSizeColumn에 값을 지정하여 사용할 수 있습니다.\n지정값별 동작은 아래와 같습니다.\n- autoSizeColumn : \"false\" - (기본 설정) 너비 자동 맞춤을 수행하지 않음.\n- autoSizeColumn : \"body\" – 피벗의 Body를 기준으로 너비를 조정.\n- autoSizeColumn : \"header\" – 피벗의 Header를 기준으로 너비를 조정.\n인원수\n도시명 ▾\n구분 ▾성별 ▾\n도시명 엑셀 다운로드 너비 테스트 지역1 지역2\n구분 성별\n내국인 남자 4,694,317 1,234,694,317 763,310\n여자 4,872,879 1,234,872,879 756,004\n외국인 남자 165,218 123,165,218 8,933\n여자 171,898 123,171,898 10,147\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"false\"] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_false.xlsx\",\n \"autoSizeColumn\": \"false\" //기본값\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"body\"] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_body.xlsx\",\n \"autoSizeColumn\": \"body\"\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"header\"] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_header.xlsx\",\n \"autoSizeColumn\": \"header\"\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};"]],[["title","엑셀 다운로드 시 컬럼 너비 조절 옵션 설정하기"],["tmp","Pivot\n[Pivot] 엑셀 다운로드 시 컬럼 너비 조절 옵션 설정하기\n〈\n/page/P00142.xmlPivotautoSizeColumnpivotExcelDownload\n〉\n예제와 가이드 함께 보기\nPivot의 엑셀 다운로드 시 컬럼 너비 자동 조절 옵션 비교 예제입니다.\npivotExcelDownload 호출 시 옵션 autoSizeColumn에 값을 지정하여 사용할 수 있습니다.\n지정값별 동작은 아래와 같습니다.\n- autoSizeColumn : \"false\" - (기본 설정) 너비 자동 맞춤을 수행하지 않음.\n- autoSizeColumn : \"body\" – 피벗의 Body를 기준으로 너비를 조정.\n- autoSizeColumn : \"header\" – 피벗의 Header를 기준으로 너비를 조정.\n인원수\n도시명 ▾\n구분 ▾성별 ▾\n도시명 엑셀 다운로드 너비 테스트 지역1 지역2\n구분 성별\n내국인 남자 4,694,317 1,234,694,317 763,310\n여자 4,872,879 1,234,872,879 756,004\n외국인 남자 165,218 123,165,218 8,933\n여자 171,898 123,171,898 10,147\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"false\"] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_false.xlsx\",\n \"autoSizeColumn\": \"false\" //기본값\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"body\"] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_body.xlsx\",\n \"autoSizeColumn\": \"body\"\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};\n\n/**\n * 버튼 [엑셀 다운로드 - \"autoSizeColumn\" : \"header\"] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var jsnOptions;\n jsnOptions = {\n \"fileName\": \"P00142_pivot_autoSizeColumn_header.xlsx\",\n \"autoSizeColumn\": \"header\"\n };\n piv_ex01.pivotExcelDownload(jsnOptions);\n};"]],[["title","DataList와 바인딩하여 선택 항목을 설정하기"],["tmp","Radio\n[Radio] DataList와 바인딩하여 선택 항목을 설정하기\n〈\n/page/P00242.xmlBindItemSetRadioSpanCountSpanDirectioncolsrows\n〉\n예제와 가이드 함께 보기\nWebSquare스튜디오 내부에서 DataList 작성법과 Radio컴포넌트에 DataList를 연결하여 선택 항목을 설정하는 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- appearance : (속성)선택항목 표현방식\n- setNodeSet : (함수)Radio컴포넌트에 DataList 바인딩\n- addItem : (함수)선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.\nRadio컴포넌트에 DataList 연결하기\nRadio컴포넌트에 만들어 둔 DataList가 연결된 것을 확인한다.\n※ WebSquare스튜디오 조작으로 DataList생성 및 Radio컴포넌트와 DataList의 연결하는 법은 가이드를 같이 참고해주시기를 바랍니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\nsetNodeSet 함수를 이용한 DataList와 Radio컴포넌트 연결하기\n아래의 버튼을 눌러 준비해둔 DataList를 Radio컴포넌트에 연결합니다.\n하드코딩으로 연결하기\n소스에 정보를 추가하여 연결할 수 있습니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\naddItem 함수를 이용한 목록 추가하기\n아래의 버튼을 클릭 시 Radio컴포넌트 표시항목에 'NewYork'이 추가됩니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [DataList를 Radio컴포넌트에 연결하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function(e) {\n // Radio 'rad_exam2'에 DataList 'dlt_dataList1'을 연결합니다.\n rad_exam2.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\")\n};\n\n/**\n * 버튼 [목록 추가하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // Radio 'rad_exam4'의 표시목록을 추가합니다.\n rad_exam4.addItem(\"NY\", \"NewYork\", \"5\");\n};"]],[["title","사용자가 Radio에서 선택한 데이터를 검증하기"],["tmp","Radio\n[Radio] 사용자가 Radio에서 선택한 데이터를 검증하기\n〈\n/page/P00246.xmlRadiodisplaymessageinvalidMessageFuncinvalidmessagevalidate()\n〉\n예제와 가이드 함께 보기\n사용자가 Radio컴포넌트에서 선택한 데이터를 검증하는 것에 관한 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- mandatory : (속성)mandatory=\"true\"인 경우, validate(); 함수는 검증을 수행하여 결과를 true/false로 반환\n- displaymessage : (속성)검증 실패 시 Engine 내부에 정의된 메시지 표시\n- invalidMessage : (속성)검증 결과가 실패일 경우, 속성에 지정한 값을 메시지 표시\n- invalidMessageFunc : (속성)검증 결과가 실패일 경우, 사용자 지정 함수 반환\n- validate : (함수)컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행\n체크 여부 판단하기\nRadio컴포넌트 체크 후 아래의 버튼을 클릭 시 true값을 반환합니다. 반환값은 메시지 창에 표시됩니다.\n※ Radio컴포넌트를 체크하지 않고 버튼을 누를 시 false값을 메시지 창에 표시합니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n지정된 메시지 표시하기\nRadio컴포넌트를 체크하지 않고 아래의 버튼을 클릭 시 지정된 메시지 '필수 입력 항목입니다'가 표시됩니다.\n※ Radio컴포넌트를 체크 후 버튼을 누를 시 반환 메시지가 없습니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n사용자 설정 메시지 표시하기\nRadio컴포넌트를 체크하지 않고 아래의 버튼을 클릭 시 사용자가 설정한 메시지가 표시됩니다.\n※ Radio컴포넌트를 체크 후 버튼을 누를 시 반환 메시지가 없습니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n사용자 지정 함수로 설정한 메시지 표시하기\nRadio컴포넌트를 체크하지 않고 아래의 버튼을 클릭 시 사용자 지정 함수로 설정한 메시지가 표시됩니다.\n※ Radio컴포넌트를 체크 후 버튼을 누를 시 반환 메시지가 없습니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [ 체크 여부 판단하기 ] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // Radio 'rad_exam1'의 체크 여부를 검증합니다.\n let message = rad_exam1.validate();\n alert(message);\n};\n\n/**\n * 버튼 [ 지정된 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // Radio 'rad_exam2'의 체크 여부를 검증합니다.\n rad_exam2.validate();\n};\n\n/**\n * 버튼 [ 설정한 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n // Radio 'rad_exam3'의 체크 여부를 검증합니다.\n rad_exam3.validate();\n};\n\n/**\n * 버튼 [ 사용자 지정 함수로 설정한 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex4_onclick = function (e) {\n // Radio 'rad_exam4'의 체크 여부를 검증합니다.\n rad_exam4.validate();\n};\n\n/**\n * 영역 [사용자 지정 함수로 설정한 메시지 표시하기]의\n * Radio컴포넌트 [rad_exam4]의 invalidMessageFunc함수\n */\nscwin.fn_msg = function () {\n var invalidType = this.getType();\n if (invalidType == \"mandatory\") {\n message = \"사용자 지정 함수로 설정된 메시지입니다.\";\n }\n\n return message;\n}"]],[["title","특정 선택 항목들을 선택 항목 목록에 표시하지 않고 숨기기"],["tmp","Radio\n[Radio] 특정 선택 항목들을 선택 항목 목록에 표시하지 않고 숨기기\n〈\n/page/P00247.xmlRadiosetVisibleColumn()visibleColumnvisibleColumnFalseValue\n〉\n예제와 가이드 함께 보기\nRadio컴포넌트에서 DataList와 연결하여 선택 항목을 표시할 경우,\n연결된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨기는 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- visibleColumn : (속성)선택 항목 목록에서 특정 항목을 감추는 기능\n- visibleColumnFalseValue : (속성)visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값\n- setVisibleColumn : (함수)visibleColumn 속성을 동적으로 설정\n특정 항목 감추기 - 속성\nRadio컴포넌트의 visibleColumn 속성에 DataList의 id인 \"Type\", visibleColumnFalseValue 속성에 실재 id의 값인 \"Asia\"를 설정했습니다. 따라서 Type이 Asia인 데이터를 제외한 항목만을 표시하는 것을 확인할 수 있습니다.\n[속성 적용 전]\nSeoul\nParis\nLondon\nBeijing\nTokyo\n[속성 적용 후]\nParis\nLondon\n특정 항목 감추기 - 함수\n아래 버튼을 클릭 시 setVisibleColumn 함수로 인해 Type이 Europe인 항목을 제외하고 표시하는 것을 확인할 수 있습니다.\nSeoul\nParis\nLondon\nBeijing\nTokyo\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [ 특정 항목 감추기 ] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // Radio 'rad_exam3'와 연결되어 있는 DataList 'dlt_dataList1'의 Type이 Europe인 데이터는 제외하고 표시하기\n rad_exam3.setVisibleColumn(\"Type\", \"Europe\");\n};"]],[["title","특정 항목 비활성화 하기"],["tmp","Radio\n[Radio] 특정 항목 비활성화 하기\n〈\n/page/P00143.xmlColumnFalseValueRadioenableColumnenable\n〉\n예제와 가이드 함께 보기\nRadio의 항목을 비활성화 하는 예제입니다.\nDataList와 Radio의 항목을 연결하여 설정할 수 있습니다.\n비활성화된 항목은 사용자의 선택이 불가합니다.\n(기본) 모든 항목 활성화\nApple\nPear\nGrapes\nWatermelon\nPeach\n비활성화 항목 지정 - 속성\nApple\nPear\nGrapes\nWatermelon\nPeach\n비활성화 항목 지정 - 스크립트\nApple\nPear\nGrapes\nWatermelon\nPeach\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * 비활성화 항목 지정 - 스크립트\n * 버튼 [항목 비활성화] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //항목 비활성화 컬럼 및 비활성화값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 비활성화합니다.\n rad_exam3.setEnableColumn(\"useYN\", \"N\");\n};"]],[["title","특정 항목 표시하지 않기"],["tmp","Radio\n[Radio] 특정 항목 표시하지 않기\n〈\n/page/P00144.xmlRadiovisibleColMaxvisibleRowNum\n〉\n예제와 가이드 함께 보기\nRadio의 특정 항목을 표시하지 않는 예제입니다.\nDataList와 Radio의 항목을 연결하여 설정할 수 있습니다.\n(기본) 모든 항목 표시하기\nApple\nPear\nGrapes\nWatermelon\nPeach\n항목 숨김 지정 - 속성\nApple\nGrapes\nPeach\n항목 숨김 지정 - 스크립트\nApple\nPear\nGrapes\nWatermelon\nPeach\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * 항목 숨김 지정 - 스크립트 - 스크립트\n * 버튼 [항목 숨기기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //Radio [rad_exam3]의 숨길 항목의 컬럼과 조건값 설정\n //항목 숨기기 컬럼 및 숨기기 값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 항목을 숨깁니다.\n rad_exam3.setVisibleColumn(\"useYN\", \"N\");\n};"]],[["title","표시 항목의 열과 행 바꾸기"],["tmp","Radio\n[Radio] 표시 항목의 열과 행 바꾸기\n〈\n/page/P00248.xmlRadiocolsrows\n〉\n예제와 가이드 함께 보기\nRadio컴포넌트의 표시 항목의 열과 행을 변경하는 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- cols : 선택 항목을 표시할 열의 수\n- rows : 선택 항목을 표시할 행의 수\n열 바꾸기\nRadio컴포넌트 속성 cols에 표시할 열의 수 만큼 값을 설정합니다.\n※ 아래의 경우는 cols = \"3\" 을 설정해두었습니다.\nSeoul Paris London\nBeijing Tokyo\n행 바꾸기\nRadio컴포넌트 속성 rows에 표시할 행의 수 만큼 값을 설정합니다.\n※ 아래의 경우는 rows = \"3\" 을 설정해두었습니다.\nSeoul Paris\nLondon Beijing\nTokyo\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","DataList와 바인딩하여 선택 항목을 설정하기"],["tmp","Selectbox\n[SelectBox] DataList와 바인딩하여 선택 항목을 설정하기\n〈\n/page/P00252.xmlBindItemSetSelectbox\n〉\n예제와 가이드 함께 보기\nWebSquare 스튜디오에서 DataList 작성법과 SelectBox컴포넌트에 DataList를 연결하여 선택 항목을 설정하는 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- appearance : (속성)선택항목 표현방식\n- setNodeSet : (함수)SelectBox컴포넌트에 DataList 바인딩\n- addItem : (함수)선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.\nSelectBox컴포넌트에 DataList 연결하기\nSelectBox컴포넌트에 만들어 둔 DataList가 연결된 것을 확인한다.\n※ WebSquare툴 내부 조작으로 DataList생성 및 SelectBox컴포넌트와 DataList의 연결하는 법은 가이드를 같이 참고해주시기를 바랍니다.\nSeoul\nsetNodeSet 함수를 이용한 DataList와 SelectBox컴포넌트 연결하기\n아래의 버튼을 눌러 준비해둔 DataList를 SelectBox컴포넌트에 연결합니다.\n하드코딩으로 연결하기\n소스에 정보를 추가하여 연결할 수 있습니다.\nSeoul\naddItem 함수를 이용한 목록 추가하기\n아래의 버튼을 클릭 시 SelectBox컴포넌트 표시항목에 'NewYork'이 추가됩니다.\nSeoul\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [DataList를 SelectBox컴포넌트에 연결하기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // SelectBox 'sbx_exam2'에 DataList 'dlt_dataList1'을 연결합니다.\n sbx_exam2.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\");\n};\n\n/**\n * 버튼 [목록 추가하기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // SelectBox 'sbx_exam4'의 표시목록을 추가합니다.\n sbx_exam4.addItem(\"NY\", \"NewYork\", \"5\");\n};"]],[["title","label, value, delimiter를 이용하여 선택 항목을 표 시하는 방법을 설정하기"],["tmp","Selectbox\n[SelectBox] label, value, delimiter를 이용하여 선택 항목을 표 시하는 방법을 설정하기\n〈\n/page/P00255.xmlSelectboxdelimiterdisplayMode\n〉\n예제와 가이드 함께 보기\nSelectBox컴포넌트의 선택 항목을 표시하는 방법에 관한 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- displayMode : 선택 항목의 표현 방법.\n- delimeter : 선택 항목 목록에 value와 label을 함께 표시할 때 사용하는 구분자.\nlabel 형태로 표시하기\nSelectBox컴포넌트와 바인딩되어 있는 DataList의 label 값으로 항목을 표시합니다.\nSeoul\nvalue 형태로 표시하기\nSelectBox컴포넌트와 바인딩되어 있는 DataList의 value 값으로 항목을 표시합니다.\nSE\nlabel 구분자 value 형태로 표시하기\nSelectBox컴포넌트와 바인딩되어 있는 DataList의 label과 value 값을 label (구분자) value 형태로 표시합니다.\nSeoul - SE\nvalue 구분자 label 형태로 표시하기\nSelectBox컴포넌트와 바인딩되어 있는 DataList의 label과 value 값을 value (구분자) label 형태로 표시합니다.\nSE $$$ Seoul\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","setValue() 함수로 설정하는 값이 선택 항목 목록에 없는 경우, 처리 방법을 설정하기"],["tmp","Selectbox\n[SelectBox] setValue() 함수로 설정하는 값이 선택 항목 목록에 없는 경우, 처리 방법을 설정하기\n〈\n/page/P00259.xmlSelectboxemptyItemvalueNotInList\n〉\n예제와 가이드 함께 보기\nsetValue() 함수로 설정하는 값이 선택 항목 목록 에 없는 경우, 처리 방법을 설정하는 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- valueNotInList : (속성)설정된 DataList의 목록에 없는 값을 set하는 경우에 대한 처리방식 설정.\n- emptyItem : (속성)선택 항목에 없는 value나 index가 동적으로 설정하는 경우 빈 값으로 label과 value를 설정.\n- setValue : (함수)파라메터로 넘어온 값에 해당하는 선택 항목을 선택.\n- getSelectedIndex : (함수)선택된 항목의 인덱스를 반환.\n선택 항목 목록에 없는 값은 무시하기\nsetValue함수에서 설정하는 값(Paris)이 SelectBox컴포넌트의 선택 목록에 없을 경우, 값을 무시합니다.\nSeoul\n목록의 첫번째 항목을 표시하기\nsetValue함수에서 설정하는 값(New Yokr)이 SelectBox컴포넌트의 선택 목록에 없을 경우, 가장 첫번째 항목을 표시합니다.\nSeoul\n선택 항목 목록에 없는 값을 유지하기\nsetValue함수에서 설정하는 값(London)이 SelectBox컴포넌트의 선택 목록에 없을 경우, 설정하는 값을 유지합니다.\nSeoul\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [ 선택 목록에 \"Paris\" 설정하기 ] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // SelectBox 'sbx_exam1'에 \"Paris\"라는 데이터를 세팅합니다.\n sbx_exam1.setValue(\"Paris\");\n};\n\n/**\n * 버튼 [ 선택 목록에 \"New York\" 설정하기 ] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // SelectBox 'sbx_exam2'에 \"New York\"라는 데이터를 세팅합니다.\n sbx_exam2.setValue(\"New York\");\n};\n\n/**\n * 버튼 [ 선택 목록에 \"London\" 설정하기 ] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n // SelectBox 'sbx_exam3'에 \"London\"라는 데이터를 세팅합니다.\n sbx_exam3.setValue(\"London\");\n\n // SelectBox 'sbx_exam3'에 표시되고 있는 항목의 인덱스를 반환합니다.\n let index = sbx_exam3.getSelectedIndex();\n alert(\"인덱스 값은 : \" + index + \" 입니다.\");\n};"]],[["title","계층 구조의 데이터를 선택 항목으로 표시하기"],["tmp","Selectbox\n[SelectBox] 계층 구조의 데이터를 선택 항목으로 표시하기\n〈\n/page/P00253.xmlSelectboxdepthColumndepthColumnHeightdepthColumnWidth\n〉\n예제와 가이드 함께 보기\nSelectBox컴포넌트를 계층 구조의 데이터를 선택 항목으로 표시하는 방법에 관한 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- depthColumn : 목록을 계층 구조로 보여줄 때 사용하는 속성.\n- depthColumnHeight : depthColumn 기능 사용 시 목록의 높이 값.\n- depthColumnWidth : depthColumn 기능 사용 시 목록의 너비 값.\n계층 구조로 표시하기\nSelectBox컴포넌트 클릭하여 데이터들이 계층구조로 표시되어있는 것을 확인한다.\nAsia\n계층 구조의 너비 높이 지정하기\nSelectBox컴포넌트 클릭하여 계층 구조의 높이 너비가 바뀐 것을 확인합니다.\nAsia\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","목록에서 항목이 선택되었을 때의 이벤트 핸들러 등록하기"],["tmp","Selectbox\n[SelectBox] 목록에서 항목이 선택되었을 때의 이벤트 핸들러 등록하기\n〈\n/page/P00149.xmlSelectboxonselected\n〉\n예제와 가이드 함께 보기\n컴포넌트의 이벤트 onselected 예제입니다.\n키보드 방향키를 이용해 항목을 선택하거나, 마우스 클릭 또는 스크린 터치를 이용해 항목을 선택했을 때 발생합니다.\n로그 확인 영역과 브라우저 개발자 도구의 콘솔에 로그가 출력됩니다.\napple\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n\n/**\n * sbx_exam1 컴포넌트의 이벤트 onselected 핸들러\n */\nscwin.sbx_exam_onselected = function (info) {\n var strLog;\n\n var _newSelectedIndex = info.newSelectedIndex; //선택된 항목의 index\n var _newValue = info.newValue; //선택된 값\n var _oldSelectedIndex = info.oldSelectedIndex; //이전에 선택된 항목의 index\n var _oldValue = info.oldValue; //이전 값\n\n //이벤트 확인용 로그 출력\n console.log(\"scwin.sbx_exam_onselected >> \", info);\n\n $c.frame.printExampleLog(\"scwin.sbx_exam_onselected\", txa_log);\n $c.frame.printExampleLog(\"info : \\n\" + JSON.stringify(info, null, \"\\t\"), txa_log, false);\n strLog = \"info.newSelectedIndex : \" + _newSelectedIndex + \"\\n\";\n strLog += \"info.newValue : \" + _newValue + \"\\n\";\n strLog += \"info.oldSelectedIndex : \" + _oldSelectedIndex + \"\\n\";\n strLog += \"info.oldValue : \" + _oldValue;\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n //로직 구성\n};\n\n\n/**\n * 로그 출력용 함수\n */\nscwin.printLog = function (argStr) {\n var strLog;\n strLog = txa_log.getValue();\n txa_log.setValue(strLog + \"\\n\" + argStr);\n};\n\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n //textarea value를 빈문자열로 할당.\n txa_log.setValue(\"\");\n};"]],[["title","사용자가 SelectBox에 입력한 데이터를 검증하기"],["tmp","Selectbox\n[SelectBox] 사용자가 SelectBox에 입력한 데이터를 검증하기\n〈\n/page/P00258.xmlSelectboxdisplaymessageinvalidMessageFuncinvalidmessagevalidate()\n〉\n예제와 가이드 함께 보기\n사용자가 SelectBox컴포넌트에서 선택한 데이터를 검증하는 것에 관한 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- mandatory : (속성)mandatory=\"true\"인 경우, validate(); 함수는 검증을 수행하여 결과를 true/false로 반환\n- displaymessage : (속성)검증 실패 시 Engine 내부에 정의된 메시지 표시\n- invalidMessage : (속성)검증 결과가 실패일 경우, 속성에 지정한 값을 메시지 표시\n- invalidMessageFunc : (속성)검증 결과가 실패일 경우, 사용자 지정 함수 반환\n- validate : (함수)컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행\n선택 여부 판단하기\nSelectBox컴포넌트의 목록이 선택된 것을 확인할 수 있습니다.\nSelect a city.\n지정된 메시지 표시하기\nSelectBox컴포넌트를 선택하지 않고 아래의 버튼을 클릭 시 지정된 메시지 '필수 입력 항목입니다'가 표시됩니다.\nSelect a city.\n사용자 설정 메시지 표시하기\nSelectBox컴포넌트를 선택하지 않고 아래의 버튼을 클릭 시 사용자가 설정한 메시지가 표시됩니다.\nSelect a city.\n사용자 지정 함수로 설정한 메시지 표시하기\nSelectBox컴포넌트를 선택하지 않고 아래의 버튼을 클릭 시 사용자 지정 함수로 설정한 메시지가 표시됩니다.\nSelect a city.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [ 선택 여부 판단하기 ] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // SelectBox 'sbx_exam1'의 체크 여부를 검증합니다.\n let message = sbx_exam1.validate();\n alert(message);\n};\n\n/**\n * 버튼 [ 지정된 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n // SelectBox 'sbx_exam2'의 체크 여부를 검증합니다.\n sbx_exam2.validate();\n};\n\n/**\n * 버튼 [ 사용자 설정 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n // SelectBox 'sbx_exam3'의 체크 여부를 검증합니다.\n sbx_exam3.validate();\n};\n\n/**\n * 버튼 [ 사용자 지정 함수로 설정한 메시지 표시하기 ] 클릭 시\n */\nscwin.btn_ex4_onclick = function (e) {\n sbx_exam4.validate();\n};\n\n/**\n * 영역 [ 사용자 지정 함수로 설정한 메시지 표시하기 ]의\n * SelectBox컴포넌트 [sbx_exam4]의 invalidMessageFunc함수\n */\nscwin.fn_msg = function () {\n let invalidType = this.getType(); // invalid type\n switch (invalidType) {\n case \"mandatory\":\n msg = \"Select your favorit city.\";\n break;\n default:\n msg = \"Enter again.\";\n break;\n }\n alert(msg);\n}"]],[["title","선택된 항목에 대한 툴팁, 목록 상에서 툴팁을 표시하기"],["tmp","Selectbox\n[SelectBox] 선택된 항목에 대한 툴팁, 목록 상에서 툴팁을 표시하기\n〈\n/page/P00257.xmlSelectboxitemTooltipDisplaytooltipDisplay\n〉\n예제와 가이드 함께 보기\nSelectBox 컴포넌트의 선택 목록 위에서 마우스 스크롤링 시 선택 목록 이 스크롤되는 것을 방지하는 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- tooltipDisplay : 사용자가 선택한 값에 대한 툴팁 표시 여부.\n- itemTooltipDisplay : 아이템 목록에 대한 툴팁 표시 여부.\n선택 항목 툴팁 표시하기\nSelectBox컴포넌트의 선택 항목 위에 툴팁이 표시된 것을 확인합니다.\nSeoul, the largest city in Korea\n목록 위에 툴팁이 표시하기\nSelectBox컴포넌트의 목록 위에 툴팁이 표시된 것을 확인합니다.\nSeoul, the largest city in Korea\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n let jsonData = [\n { \"Code\": \"SEL\", \"City\": \"Seoul, the largest city in Korea\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"BSN\", \"City\": \"Busan, the second largest city in Korea\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"ICN\", \"City\": \"Incheon, the gateway to Korea\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"DJN\", \"City\": \"Daejeon, the government city of Korea\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"DGU\", \"City\": \"Jeju, the largest island in Korea\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"OTW\", \"City\": \"Ottawa in Canada\", \"Country\": \"Canada\", \"Type\": \"Overseas\" },\n { \"Code\": \"LDN\", \"City\": \"Toronto in Canada\", \"Country\": \"Canada\", \"Type\": \"Overseas\" },\n { \"Code\": \"BRN\", \"City\": \"Berlin in Germany\", \"Country\": \"Germany\", \"Type\": \"Overseas\" },\n { \"Code\": \"BJG\", \"City\": \"Beijing in China\", \"Country\": \"China\", \"Type\": \"Overseas\" },\n { \"Code\": \"LDN\", \"City\": \"London in GB\", \"Country\": \"UK\", \"Type\": \"Overseas\" },\n ];\n // DataList 'dlt_dataList1'에 json데이터 'jsonData'를 set합니다.\n dlt_dataList1.setJSON(jsonData);\n\n // SelectBox 'sbx_exam1'에 DataList 'dlt_dataList1'을 설정합니다.\n sbx_exam1.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\");\n\n // SelectBox 'sbx_exam2'에 DataList 'dlt_dataList1'을 설정합니다.\n sbx_exam2.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\");\n};"]],[["title","특정 선택 항목들을 비활성화하기"],["tmp","Selectbox\n[SelectBox] 특정 선택 항목들을 비활성화하기\n〈\n/page/P00256.xmlSelectboxenableColumnenableColumnFalseValue\n〉\n예제와 가이드 함께 보기\nenableColum 및 enableColumnFalseValue 속성을 사용하여 선택 목록의 특정 항목을 비활성화하는 예제입니다.\n\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- enableColumn : 선택 항목 목록에서 특정 항목을 disable 처리하는 기능.\n- enableColumnFalseValue : enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값.\n특정 항목 비활성화 적용 전\nSelectBox컴포넌트에 선택 목록이 비활성화 없이 표시된 것을 확인한다.\nSeoul\n특정 항목 비활성화 적용 후\nSelectBox컴포넌트에 선택 목록이 비활성화 없이 표시된 것을 확인한다.\nSeoul\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n let jsonData = [\n { \"Code\": \"SEL\", \"City\": \"Seoul\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"BSN\", \"City\": \"Busan\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"ICN\", \"City\": \"Incheon\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"DJN\", \"City\": \"Daejeon\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"DGU\", \"City\": \"Daegu\", \"Country\": \"Korea\", \"Type\": \"Domestic\" },\n { \"Code\": \"OTW\", \"City\": \"Ottawa\", \"Country\": \"Canada\", \"Type\": \"Overseas\" },\n { \"Code\": \"LDN\", \"City\": \"Toronto\", \"Country\": \"Canada\", \"Type\": \"Overseas\" },\n { \"Code\": \"BRN\", \"City\": \"Berlin\", \"Country\": \"Germany\", \"Type\": \"Overseas\" },\n { \"Code\": \"BJG\", \"City\": \"Beijing\", \"Country\": \"China\", \"Type\": \"Overseas\" },\n { \"Code\": \"LDN\", \"City\": \"London\", \"Country\": \"UK\", \"Type\": \"Overseas\" },\n ];\n\n // DataList 'dlt_dataList1'에 json데이터 'jsonData'를 set합니다.\n dlt_dataList1.setJSON(jsonData);\n\n // SelectBox 'sbx_exam1'에 DataList 'dlt_dataList1'을 바인딩합니다.\n sbx_exam1.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\");\n\n // SelectBox 'sbx_exam2'에 DataList 'dlt_dataList1'을 바인딩합니다.\n sbx_exam2.setNodeSet(\"data:dlt_dataList1\", \"City\", \"Code\");\n};"]],[["title","특정 선택 항목들을 선택 항목 목록에 표시하지 않고 숨기기"],["tmp","Selectbox\n[SelectBox] 특정 선택 항목들을 선택 항목 목록에 표시하지 않고 숨기기\n〈\n/page/P00260.xmlSelectboxsetVisibleColumn()visibleColumnvisibleColumnFalseValue\n〉\n예제와 가이드 함께 보기\nRadio컴포넌트에서 DataList와 연결하여 선택 항목을 표시할 경우,\n연결된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨기는 예제입니다.\n\n이 기능은 아래의 속성과 함수로 사용할 수 있습니다.\n- visibleColumn : (속성)선택 항목 목록에서 특정 항목을 감추는 기능\n- visibleColumnFalseValue : (속성)visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값\n- setVisibleColumn : (함수)visibleColumn 속성을 동적으로 설정\n특정 항목 감추기 - 속성\nSelectBox컴포넌트의 visibleColumn 속성에 DataList의 id인 \"Type\", visibleColumnFalseValue 속성에 실재 id의 값인 \"Europe\"를 설정했습니다. 따라서 Type이 Europe인 데이터를 제외한 항목만을 표시하는 것을 확인할 수 있습니다.\n[속성 적용 전]\nSeoul\n[속성 적용 후]\nSeoul\n특정 항목 감추기 - 함수\n아래 버튼을 클릭 시 setVisibleColumn 함수로 인해 Type이 Europe인 항목을 제외하고 표시하는 것을 확인할 수 있습니다.\nSeoul\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [ 특정 항목 감추기 ] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n // Radio 'sbx_exam3'와 연결되어 있는 DataList 'dlt_dataList1'의 Type이 Europe인 데이터는 제외하고 표시하기\n sbx_exam3.setVisibleColumn(\"Type\", \"Europe\");\n};"]],[["title","특정 키들의 동작(기능) 미사용 설정하기"],["tmp","Selectbox\n[SelectBox] 특정 키들의 동작(기능) 미사용 설정하기\n〈\n/page/P00151.xmlSelectboxpreventKeyList\n〉\n예제와 가이드 함께 보기\n컴포넌트에 포커스 되어있고 키보드 키가 입력되었을 때\n컴포넌트에서 제공하는 기본 기능을 사용하지 않는 예제입니다.\n이 기능은 키를 이용한 기능을 직접 구현할 때 사용되는 설정입니다.\nInput 컴포넌트에서 Tab 키로 Selectbox에 포커스를 이동한 뒤 Enter 키를 입력하여 동작을 비교합니다.\n(기본) 키 기능 사용\nSelectbox에 포커스가 된 상태에서 Enter 키 입력 시 목록이 확장됩니다.\napple\n엔터(Enter)키 기능 사용 안함\nSelectbox에 포커스가 된 상태에서 Enter 키 입력 시 목록이 확장되지 않습니다.\napple\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","특정 항목 비활성화 하기"],["tmp","Selectbox\n[SelectBox] 특정 항목 비활성화 하기\n〈\n/page/P00147.xmlColumnFalseValueSelectboxenableColumnenable\n〉\n예제와 가이드 함께 보기\nSelectbox의 항목을 비활성화 하는 예제입니다.\nDataList와 Selectbox의 항목을 연결하여 설정할 수 있습니다.\n비활성화된 항목은 사용자의 선택이 불가합니다.\n(기본) 모든 항목 활성화\nApple\n비활성화 항목 지정 - 속성\nApple\n비활성화 항목 지정 - 스크립트\nApple\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * 비활성화 항목 지정 - 스크립트\n * 버튼 [항목 비활성화] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //항목 비활성화 컬럼 및 비활성화값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 비활성화합니다.\n sbx_exam3.setEnableColumn(\"useYN\", \"N\");\n};"]],[["title","특정 항목 표시하지 않기"],["tmp","Selectbox\n[SelectBox] 특정 항목 표시하지 않기\n〈\n/page/P00150.xmlColumnFalseValueSelectboxenableColumnenable\n〉\n예제와 가이드 함께 보기\nSelectbox의 항목을 표시하지 않는 예제입니다.\nDataList와 Selectbox의 항목을 연결하여 설정할 수 있습니다.\n(기본) 모든 항목 표시\nApple\n항목 숨김 지정 - 속성\nApple\n항목 숨김 지정 - 스크립트\nApple\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //DataList dlt_exam_code에 데이터 할당\n dlt_exam_code.setJSON([\n { \"label\": \"Apple\", \"code\": \"01\", \"useYN\": \"Y\" },\n { \"label\": \"Pear\", \"code\": \"02\", \"useYN\": \"N\" },\n { \"label\": \"Grapes\", \"code\": \"03\", \"useYN\": \"Y\" },\n { \"label\": \"Watermelon\", \"code\": \"04\", \"useYN\": \"N\" },\n { \"label\": \"Peach\", \"code\": \"05\", \"useYN\": \"Y\" }\n ]);\n};\n\n\n/**\n * 항목 숨김 지정 - 스크립트\n * 버튼 [항목 숨기기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //Selectbox [sbx_exam3]의 숨길 항목의 컬럼과 조건값 설정\n //항목 숨기기 컬럼 및 숨기기 값 설정 - 목록과 연결된 DataList의 \"useYN\" 컬럼의 값이 \"N\"인 경우 항목을 숨깁니다.\n sbx_exam3.setVisibleColumn(\"useYN\", \"N\");\n};"]],[["title","항목의 가장 긴 문자열에 맞춰 너비 자동 조절 하기"],["tmp","Selectbox\n[SelectBox] 항목의 가장 긴 문자열에 맞춰 너비 자동 조절 하기\n〈\n/page/P00148.xmlSelectboxlabelWidthAuto\n〉\n예제와 가이드 함께 보기\nSelectbox의 항목의 가장 긴 문자열에 맞춰 컴포넌트의 너비가 자동 조절되는 설정 예제입니다.\n속성 labelWidthAuto 지정을 통해 사용할 수 있습니다.\n(기본 설정) 고정 너비\n사과\n너비 자동 조절 설정\n사과\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","데이터 타입 설정하기"],["tmp","Spinner\n[Spinner] 데이터 타입 설정하기\n〈\n/page/P00152.xmlSpinnerdataTypedateIncrementType\n〉\n예제와 가이드 함께 보기\n컴포넌트의 속성 dataType의 설정 값에 따른 비교 예제입니다.\n컴포넌트 우측에 구성된 버튼을 클릭하여 데이터 증감을 확인합니다.\n(기본) dataType=\"number\"\ndataType=\"date\"\ndateType=\"time\"\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //화면 초기화\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strDate;\n\n strDate = $p.getCurrentServerDate(\"yyyy\"); //서버에서 올해 문자열 반환받기\n\n spi_exam1.setValue(\"0\");\n spi_exam2.setValue(strDate + \"1130\"); //올해 11월 30일 할당\n spi_exam3.setValue(\"1159\"); //11시 59분 할당\n};"]],[["title","데이터 타입이 날짜(Date)일 때 잘못된 날짜가 입력되었을 때 기본 경고창 사용하지 않기"],["tmp","Spinner\n[Spinner] 데이터 타입이 날짜(Date)일 때 잘못된 날짜가 입력되었을 때 기본 경고창 사용하지 않기\n〈\n/page/P00156.xmlSpinneruseAlert\n〉\n예제와 가이드 함께 보기\n컴포넌트의 속성 useAlert 설정 예제입니다.\n속성 useAlert은 속성 dataType이 \"date\"로 지정되고, 사용자가 입력 영역(input)에 직접 값을 입력했을 때 동작하는 기능입니다.\n사용자가 입력한 값이 유효한 날짜가 아닌 경우 경고 포커스가 벗어난는 시점에 메시지(alert)가 출력됩니다.\n입력 영역(Input)에 \"20999999\"를 입력하고 컴포넌트에서 포커스 제거했을 때 설정별 동작을 비교합니다.\n(기본) 경고창 사용\n경고창 사용 안함\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","데이터 타입이 날짜(Date)일 때 증감 단위 설정하기"],["tmp","Spinner\n[Spinner] 데이터 타입이 날짜(Date)일 때 증감 단위 설정하기\n〈\n/page/P00153.xmlSpinnerdataTypedateIncrementTypedayhourminutemonthyear\n〉\n예제와 가이드 함께 보기\n컴포넌트의 속성 dataType이 \"date\"로 지정되었을 때,\n속성 dateIncrementType의 설정 값에 따른 기능 비교 예제입니다.\n속성 dateIncrementType는 날짜의 증감 단위를 지정할 수 있으며, dataType이 \"date\" 또는 \"time\"으로 지정된 경우 동작합니다.\n지정할 수 있는 유형은 \"year\", \"month\", \"day\", \"hour\", \"minute\" 입니다.\n증감 기능은 컴포넌트에 포함된 버튼을 클릭하거나 입력 영역(Input)에서 키보드의 방향키 \"UP\", \"DOWN\"을 눌러 사용할 수 있습니다.\ndateIncrementType=\"year\"\n연 단위로 증감됩니다.\ndateIncrementType=\"month\"\n월 단위로 증감됩니다.\n(기본) dateIncrementType=\"day\"\n일 단위로 증감됩니다.\ndateIncrementType=\"hour\"\n시 단위로 증감됩니다.\ndateIncrementType=\"minute\"\n분 단위로 증감됩니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //화면 초기화\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strDate;\n\n strDate = $p.getCurrentServerDate(\"yyyy\"); //올해 반환 받기\n\n //컴포넌트에 초기값 할당\n spi_exam1.setValue(strDate); //dataType=\"date\" dateIncrementType=\"year\"\n spi_exam2.setValue(strDate + \"11\"); //dataType=\"date\" dateIncrementType=\"month\"\n spi_exam3.setValue(strDate + \"1130\"); //dataType=\"date\" dateIncrementType=\"day\"\n spi_exam4.setValue(strDate + \"113012\"); //dataType=\"date\" dateIncrementType=\"hour\"\n spi_exam5.setValue(strDate + \"11301259\"); //dataType=\"date\" dateIncrementType=\"minute\"\n};"]],[["title","데이터 타입이 시간(Time)일 때 증감 단위 설정하기"],["tmp","Spinner\n[Spinner] 데이터 타입이 시간(Time)일 때 증감 단위 설정하기\n〈\n/page/P00154.xmlSpinnerdataTypedateIncrementTypehourminutesecond\n〉\n예제와 가이드 함께 보기\n컴포넌트의 속성 dataType이 \"time\"로 지정되었을 때,\n속성 dateIncrementType의 설정 값에 따른 기능 비교 예제입니다.\n속성 dateIncrementType는 날짜의 증감 단위를 지정할 수 있으며, dataType이 \"time\" 또는 \"date\"로 지정된 경우 동작합니다.\n지정할 수 있는 유형은 \"hour\", \"minute\", \"second\" 입니다.\n증감 기능은 컴포넌트에 포함된 버튼을 클릭하거나 입력 영역(Input)에서 키보드의 방향키 \"UP\", \"DOWN\"을 눌러 사용할 수 있습니다.\ndateIncrementType=\"hour\"\n시 단위로 증감됩니다.\ndateIncrementType=\"minute\"\n분 단위로 증감됩니다.\ndateIncrementType=\"second\"\n초 단위로 증감됩니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n //화면 초기화\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n //컴포넌트에 초기값 할당\n spi_exam1.setValue(\"1159\"); //dataType=\"time\" dateIncrementType=\"hour\"\n spi_exam2.setValue(\"1159\"); //dataType=\"time\" dateIncrementType=\"minute\"\n spi_exam3.setValue(\"115959\"); //dataType=\"time\" dateIncrementType=\"second\"\n};"]],[["title","초기값을 속성으로 지정하기"],["tmp",""]],[["title","frameModal을 활성화하였을 때의 팝업 동작 비교하기"],["tmp","TabControl\n[TabControl] frameModal을 활성화하였을 때의 팝업 동작 비교하기\n〈\n/page/P00157.xmlTabControlframeModalframeModepopupwframe\n〉\n예제와 가이드 함께 보기\nTabControl의 속성 frameModal을 활성화하였을 때 팝업의 동작을 비교하는 예제입니다.\nframeModal을 활성화하면 팝업이 Window 내부에서만 이동이 가능하게 되며,\n팝업에서 팝업을 호출한 경우 상위 팝업을 닫으면 하위 팝업이 함께 닫힙니다.\n이 기능은 TabControl의 속성 frameMode가 \"wframe\" 또는 \"wframePreload\"로 설정된 경우만 동작합니다.\n(기본 설정) frameModal 비활성화\nP00157S01\nP00157S01\nP00157S01.xml\nframeModal 활성화\n팝업이 탭 영역에서만 이동됩니다. 상위 팝업을 닫으면 하위 팝업이 닫힙니다.\nP00157S01\nP00157S01\nP00157S01.xml\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var jsnTabOpt = {\n \"label\": \"P00157S01\",\n \"openAction\": \"select\"\n };\n var jsnContOpt = {\n \"src\": \"/page/P00157S01.xml\",\n \"wframe\": true\n\n };\n\n tac_exam1.addTab(\"P00157S01\", jsnTabOpt, jsnContOpt);\n tac_exam2.addTab(\"P00157S01\", jsnTabOpt, jsnContOpt);\n\n};P00157S01.xmlP00157S01.xml"]],[["title","탭 별 비활성화 상태 유지하기"],["tmp",""]],[["title","탭을 닫았을 때 탭 영역에 보이는 탭의 수를 유지하는 기능 설정하기"],["tmp",""]],[["title","탭을 표시할 위치를 지정하기"],["tmp","TabControl\n[TabControl] 탭을 표시할 위치를 지정하기\n〈\n/page/P00159.xmlTabControltabPosition\n〉\n예제와 가이드 함께 보기\nTabControl의 탭을 표시할 위치를 지정하는 속성 tabPosition 예제입니다.\n속성 tabPosition에 지정할 수 있는 값은 \"top\", \"left\", \"right\", \"bottom\" 입니다.\n속성 tabScroll이 \"true\"로 지정된 경우 \"top\", \"bottom\"만 지원되며, \"left\", \"right\"로 지정된 경우 \"top\"으로 동작합니다.\n(기본 동작) 탭 위치 : top\nP00159S01\nP00159S02\nP00159S03\nP00159S01\nP00159S01.xml\n탭 위치 : right\nP00159S01\nP00159S02\nP00159S03\nP00159S01\nP00159S01.xml\n탭 위치 : bottom\nP00159S01\nP00159S01.xml\nP00159S01\nP00159S02\nP00159S03\n탭 위치 : left\nP00159S01\nP00159S02\nP00159S03\nP00159S01\nP00159S01.xml\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n\n //TabControl [tac_exam1], [tac_exam2], [tac_exam3], [tac_exam4]에 탭 P00159S01.xml, P00159S02.xml, P00159S03.xml 추가하기\n for (let i = 1; i <= 3; i++) {\n let strPage = \"P00159S0\" + i;\n\n tac_exam1.addTab(strPage, { \"label\": strPage, \"openAction\": \"select\" }, { \"src\": \"/page/\" + strPage + \".xml\", \"wframe\": true });\n tac_exam2.addTab(strPage, { \"label\": strPage, \"openAction\": \"select\" }, { \"src\": \"/page/\" + strPage + \".xml\", \"wframe\": true });\n tac_exam3.addTab(strPage, { \"label\": strPage, \"openAction\": \"select\" }, { \"src\": \"/page/\" + strPage + \".xml\", \"wframe\": true });\n tac_exam4.addTab(strPage, { \"label\": strPage, \"openAction\": \"select\" }, { \"src\": \"/page/\" + strPage + \".xml\", \"wframe\": true });\n }\n\n //탭 추가 예시\n //tac_exam1.addTab( \"P00159S01\", { \"label\" : \"P00159S01\", \"openAction\" : \"select\" }, { \"src\" : \"/page/P00159S01.xml\", \"wframe\" : true });\n};"]],[["title","탭의 기능(탭 이동, 목록 보기) 버튼 사용 설정하기"],["tmp","TabControl\n[TabControl] 탭의 기능(탭 이동, 목록 보기) 버튼 사용 설정하기\n〈\n/page/P00160.xmlTabControltabScroll\n〉\n예제와 가이드 함께 보기\nTabControl의 속성 tabScroll 예제입니다.\n속성 tabScroll을 \"true\"로 지정하면 탭의 목록을 표시할 수 있는 버튼과 탭의 좌우 이동 버튼을 제공합니다.\n일반적으로 탭의 수가 고정되어 있지 않거나 탭의 합산 너비가 TabControl의 최소 너비보다 큰 경우 tabScroll을 \"true\" 지정합니다.\n(기본 동작) tabScroll 미사용\n탭의 합산 너비가 TabControl의 너비보다 큰 경우 UI가 틀어지는 현상이 있기 때문에 별도의 css 적용이 필요합니다.\nTAB1\nTAB2\nTAB1\nTAB1 CONTENT\ntabScroll 사용\nTAB1\nTAB2\nTAB1\nTAB1 CONTENT\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};"]],[["title","탭의 이동 버튼의 기능 설정하기"],["tmp",""]],[["title","frameModal을 활성화하였을 때의 팝업 동작 비교하기"],["tmp","WindowContainer\n[WindowContainer] frameModal을 활성화하였을 때의 팝업 동작 비교하기\n〈\n/page/P00123.xmlWindowContainerframeModalframeModepopupwframe자식팝업모두닫기\n〉\n예제와 가이드 함께 보기\nWindowContainer의 속성 frameModal을 활성화하였을 때 팝업의 동작을 비교하는 예제입니다.\nframeModal을 활성화하면 팝업이 Window 내부에서만 이동이 가능하게 되며,\n팝업에서 팝업을 호출한 경우 상위 팝업을 닫으면 하위 팝업이 함께 닫힙니다.\n이 기능은 WindowContainer의 속성 frameMode가 \"wframe\"으로 설정된 경우만 동작합니다.\n기본 설정 - frameModal 비활성화\nP00123S01\nP00123S01.xml\nP00123S01\nframeModal 활성화\nP00123S01\nP00123S01.xml\nP00123S01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strSrc = \"/page/P00123S01.xml\";\n\n //windowContainer \"wdc_exam1\"에 윈도우 생성하기\n wdc_exam1.createWindow({\n \"title\": \"P00123S01\",\n \"windowTitle\": \"P00123S01\",\n \"src\": strSrc,\n \"windowId\": \"w_P00123S01\"\n });\n\n //windowContainer \"wdc_exam2\"에 윈도우 생성하기\n wdc_exam2.createWindow({\n \"title\": \"P00123S01\",\n \"windowTitle\": \"P00123S01\",\n \"src\": strSrc,\n \"windowId\": \"w_P00123S01\"\n });\n\n};"]],[["title","네임 레이어 상의 윈도우 순서 변경하기"],["tmp",""]],[["title","네임 레이어 클릭 시 윈도우를 최소화하지 않기"],["tmp","WindowContainer\n[WindowContainer] 네임 레이어 클릭 시 윈도우를 최소화하지 않기\n〈\n/page/P00224.xmlWindowContainerstopMinimizeOnNameLayer\n〉\n예제와 가이드 함께 보기\n선택된 윈도우의 네임레이어 클릭 시 최소화하지 않고 윈도우의 크기를 유지할지 여부에 관한 예제입니다.\n이 기능은 아래의 속성으로 사용할 수 있습니다.\n- stopMinimizeOnNameLayer : 네임레이어 클릭에 상관 없이 윈도우를 항상 열린 상태로 유지\n(기본 설정) stopMinimizeOnNameLayer - false\n네임레이어 클릭 시 해당 윈도우의 크기를 최소화합니다.\nwindow_1\nwindowTitle_1\nstopMinimizeOnNameLayer - true 적용\n네임레이어 클릭 시 해당 윈도우의 크기를 최소화하지 않습니다.\nwindow_1\nwindowTitle_1\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n let title; // 툴바의 네임레이어에 표시되는 타이틀\n let srcPath; // 서브화면의 경로\n let windowId; // window ID로 null 이나 \"\"입력시 title이 id로 생성\n let windowName; // window의 헤더에 표시될 타이틀로 null 이나 \"\"입력시 title값이 출력\n\n title = \"windowTitle_1\";\n srcPath = \"/page/P00224S01.xml\";\n windowId = \"windowId_1\";\n windowName = \"window_1\";\n\n // windowContainer 'wgc_exam_1', 'wgc_exam_2'의 윈도우 생성하기\n wgc_exam_1.createWindow(title, \"\", srcPath, windowName, windowId, \"newWindow\");\n wgc_exam_2.createWindow(title, \"\", srcPath, windowName, windowId, \"newWindow\");\n};"]],[["title","네임레이어의 스크롤 버튼을 클릭하여, 윈도우를 선택하고 활성화하기"],["tmp",""]],[["title","드래깅된 윈도우가 위치될 범위 설정하기"],["tmp","WindowContainer\n[WindowContainer] 드래깅된 윈도우가 위치될 범위 설정하기\n〈\n/page/P00108.xmlWindowContainerpositionwindowMoveType\n〉\n예제와 가이드 함께 보기\n속성 \"windowMoveType\" 설정의 예제입니다.\n속성 \"windowMoveType\"은 마우스 Drag&Drop을 통해 이동된 윈도우의 좌표가 WindowContainer의 영역의 밖인 경우 동작합니다.\n설정에 따라 윈도우의 위치를 영역 안쪽으로 위치 시키거나 마우스 포인터의 좌표에 따라 윈도우를 위치 시킬지를 결정할 수 있습니다.\n이 예제는 마우스 사용이 가능한 환경에서 정상 동작합니다.\n[기본설정] windowMoveType=\"restrict\"\n윈도우 드래그 시 윈도우가 영역 밖으로 나가지 않도록 영역 안쪽으로만 위치됩니다.\nP00108S01\nP00108S01.xml\nP00108S01\nwindowMoveType=\"overflow\"\n윈도우 드래그 시 마우스 포인터의 위치를 기반으로 윈도우가 위치됩니다.\nP00108S01\nP00108S01.xml\nP00108S01\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strSrc = \"/page/P00108S01.xml\";\n var strDefaultWidth;\n\n //예제 테스트를 위해 default width 변경\n if (window.innerWidth < 450) {\n strDefaultWidth = \"230px\";\n } else {\n strDefaultWidth = \"300px\";\n }\n\n wdc_exam1.createWindow(\"P00108S01\", null, strSrc, null, \"w_P00108S01\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam1.restoreWindowSize(\"w_P00108S01\"); //예제 테스트를 위한 설정\n\n wdc_exam2.createWindow(\"P00108S01\", null, strSrc, null, \"w_P00108S01\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam2.restoreWindowSize(\"w_P00108S01\"); //예제 테스트를 위한 설정\n\n};"]],[["title","선택된 윈도우 또는 지정한 윈도우를 제외하고 모든 윈도우 닫기"],["tmp","WindowContainer\n[WindowContainer] 선택된 윈도우 또는 지정한 윈도우를 제외하고 모든 윈도우 닫기\n〈\n/page/P00138.xmlWindowContainercloseOthers\n〉\n예제와 가이드 함께 보기\n선택된 윈도우 또는 지정한 윈도우를 제외하고 윈도우를 모두 닫는 예제입니다.\nP00138S01\nP00138S01.xml\nP00138S02\nP00138S02.xml\nP00138S03\nP00138S03.xml\nP00138S01\nP00138S02\nP00138S03\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strDefaultWidth;\n\n //예제 테스트를 위해 default width 변경\n if (window.innerWidth < 450) {\n strDefaultWidth = \"230px\";\n } else {\n strDefaultWidth = \"300px\";\n }\n\n //윈도우 추가\n wdc_exam1.createWindow(\"P00138S01\", null, \"/page/P00138S01.xml\", null, \"w_P00138S01\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam1.createWindow(\"P00138S02\", null, \"/page/P00138S02.xml\", null, \"w_P00138S02\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam1.createWindow(\"P00138S03\", null, \"/page/P00138S03.xml\", null, \"w_P00138S03\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n\n //시작 - 예제 테스트를 위한 설정\n wdc_exam1.setArrangeWindows(\"sequential\", [\"w_P00138S01\", \"w_P00138S02\", \"w_P00138S03\"]); //윈도우 분할\n //종료 - 예제 테스트를 위한 설정\n};\n\n/**\n * 버튼 [화면 초기화] 클릭 시\n */\nscwin.btn_init_onclick = function (e) {\n //페이지 새로 고침\n $p.reinitialize();\n};\n\n\n/**\n * 버튼 [선택된 윈도우를 제외, 모든 윈도우 닫기] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n //WindowContainer [wdc_exam1]의 선택된 윈도우를 제외한 모든 윈도우 닫기\n wdc_exam1.closeOthers();\n};\n\n/**\n * 버튼 [윈도우 P00138S02 제외 모두 닫기] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n //WindowContainer [wdc_exam1]의 윈도우 [w_P00138S02]를 제외한 모든 윈도우 닫기\n wdc_exam1.closeOthers(\"w_P00138S02\");\n};"]],[["title","선택된 윈도우의 Index 반환 받기"],["tmp",""]],[["title","선택된 윈도우의 스타일 변경하기"],["tmp",""]],[["title","윈도우 제어(배열) 아이콘 영역의 위치 지정하기"],["tmp",""]],[["title","윈도우를 닫았을 때 남아 있는 윈도우를 자동 정렬 하기"],["tmp",""]],[["title","윈도우별의 기본 크기 설정하기"],["tmp","WindowContainer\n[WindowContainer] 윈도우별의 기본 크기 설정하기\n〈\n/page/P00124.xmlWindowContainercreateWindowdefaultHeightdefaultWidth\n〉\n예제와 가이드 함께 보기\nWindow의 기본 창의 크기를 지정하는 예제입니다.\nWindow 생성 API인 \"createWindow\"에서 옵션 \"defaultWidth\", \"defaultHeight\"를 추가하여 Window별 기본 창의 크기를 지정할 수 있습니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n\n};\n\n/**\n * 버튼 [window 생성 - 기본 크기 미지정] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n wdc_exam1.createWindow({\n \"title\": \"기본 크기 미지정\",\n \"frameMode\": \"wframe\",\n \"src\": \"/page/P00124S01.xml\",\n \"windowId\": \"w_P00124S01\"\n });\n};\n\n/**\n * 버튼 [window 생성- 기본 크기 지정] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n wdc_exam1.createWindow({\n \"title\": \"기본 크기 지정\",\n \"frameMode\": \"wframe\",\n \"src\": \"/page/P00124S02.xml\",\n \"windowId\": \"w_P00124S02\",\n \"defaultWidth\": \"230px\", //기본 너비 지정\n \"defaultHeight\": \"140px\" //기본 높이 지정\n });\n};"]],[["title","윈도우의 목록 보기 아이콘 표시하기"],["tmp","WindowContainer\n[WindowContainer] 윈도우의 목록 보기 아이콘 표시하기\n〈\n/page/P00115.xmlWindowContaineruseWindowScrollButtonwindowScrollVisibleRowNum\n〉\n예제와 가이드 함께 보기\n툴바 영역에 \"윈도우 목록 보기\" 아이콘을 출력하는 예제입니다.\n아이콘을 클릭하면 윈도우 목록이 닫기 버튼과 함께 콤보 형태로 출력됩니다.\nWindowContainer의 속성 \"useWindowScrollButton\"을 설정하여 기능을 사용할 수 있습니다.\n툴바에 윈도우 목록 아이콘 출력하기\nP00115S01\nP00115S01.xml\nP00115S02\nP00115S02.xml\nP00115S03\nP00115S03.xml\nP00115S01\nP00115S02\nP00115S03\n기본 동작\nP00115S01\nP00115S01.xml\nP00115S02\nP00115S02.xml\nP00115S03\nP00115S03.xml\nP00115S01\nP00115S02\nP00115S03\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.initPage();\n};\n\n/**\n * 화면 초기화\n */\nscwin.initPage = function () {\n var strDefaultWidth;\n\n //예제 테스트를 위해 default width 변경\n if (window.innerWidth < 450) {\n strDefaultWidth = \"230px\";\n } else {\n strDefaultWidth = \"300px\";\n }\n\n //윈도우 추가\n wdc_exam1.createWindow(\"P00115S01\", null, \"/page/P00115S01.xml\", null, \"w_P00115S01\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam1.createWindow(\"P00115S02\", null, \"/page/P00115S02.xml\", null, \"w_P00115S02\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam1.createWindow(\"P00115S03\", null, \"/page/P00115S03.xml\", null, \"w_P00115S03\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n\n wdc_exam2.createWindow(\"P00115S01\", null, \"/page/P00115S01.xml\", null, \"w_P00115S01\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam2.createWindow(\"P00115S02\", null, \"/page/P00115S02.xml\", null, \"w_P00115S02\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n wdc_exam2.createWindow(\"P00115S03\", null, \"/page/P00115S03.xml\", null, \"w_P00115S03\", \"selectWindow\", null, null, null, { \"defaultWidth\": strDefaultWidth }, \"wframe\");\n\n //시작 - 예제 테스트를 위한 설정\n wdc_exam1.setArrangeWindows(\"sequential\", [\"w_P00115S01\", \"w_P00115S02\", \"w_P00115S03\"]); //윈도우 분할\n wdc_exam2.setArrangeWindows(\"sequential\", [\"w_P00115S01\", \"w_P00115S02\", \"w_P00115S03\"]); //윈도우 분할\n //종료 - 예제 테스트를 위한 설정\n};"]],[["title","핀으로 고정한 윈도우의 네임 레이어를 제일 앞으로 배치하기"],["tmp",""]],[["title","[WESE-187]wFrame 팝업을 지정한 WFrame 영역에 표시하기"],["tmp",""]],[["title","JSON 관련 기본 API"],["tmp",""]],[["title","동적으로 DataMap, DataList 생성하기"],["tmp",""]],[["title","동적으로 컴포넌트 생성하기"],["tmp","유틸리티\n동적으로 컴포넌트 생성하기\n〈\n/page/P00045.xmlUtilitiesdynamicCreate\n〉\n예제와 가이드 함께 보기\n버튼 생성하기\ninput 생성하기\n아래에 컴포넌트가 추가됩니다.\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [실행1] 클릭 시\n * trigger 생성 및 출력\n */\nscwin.btn_ex1_onclick = function (e) {\n var _comp;\n var strID;\n var objDate;\n\n //중복되지 않는 ID 생성을 위한 스크립트\n objDate = new Date();\n strID = \"btn_ex_\" + objDate.getDate() + \"_\" + objDate.getTime();\n\n //버튼(trigger) 생성 \n _comp = $p.dynamicCreate(\n strID,\n \"trigger\", //생성할 컴포넌트의 pluginName\n {\n style: \"\"\n , className: \"btn_cm mr_def\"\n },\n grp_target //생성(추가)할 위치의 컴포넌트 객체\n );\n\n //생성된 trigger의 value 할당.\n _comp.setValue(\"버튼\");\n\n};\n\n/**\n * [실행2] 클릭 시\n * input 생성 및 출력\n */\nscwin.btn_ex2_onclick = function (e) {\n var _comp;\n var strID;\n var objDate;\n\n //중복되지 않는 ID 생성을 위한 스크립트\n objDate = new Date();\n strID = \"ipt_ex_\" + objDate.getDate() + \"_\" + objDate.getTime();\n\n //input 생성 \n _comp = $p.dynamicCreate(\n strID,\n \"input\", //생성할 컴포넌트의 pluginName\n {\n style: \"min-width:80px; min-height:20px;\",\n className: \"mr_def\",\n placeholder: \"입력하세요.\",\n },\n grp_target //생성(추가)할 위치의 컴포넌트 객체\n );\n};"]],[["title","로그 출력하기"],["tmp","유틸리티\n로그 출력하기\n〈\n/page/P00037.xmlUtilitieslog\n〉\n예제와 가이드 함께 보기\n$p.log - 웹스퀘어 로그 API\n코드 예시\n\n\n\n\n\n\n\n\n\n\n\nconsole.log - 브라우저 로그 API\n코드 예시\n\n\n\n\n\n\n\n\n\n\n\n\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [실행1] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsonObj = { \"no\": \"2\", \"name\": \"WebSquare\" };\n var jsonStr = JSON.stringify(jsonObj);\n var jsonStrWithTab = JSON.stringify(jsonObj, null, \"\\t\");\n\n //로그 출력\n $c.frame.printExampleLog(\"** [실행1] scwin.btn_ex1_onclick 실행 **\", txa_log, false);\n\n //웹스퀘어 API를 사용하여 로그 출력\n $p.log(\"===========$p.log===========\");\n $p.log(jsonObj);\n $p.log(jsonObj.name);\n $p.log(jsonStrWithTab);\n $p.log(\"========================\");\n\n $c.frame.printExampleLog(\"브라우저에서 [ctrl]키를 누른채 [마우스 오른쪽 버튼]을 클릭한 뒤 [로그보기]를 클릭합니다.\", txa_log, false);\n};\n\n/**\n * [실행2] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var jsonObj = { \"no\": \"2\", \"name\": \"WebSquare\" };\n var jsonStr = JSON.stringify(jsonObj);\n var jsonStrWithTab = JSON.stringify(jsonObj, null, \"\\t\");\n\n //로그 출력\n $c.frame.printExampleLog(\"** [실행2] scwin.btn_ex2_onclick 실행 **\", txa_log, false);\n\n //console 객체를 사용하여 로그 출력\n console.log(\"===========console===========\");\n console.log(jsonObj);\n console.log(jsonObj.name);\n console.log(jsonStrWithTab);\n console.log(\"========================\");\n\n $c.frame.printExampleLog(\"브라우저의 [개발자도구]의 [콘솔(console)]탭에서 로그를 확인합니다.\", txa_log, false);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","모달(Modal) 팝업과 모달리스(Modeless) 팝업 비교하기"],["tmp",""]],[["title","자손 컴포넌트 반환받기"],["tmp","유틸리티\n자손 컴포넌트 반환받기\n〈\n/page/P00024.xmlUtilitiesgetChildren\n〉\n예제와 가이드 함께 보기\nGroup 컴포넌트의 자식/자손 컴포넌트에 접근하는 예제입니다.\nInputBox\nCheckBox\nType1\nType2\nTextBox Textbox 컴포넌트입니다.\nGridView\ncol1 col2 col3\nROW1 : COL1 ROW1 : COL2 ROW1 : COL3\nROW2 : COL1 ROW2 : COL2 ROW2 : COL3\nTabControl\nTAB1\nTAB1\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [실행1] 클릭 시\n * WebSquare.util.getChildren(대상 컴포넌트 객체)\n * ex) WebSquare.util.getChildren(grp_form);\n */\nscwin.btn_ex1_onclick = function (e) {\n $c.frame.printExampleLog(\"** scwin.btn_ex1_onclick 실행 **\", txa_log, false);\n\n //grp_form 컴포넌트의 자식 컴포넌트 반환를 받아 정보 출력\n scwin.grp_form_getChildren();\n};\n\n/**\n * grp_form 컴포넌트의 자식 컴포넌트 반환를 받아 정보 출력\n */\nscwin.grp_form_getChildren = function () {\n var arrComponents;\n\n //자식 컴포넌트가 담긴 배열이 반환됩니다.\n arrComponents = WebSquare.util.getChildren(grp_form);\n\n //개발자 console에 반환값 출력\n console.log(arrComponents);\n\n //실행 함수 로그 출력\n $c.frame.printExampleLog('WebSquare.util.getChildren(grp_form);', txa_log, false);\n\n //컴포넌트 정보 출력\n scwin.printInfo(arrComponents);\n};\n\n/**\n * [실행2] 클릭 시\n * WebSquare.util.getChildren(대상 컴포넌트 객체, 옵션)\n * ex) WebSquare.util.getChildren(grp_form, {recursive:true});\n */\nscwin.btn_ex2_onclick = function (e) {\n //textarea에 log 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex2_onclick 실행 **\", txa_log, false);\n\n //grp_form 컴포넌트의 자손 컴포넌트 반환를 받아 정보 출력\n scwin.grp_form_getChildren_recursive();\n};\n\n/**\n * grp_form 컴포넌트의 자손 컴포넌트 반환를 받아 정보 출력\n */\nscwin.grp_form_getChildren_recursive = function () {\n var arrComponents;\n\n //자손 컴포넌트 전체가 담긴 배열이 반환됩니다.\n arrComponents = WebSquare.util.getChildren(grp_form, { recursive: true });\n\n //개발자 console에 반환값 출력\n console.log(arrComponents);\n\n //실행 함수 로그 출력\n $c.frame.printExampleLog('WebSquare.util.getChildren(grp_form, {recursive:true});', txa_log, false);\n\n //컴포넌트 정보 출력\n scwin.printInfo(arrComponents);\n};\n\n/**\n * [실행3] 클릭 시\n * WebSquare.util.getChildren(대상 컴포넌트 객체, {recursive:true, excludePlugin:\"group span\"})\n * ex) WebSquare.util.getChildren(grp_form, {recursive:true, excludePlugin:\"group span\"});\n */\nscwin.btn_ex3_onclick = function (e) {\n //textarea에 log 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex3_onclick 실행 **\", txa_log, false);\n\n //grp_form 컴포넌트의 자식 컴포넌트 반환를 받아 정보 출력\n scwin.grp_form_getChildren_recursive_exclude();\n};\n\n/**\n * grp_form 컴포넌트의 자식 컴포넌트 반환를 받아 정보 출력\n */\nscwin.grp_form_getChildren_recursive_exclude = function () {\n var arrComponents;\n\n //group, span 컴포넌트를 제외한 자손 컴포넌트가 담긴 배열이 반환됩니다.\n arrComponents = WebSquare.util.getChildren(grp_form, { recursive: true, excludePlugin: \"group span\" });\n\n //개발자 console에 반환값 출력\n console.log(arrComponents);\n\n //실행 함수 로그 출력\n $c.frame.printExampleLog('WebSquare.util.getChildren(grp_form, {recursive:true, excludePlugin:\"group span\"});', txa_log, false);\n\n //컴포넌트 정보 출력\n scwin.printInfo(arrComponents);\n};\n\n\n/**\n * 컴포넌트 정보 출력 함수\n * @param {object} argCmp 웹스퀘어 컴포넌트\n */\nscwin.printInfo = function (argArrCmp) {\n var strLog = \"\";\n var i;\n var numLength;\n var strDelimiter = \"----------------------------------------\\n\";\n numLength = argArrCmp.length;\n\n strLog = strDelimiter + \"전체 컴포넌트 수 : \" + numLength + \"\\n\" + strDelimiter;\n\n for (i = 0; i < numLength; i++) {\n let argCmp = argArrCmp[i];\n\n strLog += (i + \"번째 컴포넌트 정보\\n\");\n\n //컴포넌트에 getOriginalID method가 있는 경우 진행\n if (argCmp.getOriginalID) {\n //컴포넌트 ID 추출. (사용자가 지정한 ID)\n strLog += \"ID : \" + argCmp.getOriginalID() + \"\\n\";\n }\n\n //컴포넌트에 getPluginName method가 있는 경우 진행\n if (argCmp.getPluginName) {\n //컴포넌트명(plugin name) 추출\n strLog += \"PluginName : \" + argCmp.getPluginName() + \"\\n\";\n }\n\n //구분자 추가\n if (strLog) {\n strLog += strDelimiter;\n }\n }\n\n //textarea에 문자열 출력\n $c.frame.printExampleLog(strLog, txa_log, false);\n\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n //textarea value를 빈문자열로 할당.\n txa_log.setValue(\"\");\n};"]],[["title","컴포넌트의 ID로 컴포넌트 객체 반환받기"],["tmp",""]],[["title","현재 화면이 팝업인지 확인하기"],["tmp","유틸리티\n현재 화면이 팝업인지 확인하기\n〈\n/page/P00055.xml$p.isPopup$p.isWFramePopup$p.openPopupUtilitiespopup\n〉\n예제와 가이드 함께 보기\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 버튼 [$p.openPopup() - browserPopup 실행] 클릭 시\n */\nscwin.btn_ex1_onclick = function (e) {\n var opts = {\n \"id\": \"p_P00055P01_browserPopup\",\n \"type\": \"browserPopup\",\n \"width\": \"450px\",\n \"height\": \"400px\",\n \"modal\": false\n };\n\n //모바일에서의 크기,위치 조절을 위해 공통 함수 사용하였습니다. 기본 옵션은 최초 선언된 opts를 참고하시기 바랍니다.\n opts = $c.frame.getPopupPosition(opts);\n\n $p.openPopup(\"/page/P00055P01.xml\", opts);\n};\n\n/**\n * 버튼 [$p.isPopup() 실행] 클릭 시\n */\nscwin.btn_ex2_onclick = function (e) {\n var ispopup;\n var strResult;\n\n ispopup = $p.isPopup(); //예상 결과 : false\n\n strResult = \"$p.isPopup();\\n\";\n strResult += \"예상 결과 : false\\n\";\n strResult += \"실행 결과 : \" + ispopup;\n\n alert(strResult);\n};\n\n/**\n * 버튼 [$p.isPopup(true) 실행] 클릭 시\n */\nscwin.btn_ex3_onclick = function (e) {\n var ispopup;\n var strResult;\n\n ispopup = $p.isPopup(true); //예상 결과 : false\n\n strResult = \"$p.isPopup(true);\\n\";\n strResult += \"예상 결과 : false\\n\";\n strResult += \"실행 결과 : \" + ispopup;\n\n alert(strResult);\n};\n\n/**\n * 버튼 [$p.openPopup() - wframePopup 실행] 클릭 시\n */\nscwin.btn_ex4_onclick = function (e) {\n var opts = {\n \"id\": \"p_P00055P01_wframePopup\",\n \"type\": \"wframePopup\",\n \"width\": \"450px\",\n \"height\": \"400px\",\n \"popupName\": \"WFrame PopUp\",\n \"modal\": true\n };\n\n //모바일에서의 크기,위치 조절을 위해 공통 함수 사용하였습니다. 기본 옵션은 최초 선언된 opts를 참고하시기 바랍니다.\n opts = $c.frame.getPopupPosition(opts);\n\n $p.openPopup(\"/page/P00055P02.xml\", opts);\n};\n\n\n/**\n * 버튼 [$p.isWFramePopup() 실행] 클릭 시\n */\nscwin.btn_ex5_onclick = function (e) {\n var isWFramePopup;\n var strResult;\n\n isWFramePopup = $p.isWFramePopup(); //예상 결과 : false\n\n strResult = \"$p.isWFramePopup();\\n\";\n strResult += \"예상 결과 : false\\n\";\n strResult += \"실행 결과 : \" + isWFramePopup;\n\n alert(strResult);\n};\n\n/**\n * 버튼 [$p.isWFramePopup(true) 실행] 클릭 시\n */\nscwin.btn_ex6_onclick = function (e) {\n var isWFramePopup;\n var strResult;\n\n isWFramePopup = $p.isWFramePopup(true); //예상 결과 : false\n\n strResult = \"$p.isWFramePopup(true);\\n\";\n strResult += \"예상 결과 : false\\n\";\n strResult += \"실행 결과 : \" + isWFramePopup;\n\n alert(strResult);\n};"]],[["title","Submission 설정 예시 - 기본 데이터 포맷(JSON)과 대용량 데이터 포맷(Array)"],["tmp",""]],[["title","Submission의 ref와 target 속성 값에 따른 DataCollection 적용 예시"],["tmp",""]],[["title","데이터 타입별 포맷 예시"],["tmp","통신\n데이터 타입별 포맷 예시\n〈\n/page/P00039.xmlarraydatatypeformatjsonsubmisisoxml통신\n〉\nDataList에 셋팅할 수 있는 데이터의 포맷 예시입니다.\nSubmission에 지정할 수 있는 타입은 JSON, Array, XML입니다.(속성 중 target과 reference의 dataType에 할당.)\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\nJSON - 기본 권장 포맷\n[\n { \"SEQ_NO\":1, \"SIGUNGUCODE\":\"11110\", \"STREETNUM\":\"2005001\", \"STREET\":\"세종대로\" },\n { \"SEQ_NO\":2, \"SIGUNGUCODE\":\"11110\", \"STREETNUM\":\"2005001\", \"STREET\":\"세종대로\" }\n]\nSubmission 설정 예시\ntarget=\"data:json,[데이터 리스트 아이디]\"\nmediatype=\"application/json\"\nARRAY - 대용량 데이터 권장 포맷\n{\n \"columnInfo\":[\"SEQ_NO\", \"SIGUNGUCODE\", \"STREETNUM\", \"STREET\"],\n \"data\":[1, \"11110\", \"2005001\", \"세종대로\", 2, \"11110\", \"2005001\", \"세종대로\"]\n}\nSubmission 설정 예시\ntarget=\"data:array,[데이터 리스트 아이디]\"\nmediatype=\"application/json\"\n1차원 ARRAY\n'\"1\",\"11110\",\"2005001\",\"세종대로\",\"Sejong-daero\",\"00\",\"서울특별시\",\"종로구\",\"2\",\"NULL\",\"NULL\",\"NULL\",\"NULL\",\"0\",\"NULL\",\"NULL\",\"Seoul\",\"Jongno-gu\",\"NULL\",\"20100520\",\"NULL\",\"2\",\"11110\",\"2005001\",\"세종대로\",\"Sejong-daero\",\"01\",\"서울특별시\",\"종로구\",\"1\",\"119\",\"세종로\",\"NULL\",\"NULL\",\"0\",\"NULL\",\"NULL\",\"Seoul\",\"Jongno-gu\",\"Sejongno\",\"20100520\",\"NULL\"'\nSubmission 설정 예시\n1차원 ARRAY은 Submission에 지정할 수 없으며 응답 데이터를 직접 DataList에 할당해야 합니다. DataList의 API 중 setData를 사용합니다.\n\ntarget : \"\"\nmediatype=\"text/plain\"\nXML\n<list id=\"dlt_ZipCodeStreet\">\n <map>\n <SEQ_NO>1</SEQ_NO>\n <SIGUNGUCODE>11110</SIGUNGUCODE>\n <STREETNUM>2005001</STREETNUM>\n <STREET>세종대로</STREET>\n </map>\n <map>\n <SEQ_NO>2</SEQ_NO>\n <SIGUNGUCODE>11110</SIGUNGUCODE>\n <STREETNUM>2005001</STREETNUM>\n <STREET>세종대로</STREET>\n </map>\n</list>\nSubmission 설정 예시\ntarget=\"data:xml,[데이터 리스트 아이디]\"\nmediatype=\"application/xml\"\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * 설명부에 pre tag 추가\n */\nscwin.displayFormatter_desc = function (strValue) {\n return \"<pre>\" + strValue + \"</pre>\";\n}"]],[["title","동적으로 Submission 제어하기(생성,삭제,실행)"],["tmp","통신\n동적으로 Submission 제어하기(생성,삭제,실행)\n〈\n/page/P00030.xmlcreateSubmission통신\n〉\n예제와 가이드 함께 보기\nSubmission 생성하기\nSubmission 생성하기\nSubmission 실행하기\nSubmission 객체 반환받기\n로그 확인\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n};\n\n/**\n * [실행1] 클릭 시\n * $p.createSubmission( 옵션 객체 );\n */\nscwin.btn_ex1_onclick = function (e) {\n var jsnSubmissionOptions;\n //로그 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex1_onclick 실행 **\", txa_log, false);\n\n //서브미션 옵션 설정.\n jsnSubmissionOptions = {\n id: \"sbm_example_dynamic\",\n ref: \"data:json,dma_request\", //생략 가능 - $p.executeSubmission 호출시 request data 전달이 가능합니다. \n target: \"data:json,dc_resUserListData\", //생략 가능 - submitDoneHandler 함수에서 response data의 제어가 가능합니다.\n action: \"/data/sampleData/sampleData_json_dc_list.json\",\n mediatype: \"application/json\",\n submitDoneHandler: function (e) {\n //응답 본문 alert 출력\n alert(e.responseText);\n\n //응답 본문 log 출력\n $c.frame.printExampleLog(\"sbm_example_dynamic - submitDoneHandler\", txa_log, false);\n $c.frame.printExampleLog(e.responseText, txa_log, false);\n },\n submitErrorHandler: function (e) {\n $c.frame.printExampleLog(\"sbm_example_dynamic - submitErrorHandler\", txa_log, false);\n //개발자 도구 console에 에러 객체 출력\n console.error(\"sbm_example_dynamic - submitErrorHandler\", e);\n }\n };\n\n //submission 생성\n $p.createSubmission(jsnSubmissionOptions);\n};\n\n/**\n * [실행2] 클릭 시\n * $p.deleteSubmission( submissionID );\n */\nscwin.btn_ex2_onclick = function (e) {\n //로그 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex2_onclick 실행 **\", txa_log, false);\n $c.frame.printExampleLog('\"sbm_example1\" ID를 가진 submission이 이미 삭제된 경우는 오류가 발생합니다. 브라우저 개발자 도구의 콘솔을 확인하세요.', txa_log, false);\n $c.frame.printExampleLog('$p.deleteSubmission(\"sbm_example1\");', txa_log, false);\n\n //submission 삭제. - \"sbm_example1\" ID를 가진 submission을 삭제합니다.\n $p.deleteSubmission(\"sbm_example1\");\n\n //로그 출력\n $c.frame.printExampleLog('정상적으로 삭제되었습니다.', txa_log, false);\n};\n\n/**\n * [실행3] 클릭 시\n * $p.executeSubmission( submissionID , requestData );\n * ex) $p.executeSubmission(\"sbm_example1\");\n */\nscwin.btn_ex3_onclick = function (e) {\n //로그 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex3_onclick 실행 **\", txa_log, false);\n $c.frame.printExampleLog('$p.executeSubmission(\"sbm_example1\");', txa_log, false);\n $c.frame.printExampleLog('\"sbm_example1\" ID를 가진 submission이 없는 경고 로그가 출력됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.', txa_log, false);\n\n //submission 실행. - \"sbm_example1\" ID를 가진 submission을 실행합니다.\n $p.executeSubmission(\"sbm_example1\");\n};\n\n/**\n * [실행4] 클릭 시\n * $p.getSubmission( submissionID );\n * ex) $p.getSubmission(\"sbm_example1\");\n */\nscwin.btn_ex4_onclick = function (e) {\n var tmpRet;\n //로그 출력\n $c.frame.printExampleLog(\"** scwin.btn_ex4_onclick 실행 **\", txa_log, false);\n $c.frame.printExampleLog('$p.getSubmission(\"sbm_example1\");', txa_log, false);\n $c.frame.printExampleLog('\"sbm_example1\" ID를 가진 submission객체가 반환됩니다. 브라우저 개발자 도구의 콘솔을 확인하세요.', txa_log, false);\n\n //submisison 객체 반환 - \"sbm_example1\" ID를 가진 submission을 반환합니다.\n //반환 받은 객체의 속성을 재정의하여 사용할 수 있습니다.\n tmpRet = $p.getSubmission(\"sbm_example1\");\n\n console.log('$p.getSubmission(\"sbm_example1\"); 반환값 : ', tmpRet);\n\n if (!tmpRet) {\n //반환된 submission객체가 없는 경우 - null 반환\n $c.frame.printExampleLog('\"sbm_example1\" ID를 가진 submission객체를 찾을 수 없습니다.', txa_log, false);\n } else {\n //반환된 submission의 정보 출력\n $c.frame.printExampleLog('action : ' + tmpRet.action, txa_log, false);\n $c.frame.printExampleLog('ref : ' + tmpRet.ref, txa_log, false);\n }\n};\n\n/**\n * sbm_example1의 submitdone handler\n */\nscwin.sbm_example1_submitdone = function (e) {\n //응답 본문 console 출력\n console.log(e.responseText);\n //응답 객체 console 출력\n console.log(e.responseJSON);\n\n //응답 본문 log 출력\n $c.frame.printExampleLog(\"submitDoneHandler\", txa_log, false);\n $c.frame.printExampleLog(e.responseText, txa_log, false);\n};\n\n/**\n * sbm_example1의 submiterror handler\n */\nscwin.sbm_example1_submiterror = function (e) {\n $c.frame.printExampleLog(\"submitErrorHandler\", txa_log, false);\n\n //개발자 도구 console에 에러 객체 출력\n console.error(\"submitErrorHandler\", e);\n};\n\n/**\n * textarea의 로그 삭제\n */\nscwin.btn_clearLog_onclick = function (e) {\n txa_log.setValue(\"\");\n};"]],[["title","[GridView] 복합 예제 - Row 추가, 삭제, 엑셀 다운로드, Subtotal on/off"],["tmp",""]],[["title","GridView와 DataList의 CRUD에 관련된 주요 API 시연"],["tmp",""]],[["title","ScheduleCalendar에 GridView를 활용하여 일정 추가하기"],["tmp","복합예제\nScheduleCalendar에 GridView를 활용하여 일정 추가하기\n〈\n/page/P00047.xmlGridViewScheduleCalendar복합예제\n〉\nGridView와 ScheduleCalendar 컴포넌트를 활용하여 구성한 화면 입니다.\n버튼[일정추가]를 클릭하면 GridView에 일정을 입력합니다.\n입력한 일정이 유효하면 ScheduleCalendar에 일정이 출력됩니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\nNO 일정명 시작일 종료일 등록여부 삭제\n1 오늘은 칼퇴 2023-04-24 2023-04-24 정상 삭제\n2 여행 2023-04-28 2023-05-02 정상 삭제\n월\n주\n일\n2023년 4월\n일 월 화 수 목 금 토\n26 27 28 29 30 31 1\n2 3 4 5 6 7 8\n9 10 11 12 13 14 15\n16 17 18 19 20 21 22\n23 24 25 26 27 28 29\n오늘은 칼퇴\n여행\n30 1 2 3 4 5 6\n여행\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n\n //화면 로딩 시 데이터 할당.\n scwin.setInitData();\n};\n\n/**\n * 현재일 기준 스케줄 등록\n */\nscwin.setInitData = function () {\n var strCurDate;\n\n strCurDate = $p.getCurrentServerDate(\"yyyyMMdd\");\n\n //초기 스케줄 등록\n dlt_calendar.setJSON([\n {\n \"from\": strCurDate,\n \"to\": strCurDate,\n \"title\": \"오늘은 칼퇴\",\n \"validYN\": \"Y\",\n \"errorMessage\": \"\",\n }, {\n \"from\": $p.dateAdd(strCurDate, 4),\n \"to\": $p.dateAdd(strCurDate, 8),\n \"title\": \"여행\",\n \"validYN\": \"Y\",\n \"errorMessage\": \"\",\n },\n ]);\n};\n\nscwin.btn_add_onclick = function (e) {\n var numIdx;\n numIdx = dlt_calendar.insertRow();\n\n grd_schedule.setFocusedCell(numIdx, \"title\", true);\n\n};\n\nscwin.btn_del_onclick = function (e) {\n var _focusIdx = grd_schedule.getFocusedRowIndex();\n dlt_calendar.removeRow(_focusIdx);\n};\n\n/**\n * grd_schedule의 oncellclick 이벤트 핸들러\n */\nscwin.grd_schedule_oncellclick = function (row, col, colId) {\n switch (colId) {\n case \"btn_del\":\n //삭제 버튼 클릭 시 데이터를 제거합니다.\n dlt_calendar.removeRow(row);\n break;\n case \"validYN\": //등록 여부\n let jsnRowData = dlt_calendar.getRowJSON(row);\n if (jsnRowData.validYN === \"N\") {\n alert((jsnRowData.errorMessage || \"오류 메시지가 없습니다.\").replace(new RegExp(\"<br/>\", \"g\"), \"\\n\"));\n }\n break;\n default:\n break;\n }\n};\n\n/**\n * grd_schedule의 onafteredit 이벤트 핸들러\n * 입력값의 유효성을 체크합니다.\n */\nscwin.grd_schedule_onafteredit = function (row, col, value) {\n var jsnData;\n var strMsg;\n var strValidYN;\n\n //수정이 일어난 행의 json 데이터 추출\n jsnData = dlt_calendar.getRowJSON(row);\n\n //유효성 체크 - 초기값 Y\n strValidYN = \"Y\";\n //오류 시 메시지 처리\n strMsg = \"\";\n\n //일정명 확인\n if (!jsnData.title) {\n strMsg += \"- 일정명이 누락되었습니다.\" + \"<br/>\";\n strValidYN = \"N\";\n }\n\n //시작일과 종료일 유효성 체크\n let arrColInfo = [\n { col: \"from\", label: \"시작일\" },\n { col: \"to\", label: \"종료일\" },\n ];\n let i_max = arrColInfo.length;\n let isDateError = false;\n for (let i = 0; i < i_max; i++) {\n let item = arrColInfo[i];\n\n let strDate = (jsnData[item.col]).replaceAll(\"-\", \"\");\n\n if (!strDate) {\n strMsg += \"- \" + item.label + \"이 누락되었습니다.\" + \"<br/>\";\n strValidYN = \"N\";\n isDateError = true;\n } else {\n if (strDate.length != 8) {\n strMsg += \"- \" + item.label + \"은 yyyyMMdd 형식으로 입력되어야 합니다. ex)19450815\" + \"<br/>\";\n strValidYN = \"N\";\n isDateError = true;\n }\n }\n\n jsnData[item.col] = strDate;\n }\n\n if (!isDateError) {\n let numDateDiff = $p.dateDiff(jsnData.from, jsnData.to);\n if (numDateDiff < 0) {\n strMsg += \"- 종료일이 시작일보다 빠릅니다.\" + \"<br/>\";\n strValidYN = \"N\";\n }\n }\n\n jsnData.validYN = strValidYN;\n jsnData.errorMessage = strMsg;\n delete jsnData.rowStatus;\n\n dlt_calendar.setRowJSON(row, jsnData, true);\n};\n\nscwin.grd_schedule_validYN_displayFormatter = function (argValue) {\n var returnValue;\n switch (argValue) {\n case \"Y\":\n returnValue = '<span style=\"color:blue;\">정상</span>';\n break;\n case \"N\":\n returnValue = '<span style=\"color:red;\">오류(원인 보기)</span>';\n break;\n default:\n returnValue = \"\";\n break;\n }\n\n return returnValue;\n};\n\n/**\n * grd_schedule의 tooltipFormatter 핸들러\n */\nscwin.grd_schedule_tooltipFormatter = function (argRow, argCol, argValue) {\n var returnValue = \"\";\n\n //그리드 컬럼 id가 validYN(등록여부) 인 경우만 처리 \n if (grd_schedule.getColumnID(argCol) == \"validYN\") {\n returnValue = dlt_calendar.getCellData(argRow, \"errorMessage\");\n }\n\n return returnValue;\n\n};"]],[["title","공통 스크립트로 코드 목록 UI(selectbox, radio 등) 구성하기"],["tmp",""]],[["title","이중 Accordion으로 UI 구성 하기"],["tmp","복합예제\n이중 Accordion으로 UI 구성 하기\n〈\n/page/P00040.xmlAccordionGenerator복합예제\n〉\nAccordion, Generator 컴포넌트를 활용하여 구성한 화면 입니다.\nUI에 적용한 CSS는 이 파일에 작성되어있습니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\n주문정보\n배송정보\n상품정보\n최종결제금액\n총 주문 금액\n145,800,000원\n(배송비 2,500원 포함)\n총 할인금액\n0원\n포인트 사용금액\n0원\n최종 결제금액\n145,800,000\n145,800,000\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n var i;\n var genArr = [\"package_WebSquare5.png\", \"package_Proworks.png\", \"package_W-gear.png\"];\n var genArrLen = genArr.length, genObj, imgNm;\n\n for (i = 0; i < genArrLen; i++) {\n ui_genProduct.insertChild();\n imgNm = genArr[i];\n ui_genProduct.getChild(i, \"ui_prdImg\").setSrc(\"/img/example/\" + imgNm);\n ui_genProduct.getChild(i, \"ui_prdNm\").setValue(imgNm.replace(\"package_\", \"\").replace(\".png\", \"\"));\n }\n\n};\n\n/**\n * 화면의 버튼 클릭 시 - 공통\n */\nscwin.ui_btnSend_onclick = function () {\n alert(\"기능이 구현되지 않았습니다.\");\n};"]],[["title","[GridView] customFormatter 적용 속도 비교"],["tmp","성능\n[GridView] customFormatter 적용 속도 비교\n〈\n/page/P00050.xmlcustomFormatter\n〉\n그리드뷰에 데이터를 customFormatter속성을 사용하여 style을 변경 할 때 적용 방식에 따른 출력의 속도를 비교하기 위해 작성된 화면입니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\ncustomformatter 미적용\n사번 성명 성별 입사일 직위 직책 역할 이메일\n1 10000001 순영후 남 2015.11.06 대리 PL 협력 gevo206@inswave02.com\n2 10001339 증소희 여 2016.04.27 대리 분석/설계 임원 figa162@inswave01.com\n3 10001337 마정연 남 2012.04.30 사원 개발 팀원 zibe925@inswave02.com\n4 10001336 후혜선 남 2006.04.23 팀장 분석/설계 협력 mewa036@inswave02.com\n5 10001335 동세희 여 2005.04.01 이사 PL 임원 cane427@inswave02.com\n6 10001334 전성은 여 2002.12.01 사원 개발 팀장 piho888@inswave02.com\n7 10001333 소로연 여 2004.06.12 차장 분석/설계 panu036@inswave02.com\n8 10001332 영수민 여 2016.10.28 팀장 개발 팀장 voza099@inswave02.com\n9 10001331 순지환 여 2004.02.26 차장 개발 팀장 nosa669@inswave01.com\n10 10001330 국희예 여 2003.09.03 대리 분석/설계 협력 guri144@inswave03.com\n11 10001329 견재훈 여 2015.09.11 과장 개발 팀원 raqu368@inswave01.com\n12 10001328 방상준 여 2014.07.09 사원 PL 팀원 yose264@inswave03.com\n13 10001327 신지연 남 2005.05.30 팀장 분석/설계 팀원 jegu076@inswave02.com\n14 10001326 포은희 남 2011.05.21 대리 분석/설계 팀원 magi959@inswave01.com\n15 10001340 성재빈 남 2015.08.21 과장 PL 협력 hobo021@inswave02.com\n16 10001325 제성은 남 2005.09.07 사원 분석/설계 팀원 jome294@inswave02.com\n17 10001323 주교윤 여 2001.04.27 사원 분석/설계 cisu582@inswave02.com\n18 10001322 채한솔 여 2005.01.22 부장 분석/설계 협력 vicu399@inswave03.com\n19 10001321 순성엽 여 2016.04.21 과장 분석/설계 guso389@inswave03.com\n20 10001320 반유설 남 2001.03.04 팀장 개발 팀장 geha962@inswave01.com\ncustomformatter 적용 - setCellBackgroundColor, setCellColor API 사용\n사번 성명 성별 입사일 직위 직책 역할 이메일\n1 10000001 순영후 남 2015.11.06 대리 PL 협력 gevo206@inswave02.com\n2 10001339 증소희 여 2016.04.27 대리 분석/설계 임원 figa162@inswave01.com\n3 10001337 마정연 남 2012.04.30 사원 개발 팀원 zibe925@inswave02.com\n4 10001336 후혜선 남 2006.04.23 팀장 분석/설계 협력 mewa036@inswave02.com\n5 10001335 동세희 여 2005.04.01 이사 PL 임원 cane427@inswave02.com\n6 10001334 전성은 여 2002.12.01 사원 개발 팀장 piho888@inswave02.com\n7 10001333 소로연 여 2004.06.12 차장 분석/설계 미선택 panu036@inswave02.com\n8 10001332 영수민 여 2016.10.28 팀장 개발 팀장 voza099@inswave02.com\n9 10001331 순지환 여 2004.02.26 차장 개발 팀장 nosa669@inswave01.com\n10 10001330 국희예 여 2003.09.03 대리 분석/설계 협력 guri144@inswave03.com\n11 10001329 견재훈 여 2015.09.11 과장 개발 팀원 raqu368@inswave01.com\n12 10001328 방상준 여 2014.07.09 사원 PL 팀원 yose264@inswave03.com\n13 10001327 신지연 남 2005.05.30 팀장 분석/설계 팀원 jegu076@inswave02.com\n14 10001326 포은희 남 2011.05.21 대리 분석/설계 팀원 magi959@inswave01.com\n15 10001340 성재빈 남 2015.08.21 과장 PL 협력 hobo021@inswave02.com\n16 10001325 제성은 남 2005.09.07 사원 분석/설계 팀원 jome294@inswave02.com\n17 10001323 주교윤 여 2001.04.27 사원 분석/설계 미선택 cisu582@inswave02.com\n18 10001322 채한솔 여 2005.01.22 부장 분석/설계 협력 vicu399@inswave03.com\n19 10001321 순성엽 여 2016.04.21 과장 분석/설계 미선택 guso389@inswave03.com\n20 10001320 반유설 남 2001.03.04 팀장 개발 팀장 geha962@inswave01.com\ncustomformatterr 적용 - innerHTML 사용\n사번 성명 성별 입사일 직위 직책 역할 이메일\n1 10000001 순영후 남 2015.11.06 대리 PL 협력 gevo206@inswave02.com\n2 10001339 증소희 여 2016.04.27 대리 분석/설계 임원 figa162@inswave01.com\n3 10001337 마정연 남 2012.04.30 사원 개발 팀원 zibe925@inswave02.com\n4 10001336 후혜선 남 2006.04.23 팀장 분석/설계 협력 mewa036@inswave02.com\n5 10001335 동세희 여 2005.04.01 이사 PL 임원 cane427@inswave02.com\n6 10001334 전성은 여 2002.12.01 사원 개발 팀장 piho888@inswave02.com\n7 10001333 소로연 여 2004.06.12 차장 분석/설계 미선택 panu036@inswave02.com\n8 10001332 영수민 여 2016.10.28 팀장 개발 팀장 voza099@inswave02.com\n9 10001331 순지환 여 2004.02.26 차장 개발 팀장 nosa669@inswave01.com\n10 10001330 국희예 여 2003.09.03 대리 분석/설계 협력 guri144@inswave03.com\n11 10001329 견재훈 여 2015.09.11 과장 개발 팀원 raqu368@inswave01.com\n12 10001328 방상준 여 2014.07.09 사원 PL 팀원 yose264@inswave03.com\n13 10001327 신지연 남 2005.05.30 팀장 분석/설계 팀원 jegu076@inswave02.com\n14 10001326 포은희 남 2011.05.21 대리 분석/설계 팀원 magi959@inswave01.com\n15 10001340 성재빈 남 2015.08.21 과장 PL 협력 hobo021@inswave02.com\n16 10001325 제성은 남 2005.09.07 사원 분석/설계 팀원 jome294@inswave02.com\n17 10001323 주교윤 여 2001.04.27 사원 분석/설계 미선택 cisu582@inswave02.com\n18 10001322 채한솔 여 2005.01.22 부장 분석/설계 협력 vicu399@inswave03.com\n19 10001321 순성엽 여 2016.04.21 과장 분석/설계 미선택 guso389@inswave03.com\n20 10001320 반유설 남 2001.03.04 팀장 개발 팀장 geha962@inswave01.com\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n $p.executeSubmission(\"sbm_getUserData\")\n};\n\nscwin.sbm_getUserData_submitdone = function (e) {\n\n};\n\n/**\n * grd_example의 EMP_NM 컬럼의 customFormatter\n */\nscwin.grd_example_EMP_NM = function (data, formattedData, rowIndex, colIndex) {\n if (formattedData.indexOf(\"영\") > 0) {\n grd_example.setCellColor(rowIndex, colIndex, \"red\");\n }\n return formattedData;\n};\n\n/**\n * grd_example의 GENDER_CD 컬럼의 customFormatter\n */\nscwin.grd_example_GENDER_CD = function (data, formattedData, rowIndex, colIndex) {\n if (data === \"F\") {\n grd_example.setCellColor(rowIndex, colIndex, \"orange\");\n }\n return formattedData;\n};\n\n/**\n * grd_example의 ROLE_CD 컬럼의 customFormatter\n */\nscwin.grd_example_ROLE_CD = function (data, formattedData, rowIndex, colIndex) {\n if (data === \"02\") {\n grd_example.setCellColor(rowIndex, colIndex, \"blue\");\n }\n return formattedData;\n};\n\n/**\n * grd_example의 POSITION_CD 컬럼의 customFormatter\n */\nscwin.grd_example_POSITION_CD = function (data, formattedData, rowIndex, colIndex) {\n if (data === \"07\") {\n grd_example.setCellBackgroundColor(rowIndex, colIndex, \"blue\");\n grd_example.setCellColor(rowIndex, colIndex, \"#fff\");\n }\n return formattedData;\n};\n\n/**\n * grd_example2의 EMP_NM 컬럼의 customFormatter\n */\nscwin.grd_example2_EMP_NM = function (data, formattedData, rowIndex, colIndex) {\n if (data.indexOf(\"영\") > 0) {\n return \"<span style='color:red'>\" + formattedData + \"</span>\";\n }\n return data;\n};\n\n/**\n * grd_example2의 GENDER_CD 컬럼의 customFormatter\n */\nscwin.grd_example2_GENDER_CD = function (data, formattedData, rowIndex, colIndex) {\n if (data === \"F\") {\n return \"<span style='color:orange'>\" + formattedData + \"</span>\";\n }\n return formattedData;\n};\n\n/**\n * grd_exampl2e의 ROLE_CD 컬럼의 customFormatter\n */\nscwin.grd_example2_ROLE_CD = function (data, formattedData) {\n if (data === \"02\") {\n return \"<span style='color:blue'>\" + formattedData + \"</span>\";\n }\n return formattedData;\n};\n\n/**\n * grd_exampl2e의 POSITION_CD 컬럼의 customFormatter\n */\nscwin.grd_example2_POSITION_CD = function (data, formattedData, rowIndex, colIndex) {\n if (data === \"07\") {\n return \"<div style='display:inline-block;background-color:blue;line-height:26px;color:#fff;width:100%;box-sizing:border-box;'>\" + formattedData + \"</div>\";\n }\n return formattedData;\n};"]],[["title","[GridView] fastScroll 속성 비교"],["tmp","성능\n[GridView] fastScroll 속성 비교\n〈\n/page/P00049.xmlfastScroll\n〉\n그리드뷰의 fastScroll속성에 따른 데이터 출력의 특징을 알아보기 위해 작성된 예시입니다.\n그리드뷰의 높이값을 변경한 뒤 그리드뷰의 세로 스크롤 또는 마우스의 휠을 이용하여 데이터가 출력되는 것을 비교합니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\nGridView의 높이(px) :( 현재 화면에 보여지는 행 수 : 9 건 )\nfastScroll=\"true\"로 정의\n사번 성명 성별 입사일 직위 직책 역할 이메일\n1 10000001 순영후 남 2015.11.06 대리 PL 협력 gevo206@inswave02.com\n2 10001339 증소희 여 2016.04.27 대리 분석/설계 임원 figa162@inswave01.com\n3 10001337 마정연 남 2012.04.30 사원 개발 팀원 zibe925@inswave02.com\n4 10001336 후혜선 남 2006.04.23 팀장 분석/설계 협력 mewa036@inswave02.com\n5 10001335 동세희 여 2005.04.01 이사 PL 임원 cane427@inswave02.com\n6 10001334 전성은 여 2002.12.01 사원 개발 팀장 piho888@inswave02.com\n7 10001333 소로연 여 2004.06.12 차장 분석/설계 panu036@inswave02.com\n8 10001332 영수민 여 2016.10.28 팀장 개발 팀장 voza099@inswave02.com\n9 10001331 순지환 여 2004.02.26 차장 개발 팀장 nosa669@inswave01.com\nfastScroll=\"false\"로 정의\n사번 성명 성별 입사일 직위 직책 역할 이메일\n1 10000001 순영후 남 2015.11.06 대리 PL 협력 gevo206@inswave02.com\n2 10001339 증소희 여 2016.04.27 대리 분석/설계 임원 figa162@inswave01.com\n3 10001337 마정연 남 2012.04.30 사원 개발 팀원 zibe925@inswave02.com\n4 10001336 후혜선 남 2006.04.23 팀장 분석/설계 협력 mewa036@inswave02.com\n5 10001335 동세희 여 2005.04.01 이사 PL 임원 cane427@inswave02.com\n6 10001334 전성은 여 2002.12.01 사원 개발 팀장 piho888@inswave02.com\n7 10001333 소로연 여 2004.06.12 차장 분석/설계 미선택 panu036@inswave02.com\n8 10001332 영수민 여 2016.10.28 팀장 개발 팀장 voza099@inswave02.com\n9 10001331 순지환 여 2004.02.26 차장 개발 팀장 nosa669@inswave01.com\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n $p.executeSubmission(\"sbm_getUserData\")\n};\n\n/**\n * sbm_getUserData의 submitdone 이벤트 핸들러\n */\nscwin.sbm_getUserData_submitdone = function (e) {\n txt_visibleRowCount.setValue(grd_example.getVisibleRowNum());\n};\n\nscwin.btn_setGridHeight_onclick = function (e) {\n var tmpHeight = ibx_gridHeight.getValue();\n\n if (!tmpHeight) {\n alert(\"변경할 그리드의 높이를 입력하세요.\");\n ibx_gridHeight.focus();\n return;\n }\n\n grd_example.setGridHeight(tmpHeight);\n grd_example.setScrollTop(0);\n grd_example2.setGridHeight(tmpHeight);\n grd_example2.setScrollTop(0);\n\n txt_visibleRowCount.setValue(grd_example.getVisibleRowNum());\n};"]],[["title","[GridVIew] 대용량 데이터의 통신 속도, 렌더링 시간 측정"],["tmp","성능\n[GridVIew] 대용량 데이터의 통신 속도, 렌더링 시간 측정\n〈\n/page/P00193.xmlsubmission\n〉\nGridview를 활용한 Sample 예제입니다.\n데이터를 조회 할 때 서버 시간, 렌더링 시간을 측정하는 예제입니다.\nselectbox에서 데이터량을 선택하고 조회 버튼을 클릭 시 데이터 조회와 함께 시간을 측정합니다.\n조작 방법\n1. selectbox에서 조회 할 대이터량을 선택하고 조회 버튼을 클릭해 데이터를 조회합니다.\n2. download 버튼을 클릭해 excel을 다운로드 합니다.\n3. clean 버튼을 클릭해 GridView의 데이터를 초기화 합니다.\n4. upload 버튼을 클릭합니다.\n5. 3번에서 download한 excel 파일을 선택해 데이터를 업로드 합니다.\n이 예제는 시연용 예제로 예제 가이드 문서가 포함되어 있지 않습니다.\n이 예제는 PC에 최적화 된 화면입니다. 모바일에서는 기능 일부가 작동하지 않을 수 있습니다.\nRender: msServer: msTotal :ms\n1만\n순번 상태 예탁계좌 예탁계좌명 보관기관 국가 주식 채권 기타 전체증권 기준일\n평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율 평균보관금액\n(USD) 점유율\n0 건\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function() {\n};\n\n// 시간 저장 변수\nscwin.startTime;\nscwin.serverEnd;\nscwin.renderEnd;\n\n// 점유율상세내역 버튼 클릭 이벤트\nscwin.btn_search_onclick = function (e) {\n var sbm = $p.getSubmission(\"sbm_gridview\");\n var select_val = acb_size.getValue();\n sbm.action = \"/data/sampleData/sampleData_json_gridview\"+select_val;\n // 시간 측정 시작\n scwin.startTime = new Date();\n $p.executeSubmission(\"sbm_gridview\");\n};\n\n// up 버튼 클릭 이벤트\nscwin.btn_up_onclick = function (e) {\n var options = {};\n\n options.useModalDisable = \"true\";\n options.headerExist = \"1\";\n\n grd.advancedExcelUpload(options);\n\n};\n\n// down 버튼 클릭 이벤트\nscwin.btn_down_onclick = function (e) {\n var options = {};\n\n options.fileName = \"excel.xlsx\";\n options.chunkRow = 10000;\n\n options.type = \"1\";\n // 컬럼 무브를 적용해 다운 받을지 여부\n options.columnMove = \"true\";\n // 스타일 사용 여부\n options.useStyle = \"true\";\n // subtotal 포함 여부\n options.useSubTotal = scwin.subTotVisble;\n // footer 포함 여부\n options.useFooter = \"true\";\n // colMerge(예탁계좌 컬럼) 포함 여부\n options.colMerge = \"true\";\n options.startRowIndex = 0;\n options.startColumnIndex = 0;\n options.showProcess = true;\n \n grd.advancedExcelDownload(options);\n};\n\n// 저장된 각 파트별 시간을 이용해 전체, 서버, 렌더 완료 시간을 계산하고 세팅한다.\nscwin.calcTime = function (e) {\n var total_time = scwin.renderEnd - scwin.startTime;\n var server_time = scwin.serverEnd - scwin.startTime\n var render_time = scwin.renderEnd - scwin.serverEnd;\n var result = {\n total : total_time,\n server : server_time,\n render : render_time\n }\n totalTime.setValue(total_time);\n serverTime.setValue(server_time);\n renderTime.setValue(render_time);\n\n return result;\n};\n\n// submit 완료 함수\nscwin.sbm_gridview1_submitdone = function(e) {\n // 서버 완료 시간\n scwin.serverEnd = new Date();\n // 조회한 데이터 -> 데이터리스트에 입력후 그리드 렌더링\n var jsonData = e.responseJSON.dlt_gridview;\n dlt_gridview.setJSON(jsonData);\n // 렌더링 완료 시간\n scwin.renderEnd = new Date();\n // 측정된 시간 표기\n scwin.calcTime();\n};\n\n// 데이터 초기화\nscwin.btn_clear_onclick = function(e) {\n dlt_gridview.setJSON([]);\n};"]],[["title","[GridView] 동적 셀 병합 비교 - 방식과 성능 비교"],["tmp",""]],[["title","DataList와 GridView의 CUD API 속도 비교"],["tmp",""]],[["title","컴포넌트의 Plugin Name"],["tmp","부록\n컴포넌트의 Plugin Name\n〈\n/page/P00087.xmlAppendixcomponentNamecomponentType컴포넌트명\n〉\n컴포넌트의 Plugin Name입니다.\n컴포넌트의 method \"getPluginName\"를 호출했을 때의 반환 예시입니다.\n표로 보기\nTextArea로 보기\n표로 보기\nAccordion\naccordion\nAliasDataList\naliasDataList\nAliasDataMap\naliasDataMap\nAliasLinkedDataList\naliasLinkedDataList\nAnchor\nanchor\nAutoComplete\nautoComplete\nCalendar\ncalendar\nCheckbox\ncheckbox\nCheckcombobox\ncheckcombobox\nDataList\ndataList\nDataMap\ndataMap\nDatePicker\ndatePicker\nEditor\neditor\nFliptoggle\nfliptoggle\nFloatingLayer\nfloatingLayer\nFusionchart\nfusionchart\nFwBulletChart\nfwBulletChart\nFwFunnelChart\nfwFunnelChart\nFwGanttChart\nfwGanttChart\nFwGaugeChart\nfwGaugeChart\nFwPyramidChart\nfwPyramidChart\nFwRealtimeChart\nfwRealtimeChart\nFwSparkChart\nfwSparkChart\nGenerator\ngenerator\nGridView\ngridView\nGroup\ngroup\nIframe\niframe\nImage\nimage\nInput\ninput\nInputCalendar\ninputCalendar\nLinkedDataList\nlinkedDataList\nMapchart\nmapchart\nMultiselect\nmultiselect\nMultiupload\nmultiupload\nOutput\noutput\nPageControl\npageControl\nPageInherit\npageInherit\nPageList\npageList\nPivot\npivot\nProgressbar\nprogressbar\nRadio\nradio\nRepeat\nrepeat\nRoundRectangle\nroundRectangle\nScheduleCalendar\nscheduleCalendar\nScrollView\nscrollView\nSearchbox\nsearchbox\nSelectbox\nselectbox\nSlideHide\nslideHide\nSlider\nslider\nSpan\nspan\nSpinner\nspinner\nSwitch\nSwitch\nTabControl\ntabControl\nTextarea\ntextarea\nTextbox\ntextbox\nTreeview\ntreeview\nTrigger\ntrigger\nUpload\nupload\nWframe\nwframe\nWidgetContainer\nwidgetContainer\nWindowContainer\nwindowContainer\n예제 소스\nScript\nBody\nDataCollection\nCSS\nOriginal Source\nHistory\nScript\nscwin.onpageload = function () {\n scwin.dispGenerator();\n};\n\nscwin.dispGenerator = function () {\n var arrData = [\"Accordion\", \"accordion\", \"AliasDataList\", \"aliasDataList\", \"AliasDataMap\", \"aliasDataMap\", \"AliasLinkedDataList\", \"aliasLinkedDataList\", \"Anchor\", \"anchor\", \"AutoComplete\", \"autoComplete\", \"Calendar\", \"calendar\", \"Checkbox\", \"checkbox\", \"Checkcombobox\", \"checkcombobox\", \"DataList\", \"dataList\", \"DataMap\", \"dataMap\", \"DatePicker\", \"datePicker\", \"Editor\", \"editor\", \"Fliptoggle\", \"fliptoggle\", \"FloatingLayer\", \"floatingLayer\", \"Fusionchart\", \"fusionchart\", \"FwBulletChart\", \"fwBulletChart\", \"FwFunnelChart\", \"fwFunnelChart\", \"FwGanttChart\", \"fwGanttChart\", \"FwGaugeChart\", \"fwGaugeChart\", \"FwPyramidChart\", \"fwPyramidChart\", \"FwRealtimeChart\", \"fwRealtimeChart\", \"FwSparkChart\", \"fwSparkChart\", \"Generator\", \"generator\", \"GridView\", \"gridView\", \"Group\", \"group\", \"Iframe\", \"iframe\", \"Image\", \"image\", \"Input\", \"input\", \"InputCalendar\", \"inputCalendar\", \"LinkedDataList\", \"linkedDataList\", \"Mapchart\", \"mapchart\", \"Multiselect\", \"multiselect\", \"Multiupload\", \"multiupload\", \"Output\", \"output\", \"PageControl\", \"pageControl\", \"PageInherit\", \"pageInherit\", \"PageList\", \"pageList\", \"Pivot\", \"pivot\", \"Progressbar\", \"progressbar\", \"Radio\", \"radio\", \"Repeat\", \"repeat\", \"RoundRectangle\", \"roundRectangle\", \"ScheduleCalendar\", \"scheduleCalendar\", \"ScrollView\", \"scrollView\", \"Searchbox\", \"searchbox\", \"Selectbox\", \"selectbox\", \"SlideHide\", \"slideHide\", \"Slider\", \"slider\", \"Span\", \"span\", \"Spinner\", \"spinner\", \"Switch\", \"Switch\", \"TabControl\", \"tabControl\", \"Textarea\", \"textarea\", \"Textbox\", \"textbox\", \"Treeview\", \"treeview\", \"Trigger\", \"trigger\", \"Upload\", \"upload\", \"Wframe\", \"wframe\", \"WidgetContainer\", \"widgetContainer\", \"WindowContainer\", \"windowContainer\",];\n var _cmpGen = gen_exam1;\n var i, i_max;\n var strTbxValue = \"\";\n var strLabel, strValue;\n\n for (i = 0, i_max = arrData.length / 2; i < i_max; i++) {\n strLabel = arrData[i * 2];\n strValue = arrData[i * 2 + 1];\n\n _cmpGen.insertChild();\n _cmpGen.getChild(i, \"tbx_label\").setValue(strLabel);\n _cmpGen.getChild(i, \"tbx_pluginName\").setValue(strValue);\n\n if (i > 0) { strTbxValue += \"\\n\" }\n strTbxValue += strLabel + ' : \"' + strValue;\n }\n\n txa_pluginNames.setValue(strTbxValue);\n};"]]]}